/*! For license information please see zibox2-bundle.js.LICENSE.txt */
(()=>{var __webpack_modules__={"./node_modules/axios/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{eval('module.exports = __webpack_require__(/*! ./lib/axios */ "./node_modules/axios/lib/axios.js");\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/axios/index.js?')},"./node_modules/axios/lib/adapters/xhr.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\nvar settle = __webpack_require__(/*! ./../core/settle */ \"./node_modules/axios/lib/core/settle.js\");\nvar cookies = __webpack_require__(/*! ./../helpers/cookies */ \"./node_modules/axios/lib/helpers/cookies.js\");\nvar buildURL = __webpack_require__(/*! ./../helpers/buildURL */ \"./node_modules/axios/lib/helpers/buildURL.js\");\nvar buildFullPath = __webpack_require__(/*! ../core/buildFullPath */ \"./node_modules/axios/lib/core/buildFullPath.js\");\nvar parseHeaders = __webpack_require__(/*! ./../helpers/parseHeaders */ \"./node_modules/axios/lib/helpers/parseHeaders.js\");\nvar isURLSameOrigin = __webpack_require__(/*! ./../helpers/isURLSameOrigin */ \"./node_modules/axios/lib/helpers/isURLSameOrigin.js\");\nvar createError = __webpack_require__(/*! ../core/createError */ \"./node_modules/axios/lib/core/createError.js\");\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request.onreadystatechange = function handleLoad() {\n      if (!request || request.readyState !== 4) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(timeoutErrorMessage, config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/axios/lib/adapters/xhr.js?")},"./node_modules/axios/lib/axios.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval('\n\nvar utils = __webpack_require__(/*! ./utils */ "./node_modules/axios/lib/utils.js");\nvar bind = __webpack_require__(/*! ./helpers/bind */ "./node_modules/axios/lib/helpers/bind.js");\nvar Axios = __webpack_require__(/*! ./core/Axios */ "./node_modules/axios/lib/core/Axios.js");\nvar mergeConfig = __webpack_require__(/*! ./core/mergeConfig */ "./node_modules/axios/lib/core/mergeConfig.js");\nvar defaults = __webpack_require__(/*! ./defaults */ "./node_modules/axios/lib/defaults.js");\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = __webpack_require__(/*! ./cancel/Cancel */ "./node_modules/axios/lib/cancel/Cancel.js");\naxios.CancelToken = __webpack_require__(/*! ./cancel/CancelToken */ "./node_modules/axios/lib/cancel/CancelToken.js");\naxios.isCancel = __webpack_require__(/*! ./cancel/isCancel */ "./node_modules/axios/lib/cancel/isCancel.js");\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = __webpack_require__(/*! ./helpers/spread */ "./node_modules/axios/lib/helpers/spread.js");\n\n// Expose isAxiosError\naxios.isAxiosError = __webpack_require__(/*! ./helpers/isAxiosError */ "./node_modules/axios/lib/helpers/isAxiosError.js");\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/axios/lib/axios.js?')},"./node_modules/axios/lib/cancel/Cancel.js":module=>{"use strict";eval("\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/axios/lib/cancel/Cancel.js?")},"./node_modules/axios/lib/cancel/CancelToken.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval("\n\nvar Cancel = __webpack_require__(/*! ./Cancel */ \"./node_modules/axios/lib/cancel/Cancel.js\");\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/axios/lib/cancel/CancelToken.js?")},"./node_modules/axios/lib/cancel/isCancel.js":module=>{"use strict";eval("\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/axios/lib/cancel/isCancel.js?")},"./node_modules/axios/lib/core/Axios.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\nvar buildURL = __webpack_require__(/*! ../helpers/buildURL */ \"./node_modules/axios/lib/helpers/buildURL.js\");\nvar InterceptorManager = __webpack_require__(/*! ./InterceptorManager */ \"./node_modules/axios/lib/core/InterceptorManager.js\");\nvar dispatchRequest = __webpack_require__(/*! ./dispatchRequest */ \"./node_modules/axios/lib/core/dispatchRequest.js\");\nvar mergeConfig = __webpack_require__(/*! ./mergeConfig */ \"./node_modules/axios/lib/core/mergeConfig.js\");\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/axios/lib/core/Axios.js?")},"./node_modules/axios/lib/core/InterceptorManager.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval('\n\nvar utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/axios/lib/core/InterceptorManager.js?')},"./node_modules/axios/lib/core/buildFullPath.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval('\n\nvar isAbsoluteURL = __webpack_require__(/*! ../helpers/isAbsoluteURL */ "./node_modules/axios/lib/helpers/isAbsoluteURL.js");\nvar combineURLs = __webpack_require__(/*! ../helpers/combineURLs */ "./node_modules/axios/lib/helpers/combineURLs.js");\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/axios/lib/core/buildFullPath.js?')},"./node_modules/axios/lib/core/createError.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval("\n\nvar enhanceError = __webpack_require__(/*! ./enhanceError */ \"./node_modules/axios/lib/core/enhanceError.js\");\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/axios/lib/core/createError.js?")},"./node_modules/axios/lib/core/dispatchRequest.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\nvar transformData = __webpack_require__(/*! ./transformData */ \"./node_modules/axios/lib/core/transformData.js\");\nvar isCancel = __webpack_require__(/*! ../cancel/isCancel */ \"./node_modules/axios/lib/cancel/isCancel.js\");\nvar defaults = __webpack_require__(/*! ../defaults */ \"./node_modules/axios/lib/defaults.js\");\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/axios/lib/core/dispatchRequest.js?")},"./node_modules/axios/lib/core/enhanceError.js":module=>{"use strict";eval("\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code\n    };\n  };\n  return error;\n};\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/axios/lib/core/enhanceError.js?")},"./node_modules/axios/lib/core/mergeConfig.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"./node_modules/axios/lib/utils.js\");\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  var valueFromConfig2Keys = ['url', 'method', 'data'];\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy', 'params'];\n  var defaultToConfig2Keys = [\n    'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',\n    'timeout', 'timeoutMessage', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'decompress',\n    'maxContentLength', 'maxBodyLength', 'maxRedirects', 'transport', 'httpAgent',\n    'httpsAgent', 'cancelToken', 'socketPath', 'responseEncoding'\n  ];\n  var directMergeKeys = ['validateStatus'];\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(undefined, config2[prop]);\n    }\n  });\n\n  utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);\n\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  });\n\n  utils.forEach(directMergeKeys, function merge(prop) {\n    if (prop in config2) {\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  });\n\n  var axiosKeys = valueFromConfig2Keys\n    .concat(mergeDeepPropertiesKeys)\n    .concat(defaultToConfig2Keys)\n    .concat(directMergeKeys);\n\n  var otherKeys = Object\n    .keys(config1)\n    .concat(Object.keys(config2))\n    .filter(function filterAxiosKeys(key) {\n      return axiosKeys.indexOf(key) === -1;\n    });\n\n  utils.forEach(otherKeys, mergeDeepProperties);\n\n  return config;\n};\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/axios/lib/core/mergeConfig.js?")},"./node_modules/axios/lib/core/settle.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval("\n\nvar createError = __webpack_require__(/*! ./createError */ \"./node_modules/axios/lib/core/createError.js\");\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/axios/lib/core/settle.js?")},"./node_modules/axios/lib/core/transformData.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval('\n\nvar utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/axios/lib/core/transformData.js?')},"./node_modules/axios/lib/defaults.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval("\n\nvar utils = __webpack_require__(/*! ./utils */ \"./node_modules/axios/lib/utils.js\");\nvar normalizeHeaderName = __webpack_require__(/*! ./helpers/normalizeHeaderName */ \"./node_modules/axios/lib/helpers/normalizeHeaderName.js\");\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = __webpack_require__(/*! ./adapters/xhr */ \"./node_modules/axios/lib/adapters/xhr.js\");\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = __webpack_require__(/*! ./adapters/http */ \"./node_modules/axios/lib/adapters/xhr.js\");\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/axios/lib/defaults.js?")},"./node_modules/axios/lib/helpers/bind.js":module=>{"use strict";eval("\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/axios/lib/helpers/bind.js?")},"./node_modules/axios/lib/helpers/buildURL.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/axios/lib/helpers/buildURL.js?")},"./node_modules/axios/lib/helpers/combineURLs.js":module=>{"use strict";eval("\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/axios/lib/helpers/combineURLs.js?")},"./node_modules/axios/lib/helpers/cookies.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/axios/lib/helpers/cookies.js?")},"./node_modules/axios/lib/helpers/isAbsoluteURL.js":module=>{"use strict";eval('\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/axios/lib/helpers/isAbsoluteURL.js?')},"./node_modules/axios/lib/helpers/isAxiosError.js":module=>{"use strict";eval("\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return (typeof payload === 'object') && (payload.isAxiosError === true);\n};\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/axios/lib/helpers/isAxiosError.js?")},"./node_modules/axios/lib/helpers/isURLSameOrigin.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/axios/lib/helpers/isURLSameOrigin.js?")},"./node_modules/axios/lib/helpers/normalizeHeaderName.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval('\n\nvar utils = __webpack_require__(/*! ../utils */ "./node_modules/axios/lib/utils.js");\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/axios/lib/helpers/normalizeHeaderName.js?')},"./node_modules/axios/lib/helpers/parseHeaders.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/axios/lib/helpers/parseHeaders.js?")},"./node_modules/axios/lib/helpers/spread.js":module=>{"use strict";eval("\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/axios/lib/helpers/spread.js?")},"./node_modules/axios/lib/utils.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval("\n\nvar bind = __webpack_require__(/*! ./helpers/bind */ \"./node_modules/axios/lib/helpers/bind.js\");\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (toString.call(val) !== '[object Object]') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM\n};\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/axios/lib/utils.js?")},"./node_modules/babel-core/lib/transformation/file/options/config.js":module=>{"use strict";eval('\n\nmodule.exports = {\n  filename: {\n    type: "filename",\n    description: "filename to use when reading from stdin - this will be used in source-maps, errors etc",\n    default: "unknown",\n    shorthand: "f"\n  },\n\n  filenameRelative: {\n    hidden: true,\n    type: "string"\n  },\n\n  inputSourceMap: {\n    hidden: true\n  },\n\n  env: {\n    hidden: true,\n    default: {}\n  },\n\n  mode: {\n    description: "",\n    hidden: true\n  },\n\n  retainLines: {\n    type: "boolean",\n    default: false,\n    description: "retain line numbers - will result in really ugly code"\n  },\n\n  highlightCode: {\n    description: "enable/disable ANSI syntax highlighting of code frames (on by default)",\n    type: "boolean",\n    default: true\n  },\n\n  suppressDeprecationMessages: {\n    type: "boolean",\n    default: false,\n    hidden: true\n  },\n\n  presets: {\n    type: "list",\n    description: "",\n    default: []\n  },\n\n  plugins: {\n    type: "list",\n    default: [],\n    description: ""\n  },\n\n  ignore: {\n    type: "list",\n    description: "list of glob paths to **not** compile",\n    default: []\n  },\n\n  only: {\n    type: "list",\n    description: "list of glob paths to **only** compile"\n  },\n\n  code: {\n    hidden: true,\n    default: true,\n    type: "boolean"\n  },\n\n  metadata: {\n    hidden: true,\n    default: true,\n    type: "boolean"\n  },\n\n  ast: {\n    hidden: true,\n    default: true,\n    type: "boolean"\n  },\n\n  extends: {\n    type: "string",\n    hidden: true\n  },\n\n  comments: {\n    type: "boolean",\n    default: true,\n    description: "write comments to generated output (true by default)"\n  },\n\n  shouldPrintComment: {\n    hidden: true,\n    description: "optional callback to control whether a comment should be inserted, when this is used the comments option is ignored"\n  },\n\n  wrapPluginVisitorMethod: {\n    hidden: true,\n    description: "optional callback to wrap all visitor methods"\n  },\n\n  compact: {\n    type: "booleanString",\n    default: "auto",\n    description: "do not include superfluous whitespace characters and line terminators [true|false|auto]"\n  },\n\n  minified: {\n    type: "boolean",\n    default: false,\n    description: "save as much bytes when printing [true|false]"\n  },\n\n  sourceMap: {\n    alias: "sourceMaps",\n    hidden: true\n  },\n\n  sourceMaps: {\n    type: "booleanString",\n    description: "[true|false|inline]",\n    default: false,\n    shorthand: "s"\n  },\n\n  sourceMapTarget: {\n    type: "string",\n    description: "set `file` on returned source map"\n  },\n\n  sourceFileName: {\n    type: "string",\n    description: "set `sources[0]` on returned source map"\n  },\n\n  sourceRoot: {\n    type: "filename",\n    description: "the root from which all sources are relative"\n  },\n\n  babelrc: {\n    description: "Whether or not to look up .babelrc and .babelignore files",\n    type: "boolean",\n    default: true\n  },\n\n  sourceType: {\n    description: "",\n    default: "module"\n  },\n\n  auxiliaryCommentBefore: {\n    type: "string",\n    description: "print a comment before any injected non-user code"\n  },\n\n  auxiliaryCommentAfter: {\n    type: "string",\n    description: "print a comment after any injected non-user code"\n  },\n\n  resolveModuleSource: {\n    hidden: true\n  },\n\n  getModuleId: {\n    hidden: true\n  },\n\n  moduleRoot: {\n    type: "filename",\n    description: "optional prefix for the AMD module formatter that will be prepend to the filename on module definitions"\n  },\n\n  moduleIds: {\n    type: "boolean",\n    default: false,\n    shorthand: "M",\n    description: "insert an explicit id for modules"\n  },\n\n  moduleId: {\n    description: "specify a custom name for module ids",\n    type: "string"\n  },\n\n  passPerPreset: {\n    description: "Whether to spawn a traversal pass per a preset. By default all presets are merged.",\n    type: "boolean",\n    default: false,\n    hidden: true\n  },\n\n  parserOpts: {\n    description: "Options to pass into the parser, or to change parsers (parserOpts.parser)",\n    default: false\n  },\n\n  generatorOpts: {\n    description: "Options to pass into the generator, or to change generators (generatorOpts.generator)",\n    default: false\n  }\n};\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/babel-core/lib/transformation/file/options/config.js?')},"./public/javascripts/MediaStreamRecorder.js":(module,exports,__webpack_require__)=>{"use strict";eval('var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n// const { log } = require(\'../../utils/logger\')\n// Last time updated: 2017-08-31 4:03:22 AM UTC\n\n// __________________________\n// MediaStreamRecorder v1.3.4\n\n// Open-Sourced: https://github.com/streamproc/MediaStreamRecorder\n\n// --------------------------------------------------\n// Muaz Khan     - www.MuazKhan.com\n// MIT License   - www.WebRTC-Experiment.com/licence\n// --------------------------------------------------\n\n// ______________________\n// MediaStreamRecorder.js\n\nvar _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };\n\nfunction MediaStreamRecorder(mediaStream) {\n    if (!mediaStream) {\n        throw "MediaStream is mandatory.";\n    }\n\n    // void start(optional long timeSlice)\n    // timestamp to fire "ondataavailable"\n    // 여기\n    this.start = function (timeSlice) {\n        var Recorder;\n        // 여기 녹취3\n        console.log("MediaStreamRecorder 녹취 시작");\n        if (typeof MediaRecorder !== "undefined") {\n            Recorder = MediaRecorderWrapper;\n        } else if (IsChrome || IsOpera || IsEdge) {\n            if (this.mimeType.indexOf("video") !== -1) {\n                Recorder = WhammyRecorder;\n            } else if (this.mimeType.indexOf("audio") !== -1) {\n                Recorder = StereoAudioRecorder;\n            }\n        }\n\n        // video recorder (in GIF format)\n        if (this.mimeType === "image/gif") {\n            Recorder = GifRecorder;\n        }\n\n        // audio/wav is supported only via StereoAudioRecorder\n        // audio/pcm (int16) is supported only via StereoAudioRecorder\n        if (this.mimeType === "audio/wav" || this.mimeType === "audio/pcm") {\n            console.log("Recorder = StereoAudioRecorder");\n            Recorder = StereoAudioRecorder;\n        }\n\n        // allows forcing StereoAudioRecorder.js on Edge/Firefox\n        if (this.recorderType) {\n            Recorder = this.recorderType;\n        }\n\n        mediaRecorder = new Recorder(mediaStream);\n        mediaRecorder.blobs = [];\n\n        var self = this;\n        mediaRecorder.ondataavailable = function (data) {\n            console.log("data: " + data); // 여기 녹취9\n\n            mediaRecorder.blobs.push(data);\n            self.ondataavailable(data);\n        };\n        mediaRecorder.onstop = this.onstop;\n        mediaRecorder.onStartedDrawingNonBlankFrames = this.onStartedDrawingNonBlankFrames;\n\n        // Merge all data-types except "function"\n        mediaRecorder = mergeProps(mediaRecorder, this);\n        mediaRecorder.start(timeSlice);\n    };\n\n    this.onStartedDrawingNonBlankFrames = function () {};\n    this.clearOldRecordedFrames = function () {\n        if (!mediaRecorder) {\n            return;\n        }\n\n        mediaRecorder.clearOldRecordedFrames();\n    };\n\n    this.stop = function () {\n        // 여기 녹취12\n        console.log("stop..");\n        if (mediaRecorder) {\n            mediaRecorder.stop();\n            return true;\n        }\n        return false;\n    };\n\n    this.ondataavailable = function (blob) {\n        if (this.disableLogs) return;\n        console.log("ondataavailable..", blob);\n    };\n\n    this.onstop = function (error) {\n        console.warn("stopped..", error);\n    };\n\n    this.save = async function (file, fileName) {\n        // 여기 녹취13\n        console.log("파일 저장!!!", file, fileName);\n        if (!file) {\n            console.log("원래", mediaRecorder.blobs, mediaRecorder.blobs[0].type, mediaRecorder.blobs[0]);\n            if (!mediaRecorder) {\n                return;\n            }\n            //맨 앞의 블랍 데이터를 제외한 나머지 블랍 데이터의 헤더 부분 삭제 처리\n            var blobLength = mediaRecorder.blobs.length;\n            if (blobLength > 1) {\n                console.log("========================================[헤더 제거]========================================");\n                for (var i = 1; i < blobLength; i++) {\n                    // console.log(\'원래 블랍:\', mediaRecorder.blobs[i], \'슬라이싱 블랍:\', mediaRecorder.blobs[i].slice(44))\n                    mediaRecorder.blobs[i] = mediaRecorder.blobs[i].slice(44);\n                }\n            }\n\n            var mediaRecorderBlobsWithOnlyOneHeader = [];\n            var temp = new Blob(mediaRecorder.blobs, {\n                type: "audio/wav"\n            });\n            mediaRecorderBlobsWithOnlyOneHeader.push(temp);\n            mediaRecorder.blobs = mediaRecorderBlobsWithOnlyOneHeader;\n            console.log("[헤더 제거 이후]:", mediaRecorder.blobs, mediaRecorder.blobs[0]); //, mediaRecorder.blobs[0].arrayBuffer()\n\n            //헤더 제거 된 버퍼로 블랍 데이터를 생성\n            var bufferWithOneHeader = await mediaRecorder.blobs[0].arrayBuffer();\n            var dataView = new DataView(bufferWithOneHeader);\n            dataView.setUint32(40, bufferWithOneHeader.byteLength, true);\n            console.log("데이터 뷰 길이체크:", dataView.byteLength);\n            mediaRecorder.blobs[0] = dataView.buffer;\n            var tempBlobData = new Blob([dataView.buffer], {\n                type: "audio/wav"\n            });\n            mediaRecorder.blobs = [];\n            mediaRecorder.blobs.push(tempBlobData);\n            console.log("[헤더 제거 된 블랍]:", mediaRecorder.blobs);\n\n            // 여기 녹취14 ConcatenateBlobs로\n            ConcatenateBlobs(mediaRecorder.blobs, mediaRecorder.blobs[0].type, function (concatenatedBlob) {\n                // 여기 녹취18 invokeSaveAsDialog로\n                console.log("컨케트블랍내부에서 인보크 호출", mediaRecorder.blobs, concatenatedBlob);\n                return invokeSaveAsDialog(concatenatedBlob, fileName);\n            });\n            return;\n        }\n        console.log("인보크");\n        invokeSaveAsDialog(file, fileName);\n    };\n\n    this.pause = function () {\n        try {\n            if (!mediaRecorder) {\n                return false;\n            }\n            console.log("실제 pause되는곳:", mediaRecorder.state);\n\n            mediaRecorder.pause();\n            if (this.disableLogs) return false;\n            console.log("Paused recording.", this.mimeType || mediaRecorder.mimeType);\n            return true;\n        } catch (err) {\n            console.error("[Audio pause Error]:", err);\n            return false;\n        }\n    };\n\n    this.resume = function () {\n        //실제 실행되는 곳\n        try {\n            if (!mediaRecorder) {\n                return false;\n            }\n            console.log("실제 resume되는곳:", mediaRecorder.state);\n            mediaRecorder.resume();\n            if (this.disableLogs) return false;\n            console.log("Resumed recording.", this.mimeType || mediaRecorder.mimeType);\n            return true;\n        } catch (err) {\n            console.error("[Audio resume Error]:", err);\n            return false;\n        }\n    };\n\n    // StereoAudioRecorder || WhammyRecorder || MediaRecorderWrapper || GifRecorder\n    this.recorderType = null;\n\n    // video/webm or audio/webm or audio/ogg or audio/wav\n    this.mimeType = "video/webm";\n\n    // logs are enabled by default\n    this.disableLogs = false;\n\n    // Reference to "MediaRecorder.js"\n    var mediaRecorder;\n}\n\n// ______________________\n// MultiStreamRecorder.js\n\nfunction MultiStreamRecorder(arrayOfMediaStreams, options) {\n    arrayOfMediaStreams = arrayOfMediaStreams || [];\n\n    if (arrayOfMediaStreams instanceof MediaStream) {\n        arrayOfMediaStreams = [arrayOfMediaStreams];\n    }\n\n    var self = this;\n\n    var mixer;\n    var mediaRecorder;\n\n    options = options || {\n        mimeType: "video/webm",\n        video: {\n            width: 360,\n            height: 240\n        }\n    };\n\n    if (!options.frameInterval) {\n        options.frameInterval = 10;\n    }\n\n    if (!options.video) {\n        options.video = {};\n    }\n\n    if (!options.video.width) {\n        options.video.width = 360;\n    }\n\n    if (!options.video.height) {\n        options.video.height = 240;\n    }\n\n    this.start = function (timeSlice) {\n        // github/muaz-khan/MultiStreamsMixer\n        mixer = new MultiStreamsMixer(arrayOfMediaStreams);\n\n        if (getVideoTracks().length) {\n            mixer.frameInterval = options.frameInterval || 10;\n            mixer.width = options.video.width || 360;\n            mixer.height = options.video.height || 240;\n            mixer.startDrawingFrames();\n        }\n\n        if (typeof self.previewStream === "function") {\n            self.previewStream(mixer.getMixedStream());\n        }\n\n        // record using MediaRecorder API\n        mediaRecorder = new MediaStreamRecorder(mixer.getMixedStream());\n\n        for (var prop in self) {\n            if (typeof self[prop] !== "function") {\n                mediaRecorder[prop] = self[prop];\n            }\n        }\n\n        mediaRecorder.ondataavailable = function (blob) {\n            self.ondataavailable(blob);\n        };\n\n        mediaRecorder.onstop = self.onstop;\n        mediaRecorder.start(timeSlice);\n    };\n\n    function getVideoTracks() {\n        var tracks = [];\n        arrayOfMediaStreams.forEach(function (stream) {\n            stream.getVideoTracks().forEach(function (track) {\n                tracks.push(track);\n            });\n        });\n        return tracks;\n    }\n\n    this.stop = function (callback) {\n        if (!mediaRecorder) {\n            return;\n        }\n\n        mediaRecorder.stop(function (blob) {\n            callback(blob);\n        });\n    };\n\n    this.pause = function () {\n        if (mediaRecorder) {\n            mediaRecorder.pause();\n        }\n    };\n\n    this.resume = function () {\n        if (mediaRecorder) {\n            mediaRecorder.resume();\n        }\n    };\n\n    this.clearRecordedData = function () {\n        if (mediaRecorder) {\n            mediaRecorder.clearRecordedData();\n            mediaRecorder = null;\n        }\n\n        if (mixer) {\n            mixer.releaseStreams();\n            mixer = null;\n        }\n    };\n\n    this.addStreams = this.addStream = function (streams) {\n        if (!streams) {\n            throw "First parameter is required.";\n        }\n\n        if (!(streams instanceof Array)) {\n            streams = [streams];\n        }\n\n        arrayOfMediaStreams.concat(streams);\n\n        if (!mediaRecorder || !mixer) {\n            return;\n        }\n\n        mixer.appendStreams(streams);\n    };\n\n    this.resetVideoStreams = function (streams) {\n        if (!mixer) {\n            return;\n        }\n\n        if (streams && !(streams instanceof Array)) {\n            streams = [streams];\n        }\n\n        mixer.resetVideoStreams(streams);\n    };\n\n    this.ondataavailable = function (blob) {\n        if (self.disableLogs) {\n            return;\n        }\n\n        console.log("ondataavailable", blob);\n    };\n\n    this.onstop = function () {};\n\n    // for debugging\n    this.name = "MultiStreamRecorder";\n    this.toString = function () {\n        return this.name;\n    };\n}\n\nif (typeof MediaStreamRecorder !== "undefined") {\n    MediaStreamRecorder.MultiStreamRecorder = MultiStreamRecorder;\n}\n\n// Last time updated: 2017-08-31 2:56:12 AM UTC\n\n// ________________________\n// MultiStreamsMixer v1.0.2\n\n// Open-Sourced: https://github.com/muaz-khan/MultiStreamsMixer\n\n// --------------------------------------------------\n// Muaz Khan     - www.MuazKhan.com\n// MIT License   - www.WebRTC-Experiment.com/licence\n// --------------------------------------------------\n\nfunction MultiStreamsMixer(arrayOfMediaStreams) {\n    // requires: chrome://flags/#enable-experimental-web-platform-features\n\n    var videos = [];\n    var isStopDrawingFrames = false;\n\n    var canvas = document.createElement("canvas");\n    var context = canvas.getContext("2d");\n    canvas.style = "opacity:0;position:absolute;z-index:-1;top: -100000000;left:-1000000000; margin-top:-1000000000;margin-left:-1000000000;";\n    (document.body || document.documentElement).appendChild(canvas);\n\n    this.disableLogs = false;\n    this.frameInterval = 10;\n\n    this.width = 360;\n    this.height = 240;\n\n    // use gain node to prevent echo\n    this.useGainNode = true;\n\n    var self = this;\n\n    // _____________________________\n    // Cross-Browser-Declarations.js\n\n    // WebAudio API representer\n    var AudioContext = window.AudioContext;\n\n    if (typeof AudioContext === "undefined") {\n        if (typeof webkitAudioContext !== "undefined") {\n            /*global AudioContext:true */\n            AudioContext = webkitAudioContext;\n        }\n\n        if (typeof mozAudioContext !== "undefined") {\n            /*global AudioContext:true */\n            AudioContext = mozAudioContext;\n        }\n    }\n\n    /*jshint -W079 */\n    var URL = window.URL;\n\n    if (typeof URL === "undefined" && typeof webkitURL !== "undefined") {\n        /*global URL:true */\n        URL = webkitURL;\n    }\n\n    if (typeof navigator !== "undefined" && typeof navigator.getUserMedia === "undefined") {\n        // maybe window.navigator?\n        if (typeof navigator.webkitGetUserMedia !== "undefined") {\n            navigator.getUserMedia = navigator.webkitGetUserMedia;\n        }\n\n        if (typeof navigator.mozGetUserMedia !== "undefined") {\n            navigator.getUserMedia = navigator.mozGetUserMedia;\n        }\n    }\n\n    var MediaStream = window.MediaStream;\n\n    if (typeof MediaStream === "undefined" && typeof webkitMediaStream !== "undefined") {\n        MediaStream = webkitMediaStream;\n    }\n\n    /*global MediaStream:true */\n    if (typeof MediaStream !== "undefined") {\n        if (!("getVideoTracks" in MediaStream.prototype)) {\n            MediaStream.prototype.getVideoTracks = function () {\n                if (!this.getTracks) {\n                    return [];\n                }\n\n                var tracks = [];\n                this.getTracks.forEach(function (track) {\n                    if (track.kind.toString().indexOf("video") !== -1) {\n                        tracks.push(track);\n                    }\n                });\n                return tracks;\n            };\n\n            MediaStream.prototype.getAudioTracks = function () {\n                if (!this.getTracks) {\n                    return [];\n                }\n\n                var tracks = [];\n                this.getTracks.forEach(function (track) {\n                    if (track.kind.toString().indexOf("audio") !== -1) {\n                        tracks.push(track);\n                    }\n                });\n                return tracks;\n            };\n        }\n\n        // override "stop" method for all browsers\n        if (typeof MediaStream.prototype.stop === "undefined") {\n            MediaStream.prototype.stop = function () {\n                this.getTracks().forEach(function (track) {\n                    track.stop();\n                });\n            };\n        }\n    }\n\n    var Storage = {};\n\n    if (typeof AudioContext !== "undefined") {\n        Storage.AudioContext = AudioContext;\n    } else if (typeof webkitAudioContext !== "undefined") {\n        Storage.AudioContext = webkitAudioContext;\n    }\n\n    this.startDrawingFrames = function () {\n        drawVideosToCanvas();\n    };\n\n    function drawVideosToCanvas() {\n        if (isStopDrawingFrames) {\n            return;\n        }\n\n        var videosLength = videos.length;\n\n        var fullcanvas = false;\n        var remaining = [];\n        videos.forEach(function (video) {\n            if (!video.stream) {\n                video.stream = {};\n            }\n\n            if (video.stream.fullcanvas) {\n                fullcanvas = video;\n            } else {\n                remaining.push(video);\n            }\n        });\n\n        if (fullcanvas) {\n            canvas.width = fullcanvas.stream.width;\n            canvas.height = fullcanvas.stream.height;\n        } else if (remaining.length) {\n            canvas.width = videosLength > 1 ? remaining[0].width * 2 : remaining[0].width;\n            canvas.height = videosLength > 2 ? remaining[0].height * 2 : remaining[0].height;\n        } else {\n            canvas.width = self.width || 360;\n            canvas.height = self.height || 240;\n        }\n\n        if (fullcanvas && fullcanvas instanceof HTMLVideoElement) {\n            drawImage(fullcanvas);\n        }\n\n        remaining.forEach(function (video, idx) {\n            drawImage(video, idx);\n        });\n\n        setTimeout(drawVideosToCanvas, self.frameInterval);\n    }\n\n    function drawImage(video, idx) {\n        if (isStopDrawingFrames) {\n            return;\n        }\n\n        var x = 0;\n        var y = 0;\n        var width = video.width;\n        var height = video.height;\n\n        if (idx === 1) {\n            x = video.width;\n        }\n\n        if (idx === 2) {\n            y = video.height;\n        }\n\n        if (idx === 3) {\n            x = video.width;\n            y = video.height;\n        }\n\n        if (typeof video.stream.left !== "undefined") {\n            x = video.stream.left;\n        }\n\n        if (typeof video.stream.top !== "undefined") {\n            y = video.stream.top;\n        }\n\n        if (typeof video.stream.width !== "undefined") {\n            width = video.stream.width;\n        }\n\n        if (typeof video.stream.height !== "undefined") {\n            height = video.stream.height;\n        }\n\n        context.drawImage(video, x, y, width, height);\n\n        if (typeof video.stream.onRender === "function") {\n            video.stream.onRender(context, x, y, width, height, idx);\n        }\n    }\n\n    function getMixedStream() {\n        isStopDrawingFrames = false;\n        var mixedVideoStream = getMixedVideoStream();\n\n        var mixedAudioStream = getMixedAudioStream();\n        if (mixedAudioStream) {\n            mixedAudioStream.getAudioTracks().forEach(function (track) {\n                mixedVideoStream.addTrack(track);\n            });\n        }\n\n        var fullcanvas;\n        arrayOfMediaStreams.forEach(function (stream) {\n            if (stream.fullcanvas) {\n                fullcanvas = true;\n            }\n        });\n\n        return mixedVideoStream;\n    }\n\n    function getMixedVideoStream() {\n        resetVideoStreams();\n\n        var capturedStream;\n\n        if ("captureStream" in canvas) {\n            capturedStream = canvas.captureStream();\n        } else if ("mozCaptureStream" in canvas) {\n            capturedStream = canvas.mozCaptureStream();\n        } else if (!self.disableLogs) {\n            console.error("Upgrade to latest Chrome or otherwise enable this flag: chrome://flags/#enable-experimental-web-platform-features");\n        }\n\n        var videoStream = new MediaStream();\n\n        capturedStream.getVideoTracks().forEach(function (track) {\n            videoStream.addTrack(track);\n        });\n\n        canvas.stream = videoStream;\n\n        return videoStream;\n    }\n\n    function getMixedAudioStream() {\n        // via: @pehrsons\n        if (!Storage.AudioContextConstructor) {\n            Storage.AudioContextConstructor = new Storage.AudioContext();\n        }\n\n        self.audioContext = Storage.AudioContextConstructor;\n\n        self.audioSources = [];\n\n        if (self.useGainNode === true) {\n            self.gainNode = self.audioContext.createGain();\n            self.gainNode.connect(self.audioContext.destination);\n            self.gainNode.gain.value = 0; // don\'t hear self\n        }\n\n        var audioTracksLength = 0;\n        arrayOfMediaStreams.forEach(function (stream) {\n            if (!stream.getAudioTracks().length) {\n                return;\n            }\n\n            audioTracksLength++;\n\n            var audioSource = self.audioContext.createMediaStreamSource(stream);\n\n            if (self.useGainNode === true) {\n                audioSource.connect(self.gainNode);\n            }\n\n            self.audioSources.push(audioSource);\n        });\n\n        if (!audioTracksLength) {\n            return;\n        }\n\n        self.audioDestination = self.audioContext.createMediaStreamDestination();\n        self.audioSources.forEach(function (audioSource) {\n            audioSource.connect(self.audioDestination);\n        });\n        return self.audioDestination.stream;\n    }\n\n    function getVideo(stream) {\n        var video = document.createElement("video");\n\n        if ("srcObject" in video) {\n            video.srcObject = stream;\n        } else {\n            video.src = URL.createObjectURL(stream);\n        }\n\n        video.muted = true;\n        video.volume = 0;\n\n        video.width = stream.width || self.width || 360;\n        video.height = stream.height || self.height || 240;\n\n        video.play();\n\n        return video;\n    }\n\n    this.appendStreams = function (streams) {\n        if (!streams) {\n            throw "First parameter is required.";\n        }\n\n        if (!(streams instanceof Array)) {\n            streams = [streams];\n        }\n\n        arrayOfMediaStreams.concat(streams);\n\n        streams.forEach(function (stream) {\n            if (stream.getVideoTracks().length) {\n                var video = getVideo(stream);\n                video.stream = stream;\n                videos.push(video);\n            }\n\n            if (stream.getAudioTracks().length && self.audioContext) {\n                var audioSource = self.audioContext.createMediaStreamSource(stream);\n                audioSource.connect(self.audioDestination);\n                self.audioSources.push(audioSource);\n            }\n        });\n    };\n\n    this.releaseStreams = function () {\n        videos = [];\n        isStopDrawingFrames = true;\n\n        if (self.gainNode) {\n            self.gainNode.disconnect();\n            self.gainNode = null;\n        }\n\n        if (self.audioSources.length) {\n            self.audioSources.forEach(function (source) {\n                source.disconnect();\n            });\n            self.audioSources = [];\n        }\n\n        if (self.audioDestination) {\n            self.audioDestination.disconnect();\n            self.audioDestination = null;\n        }\n\n        self.audioContext = null;\n\n        context.clearRect(0, 0, canvas.width, canvas.height);\n\n        if (canvas.stream) {\n            canvas.stream.stop();\n            canvas.stream = null;\n        }\n    };\n\n    this.resetVideoStreams = function (streams) {\n        if (streams && !(streams instanceof Array)) {\n            streams = [streams];\n        }\n\n        resetVideoStreams(streams);\n    };\n\n    function resetVideoStreams(streams) {\n        videos = [];\n        streams = streams || arrayOfMediaStreams;\n\n        // via: @adrian-ber\n        streams.forEach(function (stream) {\n            if (!stream.getVideoTracks().length) {\n                return;\n            }\n\n            var video = getVideo(stream);\n            video.stream = stream;\n            videos.push(video);\n        });\n    }\n\n    // for debugging\n    this.name = "MultiStreamsMixer";\n    this.toString = function () {\n        return this.name;\n    };\n\n    this.getMixedStream = getMixedStream;\n}\n\n// _____________________________\n// Cross-Browser-Declarations.js\n\nvar browserFakeUserAgent = "Fake/5.0 (FakeOS) AppleWebKit/123 (KHTML, like Gecko) Fake/12.3.4567.89 Fake/123.45";\n\n(function (that) {\n    if (typeof window !== "undefined") {\n        return;\n    }\n\n    if (typeof window === "undefined" && typeof __webpack_require__.g !== "undefined") {\n        __webpack_require__.g.navigator = {\n            userAgent: browserFakeUserAgent,\n            getUserMedia: function getUserMedia() {}\n        };\n\n        /*global window:true */\n        that.window = __webpack_require__.g;\n    } else if (typeof window === "undefined") {\n        // window = this;\n    }\n\n    if (typeof document === "undefined") {\n        /*global document:true */\n        that.document = {};\n\n        document.createElement = document.captureStream = document.mozCaptureStream = function () {\n            return {};\n        };\n    }\n\n    if (typeof location === "undefined") {\n        /*global location:true */\n        that.location = {\n            protocol: "file:",\n            href: "",\n            hash: ""\n        };\n    }\n\n    if (typeof screen === "undefined") {\n        /*global screen:true */\n        that.screen = {\n            width: 0,\n            height: 0\n        };\n    }\n})(typeof __webpack_require__.g !== "undefined" ? __webpack_require__.g : window);\n\n// WebAudio API representer\nvar AudioContext = window.AudioContext;\n\nif (typeof AudioContext === "undefined") {\n    if (typeof webkitAudioContext !== "undefined") {\n        /*global AudioContext:true */\n        AudioContext = webkitAudioContext;\n    }\n\n    if (typeof mozAudioContext !== "undefined") {\n        /*global AudioContext:true */\n        AudioContext = mozAudioContext;\n    }\n}\n\nif (typeof window === "undefined") {\n    /*jshint -W020 */\n    window = {};\n}\n\n// WebAudio API representer\nvar AudioContext = window.AudioContext;\n\nif (typeof AudioContext === "undefined") {\n    if (typeof webkitAudioContext !== "undefined") {\n        /*global AudioContext:true */\n        AudioContext = webkitAudioContext;\n    }\n\n    if (typeof mozAudioContext !== "undefined") {\n        /*global AudioContext:true */\n        AudioContext = mozAudioContext;\n    }\n}\n\n/*jshint -W079 */\nvar URL = window.URL;\n\nif (typeof URL === "undefined" && typeof webkitURL !== "undefined") {\n    /*global URL:true */\n    URL = webkitURL;\n}\n\nif (typeof navigator !== "undefined") {\n    if (typeof navigator.webkitGetUserMedia !== "undefined") {\n        navigator.getUserMedia = navigator.webkitGetUserMedia;\n    }\n\n    if (typeof navigator.mozGetUserMedia !== "undefined") {\n        navigator.getUserMedia = navigator.mozGetUserMedia;\n    }\n} else {\n    navigator = {\n        getUserMedia: function getUserMedia() {},\n        userAgent: browserFakeUserAgent\n    };\n}\n\nvar IsEdge = navigator.userAgent.indexOf("Edge") !== -1 && (!!navigator.msSaveBlob || !!navigator.msSaveOrOpenBlob);\n\nvar IsOpera = false;\nif (typeof opera !== "undefined" && navigator.userAgent && navigator.userAgent.indexOf("OPR/") !== -1) {\n    IsOpera = true;\n}\nvar IsChrome = !IsEdge && !IsEdge && !!navigator.webkitGetUserMedia;\n\nvar MediaStream = window.MediaStream;\n\nif (typeof MediaStream === "undefined" && typeof webkitMediaStream !== "undefined") {\n    MediaStream = webkitMediaStream;\n}\n\n/*global MediaStream:true */\nif (typeof MediaStream !== "undefined") {\n    if (!("getVideoTracks" in MediaStream.prototype)) {\n        MediaStream.prototype.getVideoTracks = function () {\n            if (!this.getTracks) {\n                return [];\n            }\n\n            var tracks = [];\n            this.getTracks.forEach(function (track) {\n                if (track.kind.toString().indexOf("video") !== -1) {\n                    tracks.push(track);\n                }\n            });\n            return tracks;\n        };\n\n        MediaStream.prototype.getAudioTracks = function () {\n            if (!this.getTracks) {\n                return [];\n            }\n\n            var tracks = [];\n            this.getTracks.forEach(function (track) {\n                if (track.kind.toString().indexOf("audio") !== -1) {\n                    tracks.push(track);\n                }\n            });\n            return tracks;\n        };\n    }\n\n    if (!("stop" in MediaStream.prototype)) {\n        MediaStream.prototype.stop = function () {\n            this.getAudioTracks().forEach(function (track) {\n                if (!!track.stop) {\n                    track.stop();\n                }\n            });\n\n            this.getVideoTracks().forEach(function (track) {\n                if (!!track.stop) {\n                    track.stop();\n                }\n            });\n        };\n    }\n}\n\nif (typeof location !== "undefined") {\n    if (location.href.indexOf("file:") === 0) {\n        console.error("Please load this HTML file on HTTP or HTTPS.");\n    }\n}\n\n// Merge all other data-types except "function"\n\nfunction mergeProps(mergein, mergeto) {\n    for (var t in mergeto) {\n        if (typeof mergeto[t] !== "function") {\n            mergein[t] = mergeto[t];\n        }\n    }\n    return mergein;\n}\n\n// "dropFirstFrame" has been added by Graham Roth\n// https://github.com/gsroth\n\nfunction dropFirstFrame(arr) {\n    arr.shift();\n    return arr;\n}\n\nvar _require = __webpack_require__(/*! babel-core/lib/transformation/file/options/config */ "./node_modules/babel-core/lib/transformation/file/options/config.js"),\n    filename = _require.filename;\n\n/**\r\n * @param {Blob} file - File or Blob object. This parameter is required.\r\n * @param {string} fileName - Optional file name e.g. "Recorded-Video.webm"\r\n * @example\r\n * invokeSaveAsDialog(blob or file, [optional] fileName);\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n */\n\n\nasync function invokeSaveAsDialog(file, fileName) {\n    //07/26 여기부터 수정 시작!!!!! 파일 전체 합쳐서 재생시키는건 성공, 그러나 재생시간 2배인거는 수정해야함!\n    //slice(44) 해주는곳 부터 코드 다시 보고 수정해야할듯\n\n    console.log("invokeSaveAsDialog:", file, fileName);\n    file.arrayBuffer().then(function (data) {\n        // 여기 녹취19 DataView\n        console.log("인보크 어레이 버퍼:", data, data.byteLength);\n        var dataView = new DataView(data);\n        console.log("데이터 뷰 셋팅!:", dataView);\n\n        dataView.setUint32(40, data.byteLength * 2, true);\n        console.log("데이터 뷰 길이체크:", dataView.byteLength);\n        data = dataView.buffer;\n\n        var tmpBlob = new Blob([data], {\n            type: "audio/wav"\n        });\n        file = [];\n        file.push(tmpBlob);\n        return file;\n    }).then(function (file) {\n        // const fs = require("fs"); // 여기\n        // const savePath = "C:/";\n        // fs.writeFile(savePath + filename, file, "utf8", function (error) {\n        //     console.log("write end");\n        // });\n\n        // 여기 녹취20 마지막\n        console.log("모든게 끝난 후 동작:", file);\n        file = file[0];\n        var hyperlink = document.createElement("a");\n        hyperlink.href = URL.createObjectURL(file);\n        hyperlink.target = "_blank";\n        hyperlink.download = fileFullName;\n\n        if (!!navigator.mozGetUserMedia) {\n            hyperlink.onclick = function () {\n                (document.body || document.documentElement).removeChild(hyperlink);\n            };\n            (document.body || document.documentElement).appendChild(hyperlink);\n        }\n\n        var evt = new MouseEvent("click", {\n            view: window,\n            bubbles: true,\n            cancelable: true\n        });\n\n        hyperlink.dispatchEvent(evt);\n\n        if (!navigator.mozGetUserMedia) {\n            URL.revokeObjectURL(hyperlink.href);\n        }\n    });\n    if (!file) {\n        throw "Blob object is required.";\n    }\n\n    if (!file.type) {\n        try {\n            file.type = "video/webm";\n        } catch (e) {}\n    }\n\n    var fileExtension = (file.type || "video/webm").split("/")[1];\n\n    if (fileName && fileName.indexOf(".") !== -1) {\n        var splitted = fileName.split(".");\n        fileName = splitted[0];\n        fileExtension = splitted[1];\n    }\n\n    var fileFullName = (fileName || Math.round(Math.random() * 9999999999) + 888888888) + "." + fileExtension;\n\n    if (typeof navigator.msSaveOrOpenBlob !== "undefined") {\n        console.log("msSaveOrOpenBlob:", file);\n        return navigator.msSaveOrOpenBlob(file, fileFullName);\n    } else if (typeof navigator.msSaveBlob !== "undefined") {\n        console.log("msSaveBlob:", file);\n        return navigator.msSaveBlob(file, fileFullName);\n    }\n    return true;\n}\n\nfunction bytesToSize(bytes) {\n    var k = 1000;\n    var sizes = ["Bytes", "KB", "MB", "GB", "TB"];\n    if (bytes === 0) {\n        return "0 Bytes";\n    }\n    var i = parseInt(Math.floor(Math.log(bytes) / Math.log(k)), 10);\n    return (bytes / Math.pow(k, i)).toPrecision(3) + " " + sizes[i];\n}\n\n// ______________ (used to handle stuff like http://goo.gl/xmE5eg) issue #129\n// ObjectStore.js\nvar ObjectStore = {\n    AudioContext: AudioContext\n};\n\nfunction isMediaRecorderCompatible() {\n    var isOpera = !!window.opera || navigator.userAgent.indexOf(" OPR/") >= 0;\n    var isChrome = !!window.chrome && !isOpera;\n    var isFirefox = typeof window.InstallTrigger !== "undefined";\n\n    if (isFirefox) {\n        return true;\n    }\n\n    if (!isChrome) {\n        return false;\n    }\n\n    var nVer = navigator.appVersion;\n    var nAgt = navigator.userAgent;\n    var fullVersion = "" + parseFloat(navigator.appVersion);\n    var majorVersion = parseInt(navigator.appVersion, 10);\n    var nameOffset, verOffset, ix;\n\n    if (isChrome) {\n        verOffset = nAgt.indexOf("Chrome");\n        fullVersion = nAgt.substring(verOffset + 7);\n    }\n\n    // trim the fullVersion string at semicolon/space if present\n    if ((ix = fullVersion.indexOf(";")) !== -1) {\n        fullVersion = fullVersion.substring(0, ix);\n    }\n\n    if ((ix = fullVersion.indexOf(" ")) !== -1) {\n        fullVersion = fullVersion.substring(0, ix);\n    }\n\n    majorVersion = parseInt("" + fullVersion, 10);\n\n    if (isNaN(majorVersion)) {\n        fullVersion = "" + parseFloat(navigator.appVersion);\n        majorVersion = parseInt(navigator.appVersion, 10);\n    }\n\n    return majorVersion >= 49;\n}\n\n// ==================\n// MediaRecorder.js\n\n/**\r\n * Implementation of https://dvcs.w3.org/hg/dap/raw-file/default/media-stream-capture/MediaRecorder.html\r\n * The MediaRecorder accepts a mediaStream as input source passed from UA. When recorder starts,\r\n * a MediaEncoder will be created and accept the mediaStream as input source.\r\n * Encoder will get the raw data by track data changes, encode it by selected MIME Type, then store the encoded in EncodedBufferCache object.\r\n * The encoded data will be extracted on every timeslice passed from Start function call or by RequestData function.\r\n * Thread model:\r\n * When the recorder starts, it creates a "Media Encoder" thread to read data from MediaEncoder object and store buffer in EncodedBufferCache object.\r\n * Also extract the encoded data and create blobs on every timeslice passed from start function or RequestData function called by UA.\r\n */\n\nfunction MediaRecorderWrapper(mediaStream) {\n    var self = this;\n\n    /**\r\n     * This method records MediaStream.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * recorder.start(5000);\r\n     */\n    this.start = function (timeSlice, __disableLogs) {\n        console.log("start 111", timeSlice);\n        this.timeSlice = timeSlice || 1000;\n\n        if (!self.mimeType) {\n            self.mimeType = "video/webm";\n        }\n\n        if (self.mimeType.indexOf("audio") !== -1) {\n            if (mediaStream.getVideoTracks().length && mediaStream.getAudioTracks().length) {\n                var stream;\n                if (!!navigator.mozGetUserMedia) {\n                    stream = new MediaStream();\n                    stream.addTrack(mediaStream.getAudioTracks()[0]);\n                } else {\n                    // webkitMediaStream\n                    stream = new MediaStream(mediaStream.getAudioTracks());\n                }\n                mediaStream = stream;\n            }\n            self.mimeType = IsChrome ? "audio/webm" : "audio/ogg";\n        }\n\n        self.dontFireOnDataAvailableEvent = false;\n\n        var recorderHints = {\n            mimeType: self.mimeType\n        };\n\n        if (!self.disableLogs && !__disableLogs) {\n            console.log("Passing following params over MediaRecorder API.", recorderHints);\n        }\n\n        if (mediaRecorder) {\n            // mandatory to make sure Firefox doesn\'t fails to record streams 3-4 times without reloading the page.\n            mediaRecorder = null;\n        }\n\n        if (IsChrome && !isMediaRecorderCompatible()) {\n            // to support video-only recording on stable\n            recorderHints = "video/vp8";\n        }\n\n        // http://dxr.mozilla.org/mozilla-central/source/content/media/MediaRecorder.cpp\n        // https://wiki.mozilla.org/Gecko:MediaRecorder\n        // https://dvcs.w3.org/hg/dap/raw-file/default/media-stream-capture/MediaRecorder.html\n\n        // starting a recording session; which will initiate "Reading Thread"\n        // "Reading Thread" are used to prevent main-thread blocking scenarios\n        try {\n            mediaRecorder = new MediaRecorder(mediaStream, recorderHints);\n        } catch (e) {\n            // if someone passed NON_supported mimeType\n            // or if Firefox on Android\n            mediaRecorder = new MediaRecorder(mediaStream);\n        }\n\n        if ("canRecordMimeType" in mediaRecorder && mediaRecorder.canRecordMimeType(self.mimeType) === false) {\n            if (!self.disableLogs) {\n                console.warn("MediaRecorder API seems unable to record mimeType:", self.mimeType);\n            }\n        }\n\n        // i.e. stop recording when <video> is paused by the user; and auto restart recording\n        // when video is resumed. E.g. yourStream.getVideoTracks()[0].muted = true; // it will auto-stop recording.\n        if (self.ignoreMutedMedia === true) {\n            mediaRecorder.ignoreMutedMedia = true;\n        }\n\n        var firedOnDataAvailableOnce = false;\n\n        // Dispatching OnDataAvailable Handler\n        mediaRecorder.ondataavailable = function (e) {\n            // how to fix FF-corrupt-webm issues?\n            // should we leave this?          e.data.size < 26800\n            if (!e.data || !e.data.size || e.data.size < 26800 || firedOnDataAvailableOnce) {\n                return;\n            }\n\n            firedOnDataAvailableOnce = true;\n\n            var blob = self.getNativeBlob ? e.data : new Blob([e.data], {\n                type: self.mimeType || "video/webm"\n            });\n\n            self.ondataavailable(blob);\n\n            // self.dontFireOnDataAvailableEvent = true;\n\n            if (!!mediaRecorder && mediaRecorder.state === "recording") {\n                mediaRecorder.stop();\n            }\n            mediaRecorder = null;\n\n            if (self.dontFireOnDataAvailableEvent) {\n                return;\n            }\n\n            // record next interval\n            self.start(timeSlice, "__disableLogs");\n        };\n\n        mediaRecorder.onerror = function (error) {\n            if (!self.disableLogs) {\n                if (error.name === "InvalidState") {\n                    console.error("The MediaRecorder is not in a state in which the proposed operation is allowed to be executed.");\n                } else if (error.name === "OutOfMemory") {\n                    console.error("The UA has exhaused the available memory. User agents SHOULD provide as much additional information as possible in the message attribute.");\n                } else if (error.name === "IllegalStreamModification") {\n                    console.error("A modification to the stream has occurred that makes it impossible to continue recording. An example would be the addition of a Track while recording is occurring. User agents SHOULD provide as much additional information as possible in the message attribute.");\n                } else if (error.name === "OtherRecordingError") {\n                    console.error("Used for an fatal error other than those listed above. User agents SHOULD provide as much additional information as possible in the message attribute.");\n                } else if (error.name === "GenericError") {\n                    console.error("The UA cannot provide the codec or recording option that has been requested.", error);\n                } else {\n                    console.error("MediaRecorder Error", error);\n                }\n            }\n\n            // When the stream is "ended" set recording to \'inactive\'\n            // and stop gathering data. Callers should not rely on\n            // exactness of the timeSlice value, especially\n            // if the timeSlice value is small. Callers should\n            // consider timeSlice as a minimum value\n\n            if (!!mediaRecorder && mediaRecorder.state !== "inactive" && mediaRecorder.state !== "stopped") {\n                mediaRecorder.stop();\n            }\n        };\n\n        // void start(optional long mTimeSlice)\n        // The interval of passing encoded data from EncodedBufferCache to onDataAvailable\n        // handler. "mTimeSlice < 0" means Session object does not push encoded data to\n        // onDataAvailable, instead, it passive wait the client side pull encoded data\n        // by calling requestData API.\n        try {\n            console.log("[녹취시작] 3.6e+6");\n            mediaRecorder.start(3.6e6);\n        } catch (e) {\n            mediaRecorder = null;\n        }\n\n        setTimeout(function () {\n            if (!mediaRecorder) {\n                return;\n            }\n\n            if (mediaRecorder.state === "recording") {\n                // "stop" method auto invokes "requestData"!\n                mediaRecorder.requestData();\n                // mediaRecorder.stop();\n            }\n        }, timeSlice);\n\n        // Start recording. If timeSlice has been provided, mediaRecorder will\n        // raise a dataavailable event containing the Blob of collected data on every timeSlice milliseconds.\n        // If timeSlice isn\'t provided, UA should call the RequestData to obtain the Blob data, also set the mTimeSlice to zero.\n    };\n\n    /**\r\n     * This method stops recording MediaStream.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * recorder.stop(function(blob) {\r\n     *     video.src = URL.createObjectURL(blob);\r\n     * });\r\n     */\n    this.stop = function (callback) {\n        if (!mediaRecorder) {\n            return;\n        }\n\n        // mediaRecorder.state === \'recording\' means that media recorder is associated with "session"\n        // mediaRecorder.state === \'stopped\' means that media recorder is detached from the "session" ... in this case; "session" will also be deleted.\n\n        if (mediaRecorder.state === "recording") {\n            // "stop" method auto invokes "requestData"!\n            mediaRecorder.requestData();\n\n            setTimeout(function () {\n                self.dontFireOnDataAvailableEvent = true;\n                if (!!mediaRecorder && mediaRecorder.state === "recording") {\n                    mediaRecorder.stop();\n                }\n                mediaRecorder = null;\n                self.onstop();\n            }, 2000);\n        }\n    };\n\n    /**\r\n     * This method pauses the recording process.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * recorder.pause();\r\n     */\n    this.pause = function () {\n        if (!mediaRecorder) {\n            return;\n        }\n\n        if (mediaRecorder.state === "recording") {\n            mediaRecorder.pause();\n        }\n\n        this.dontFireOnDataAvailableEvent = true;\n    };\n\n    /**\r\n     * The recorded blobs are passed over this event.\r\n     * @event\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * recorder.ondataavailable = function(data) {};\r\n     */\n    this.ondataavailable = function (blob) {\n        console.log("recorded-blob", blob);\n    };\n\n    /**\r\n     * This method resumes the recording process.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * recorder.resume();\r\n     */\n    this.resume = function () {\n        console.log("리줌");\n        if (this.dontFireOnDataAvailableEvent) {\n            console.log("리줌안");\n            this.dontFireOnDataAvailableEvent = false;\n\n            var disableLogs = self.disableLogs;\n            self.disableLogs = true;\n            this.start(this.timeslice || 1000);\n            self.disableLogs = disableLogs;\n            return;\n        }\n\n        if (!mediaRecorder) {\n            return;\n        }\n\n        if (mediaRecorder.state === "paused") {\n            mediaRecorder.resume();\n        }\n    };\n\n    /**\r\n     * This method resets currently recorded data.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * recorder.clearRecordedData();\r\n     */\n    this.clearRecordedData = function () {\n        if (!mediaRecorder) {\n            return;\n        }\n\n        this.pause();\n\n        this.dontFireOnDataAvailableEvent = true;\n        this.stop();\n    };\n\n    this.onstop = function () {};\n\n    // Reference to "MediaRecorder" object\n    var mediaRecorder;\n\n    function isMediaStreamActive() {\n        if ("active" in mediaStream) {\n            if (!mediaStream.active) {\n                return false;\n            }\n        } else if ("ended" in mediaStream) {\n            // old hack\n            if (mediaStream.ended) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    // this method checks if media stream is stopped\n    // or any track is ended.\n    (function looper() {\n        if (!mediaRecorder) {\n            return;\n        }\n\n        if (isMediaStreamActive() === false) {\n            self.stop();\n            return;\n        }\n\n        setTimeout(looper, 1000); // check every second\n    })();\n}\n\nif (typeof MediaStreamRecorder !== "undefined") {\n    MediaStreamRecorder.MediaRecorderWrapper = MediaRecorderWrapper;\n}\n\n// ======================\n// StereoAudioRecorder.js\n\nfunction StereoAudioRecorder(mediaStream) {\n    // 여기 녹취4\n    console.log("스테레오오디오레코더:", mediaStream);\n    // void start(optional long timeSlice)\n    // timestamp to fire "ondataavailable"\n    this.start = function (timeSlice) {\n        console.log("[StereoAudioRecorder Function - start]");\n        timeSlice = timeSlice || 1000;\n        // 여기 녹취5 StereoAudioRecorderHelper로\n        mediaRecorder = new StereoAudioRecorderHelper(mediaStream, this);\n        mediaRecorder.record();\n        timeout = setInterval(function () {\n            mediaRecorder.requestData();\n        }, timeSlice);\n    };\n\n    this.stop = function () {\n        console.log("[StereoAudioRecorder Function - stop]");\n\n        if (mediaRecorder) {\n            mediaRecorder.stop();\n            clearTimeout(timeout);\n            this.onstop();\n        }\n    };\n\n    this.pause = function () {\n        console.log("[StereoAudioRecorder Function - pause]");\n\n        if (!mediaRecorder) {\n            return;\n        }\n\n        mediaRecorder.pause();\n    };\n\n    this.resume = function () {\n        console.log("[StereoAudioRecorder Function - resume]");\n\n        if (!mediaRecorder) {\n            return;\n        }\n\n        mediaRecorder.resume();\n    };\n\n    this.ondataavailable = function () {};\n    this.onstop = function () {};\n\n    // Reference to "StereoAudioRecorder" object\n    var mediaRecorder;\n    var timeout;\n}\n\nif (typeof MediaStreamRecorder !== "undefined") {\n    MediaStreamRecorder.StereoAudioRecorder = StereoAudioRecorder;\n}\n\n// ============================\n// StereoAudioRecorderHelper.js\n\n// source code from: http://typedarray.org/wp-content/projects/WebAudioRecorder/script.js\n\nfunction StereoAudioRecorderHelper(mediaStream, root) {\n    // variables\n    var deviceSampleRate = 44100; // range: 22050 to 96000\n\n    if (!ObjectStore.AudioContextConstructor) {\n        ObjectStore.AudioContextConstructor = new ObjectStore.AudioContext();\n    }\n\n    // check device sample rate\n    deviceSampleRate = ObjectStore.AudioContextConstructor.sampleRate;\n    //27일 여기부터 체크해서 ㅈ개발\n    // 여기 녹취6\n    console.log("[deviceSampleRate]:", deviceSampleRate);\n    console.log("[root.sampleRate:]", root.sampleRate);\n    var leftchannel = [];\n    var rightchannel = [];\n    var scriptprocessornode;\n    var recording = false;\n    var recordingLength = 0;\n    var volume;\n    var audioInput;\n    var sampleRate = root.sampleRate || deviceSampleRate;\n\n    var mimeType = root.mimeType || "audio/wav";\n    var isPCM = mimeType.indexOf("audio/pcm") > -1;\n\n    var context;\n\n    var numChannels = root.audioChannels || 2;\n\n    // 여기 녹취7\n    this.record = function () {\n        recording = true;\n        // reset the buffers for the new recording\n        leftchannel.length = rightchannel.length = 0;\n        recordingLength = 0;\n    };\n\n    // 여기 녹취8\n    this.requestData = function () {\n        if (isPaused) {\n            return;\n        }\n\n        if (recordingLength === 0) {\n            requestDataInvoked = false;\n            return;\n        }\n\n        requestDataInvoked = true;\n        // clone stuff\n        var internalLeftChannel = leftchannel.slice(0);\n        var internalRightChannel = rightchannel.slice(0);\n        var internalRecordingLength = recordingLength;\n\n        // reset the buffers for the new recording\n        leftchannel.length = rightchannel.length = [];\n        recordingLength = 0;\n        requestDataInvoked = false;\n\n        // we flat the left and right channels down\n        var leftBuffer = mergeBuffers(internalLeftChannel, internalRecordingLength);\n\n        var interleaved = leftBuffer;\n\n        // we interleave both channels together\n        if (numChannels === 2) {\n            var rightBuffer = mergeBuffers(internalRightChannel, internalRecordingLength); // bug fixed via #70,#71\n            interleaved = interleave(leftBuffer, rightBuffer);\n        }\n\n        if (isPCM) {\n            // our final binary blob\n            var blob = new Blob([convertoFloat32ToInt16(interleaved)], {\n                type: "audio/pcm"\n            });\n\n            console.debug("audio recorded blob size:", bytesToSize(blob.size));\n            root.ondataavailable(blob);\n            return;\n        }\n\n        // we create our wav file, 실제 녹음된 데이터 버퍼\n        var buffer = new ArrayBuffer(44 + interleaved.length * 2);\n        var view = new DataView(buffer);\n\n        // RIFF chunk descriptor\n        writeUTFBytes(view, 0, "RIFF");\n        // -8 (via #97)\n        view.setUint32(4, 44 + interleaved.length * 2 - 8, true);\n\n        writeUTFBytes(view, 8, "WAVE");\n        // FMT sub-chunk\n        writeUTFBytes(view, 12, "fmt ");\n        view.setUint32(16, 16, true);\n        view.setUint16(20, 1, true);\n        // stereo (2 channels)\n        view.setUint16(22, numChannels, true);\n        view.setUint32(24, sampleRate, true);\n        view.setUint32(28, sampleRate * numChannels * 2, true); // numChannels * 2 (via #71)\n        view.setUint16(32, numChannels * 2, true);\n        view.setUint16(34, 16, true);\n        // data sub-chunk\n        writeUTFBytes(view, 36, "data");\n        // view.setUint32(40, interleaved.length * 2, true);\n        view.setUint32(40, 5000000000, true);\n\n        // write the PCM samples\n        var lng = interleaved.length;\n        var index = 44;\n        var volume = 1;\n        for (var i = 0; i < lng; i++) {\n            view.setInt16(index, interleaved[i] * (0x7fff * volume), true);\n            index += 2;\n        }\n\n        // our final binary blob\n        var blob = new Blob([view], {\n            type: "audio/wav"\n        });\n\n        console.debug("audio recorded blob size:", bytesToSize(blob.size), blob);\n\n        root.ondataavailable(blob);\n    };\n\n    this.stop = function () {\n        // we stop recording\n        recording = false;\n        this.requestData();\n\n        audioInput.disconnect();\n        this.onstop();\n    };\n\n    function interleave(leftChannel, rightChannel) {\n        var length = leftChannel.length + rightChannel.length;\n        var result = new Float32Array(length);\n\n        var inputIndex = 0;\n\n        for (var index = 0; index < length;) {\n            result[index++] = leftChannel[inputIndex];\n            result[index++] = rightChannel[inputIndex];\n            inputIndex++;\n        }\n        return result;\n    }\n\n    function mergeBuffers(channelBuffer, recordingLength) {\n        var result = new Float32Array(recordingLength);\n        var offset = 0;\n        var lng = channelBuffer.length;\n        for (var i = 0; i < lng; i++) {\n            var buffer = channelBuffer[i];\n            result.set(buffer, offset);\n            offset += buffer.length;\n        }\n        return result;\n    }\n\n    function writeUTFBytes(view, offset, string) {\n        var lng = string.length;\n        for (var i = 0; i < lng; i++) {\n            view.setUint8(offset + i, string.charCodeAt(i));\n        }\n    }\n\n    function convertoFloat32ToInt16(buffer) {\n        var l = buffer.length;\n        var buf = new Int16Array(l);\n\n        while (l--) {\n            buf[l] = buffer[l] * 0xffff; //convert to 16 bit\n        }\n        return buf.buffer;\n    }\n\n    // creates the audio context\n    var context = ObjectStore.AudioContextConstructor;\n\n    // creates a gain node\n    ObjectStore.VolumeGainNode = context.createGain();\n\n    var volume = ObjectStore.VolumeGainNode;\n\n    // creates an audio node from the microphone incoming stream\n    ObjectStore.AudioInput = context.createMediaStreamSource(mediaStream);\n\n    // creates an audio node from the microphone incoming stream\n    var audioInput = ObjectStore.AudioInput;\n\n    // connect the stream to the gain node\n    audioInput.connect(volume);\n\n    /* From the spec: This value controls how frequently the audioprocess event is\r\n    dispatched and how many sample-frames need to be processed each call.\r\n    Lower values for buffer size will result in a lower (better) latency.\r\n    Higher values will be necessary to avoid audio breakup and glitches \r\n    Legal values are 256, 512, 1024, 2048, 4096, 8192, and 16384.*/\n    var bufferSize = root.bufferSize || 2048;\n    if (root.bufferSize === 0) {\n        bufferSize = 0;\n    }\n\n    if (context.createJavaScriptNode) {\n        scriptprocessornode = context.createJavaScriptNode(bufferSize, numChannels, numChannels);\n    } else if (context.createScriptProcessor) {\n        scriptprocessornode = context.createScriptProcessor(bufferSize, numChannels, numChannels);\n    } else {\n        throw "WebAudio API has no support on this browser.";\n    }\n\n    bufferSize = scriptprocessornode.bufferSize;\n\n    console.debug("using audio buffer-size:", bufferSize);\n\n    var requestDataInvoked = false;\n\n    // sometimes "scriptprocessornode" disconnects from he destination-node\n    // and there is no exception thrown in this case.\n    // and obviously no further "ondataavailable" events will be emitted.\n    // below global-scope variable is added to debug such unexpected but "rare" cases.\n    window.scriptprocessornode = scriptprocessornode;\n\n    if (numChannels === 1) {\n        console.debug("All right-channels are skipped.");\n    }\n\n    var isPaused = false;\n\n    this.pause = function () {\n        isPaused = true;\n    };\n\n    this.resume = function () {\n        isPaused = false;\n    };\n\n    this.onstop = function () {};\n\n    // http://webaudio.github.io/web-audio-api/#the-scriptprocessornode-interface\n    scriptprocessornode.onaudioprocess = function (e) {\n        if (!recording || requestDataInvoked || isPaused) {\n            return;\n        }\n\n        var left = e.inputBuffer.getChannelData(0);\n        // console.log("left: " + left);\n        leftchannel.push(new Float32Array(left));\n\n        if (numChannels === 2) {\n            var right = e.inputBuffer.getChannelData(1);\n            // console.log("right: " + right);\n            rightchannel.push(new Float32Array(right));\n        }\n        recordingLength += bufferSize;\n    };\n\n    volume.connect(scriptprocessornode);\n    scriptprocessornode.connect(context.destination);\n}\n\nif (typeof MediaStreamRecorder !== "undefined") {\n    MediaStreamRecorder.StereoAudioRecorderHelper = StereoAudioRecorderHelper;\n}\n\n// ===================\n// WhammyRecorder.js\n\nfunction WhammyRecorder(mediaStream) {\n    // void start(optional long timeSlice)\n    // timestamp to fire "ondataavailable"\n    this.start = function (timeSlice) {\n        console.log("와미 레코더", timeSlice);\n        timeSlice = timeSlice || 1000;\n\n        mediaRecorder = new WhammyRecorderHelper(mediaStream, this);\n\n        for (var prop in this) {\n            if (typeof this[prop] !== "function") {\n                mediaRecorder[prop] = this[prop];\n            }\n        }\n\n        mediaRecorder.record();\n\n        timeout = setInterval(function () {\n            mediaRecorder.requestData();\n        }, timeSlice);\n    };\n\n    this.stop = function () {\n        if (mediaRecorder) {\n            mediaRecorder.stop();\n            clearTimeout(timeout);\n            this.onstop();\n        }\n    };\n\n    this.onstop = function () {};\n\n    this.clearOldRecordedFrames = function () {\n        if (mediaRecorder) {\n            mediaRecorder.clearOldRecordedFrames();\n        }\n    };\n\n    this.pause = function () {\n        if (!mediaRecorder) {\n            return;\n        }\n\n        mediaRecorder.pause();\n    };\n\n    this.resume = function () {\n        if (!mediaRecorder) {\n            return;\n        }\n\n        mediaRecorder.resume();\n    };\n\n    this.ondataavailable = function () {};\n\n    // Reference to "WhammyRecorder" object\n    var mediaRecorder;\n    var timeout;\n}\n\nif (typeof MediaStreamRecorder !== "undefined") {\n    MediaStreamRecorder.WhammyRecorder = WhammyRecorder;\n}\n\n// ==========================\n// WhammyRecorderHelper.js\n\nfunction WhammyRecorderHelper(mediaStream, root) {\n    this.record = function (timeSlice) {\n        if (!this.width) {\n            this.width = 320;\n        }\n        if (!this.height) {\n            this.height = 240;\n        }\n\n        if (this.video && this.video instanceof HTMLVideoElement) {\n            if (!this.width) {\n                this.width = video.videoWidth || video.clientWidth || 320;\n            }\n            if (!this.height) {\n                this.height = video.videoHeight || video.clientHeight || 240;\n            }\n        }\n\n        if (!this.video) {\n            this.video = {\n                width: this.width,\n                height: this.height\n            };\n        }\n\n        if (!this.canvas || !this.canvas.width || !this.canvas.height) {\n            this.canvas = {\n                width: this.width,\n                height: this.height\n            };\n        }\n\n        canvas.width = this.canvas.width;\n        canvas.height = this.canvas.height;\n\n        // setting defaults\n        if (this.video && this.video instanceof HTMLVideoElement) {\n            this.isHTMLObject = true;\n            video = this.video.cloneNode();\n        } else {\n            video = document.createElement("video");\n            video.src = URL.createObjectURL(mediaStream);\n\n            video.width = this.video.width;\n            video.height = this.video.height;\n        }\n\n        video.muted = true;\n        video.play();\n\n        lastTime = new Date().getTime();\n        whammy = new Whammy.Video(root.speed, root.quality);\n\n        console.log("canvas resolutions", canvas.width, "*", canvas.height);\n        console.log("video width/height", video.width || canvas.width, "*", video.height || canvas.height);\n\n        drawFrames();\n    };\n\n    this.clearOldRecordedFrames = function () {\n        whammy.frames = [];\n    };\n\n    var requestDataInvoked = false;\n    this.requestData = function () {\n        if (isPaused) {\n            return;\n        }\n\n        if (!whammy.frames.length) {\n            requestDataInvoked = false;\n            return;\n        }\n\n        requestDataInvoked = true;\n        // clone stuff\n        var internalFrames = whammy.frames.slice(0);\n\n        // reset the frames for the new recording\n\n        whammy.frames = dropBlackFrames(internalFrames, -1);\n\n        whammy.compile(function (whammyBlob) {\n            root.ondataavailable(whammyBlob);\n            console.debug("video recorded blob size:", bytesToSize(whammyBlob.size));\n        });\n\n        whammy.frames = [];\n\n        requestDataInvoked = false;\n    };\n\n    var isOnStartedDrawingNonBlankFramesInvoked = false;\n\n    function drawFrames() {\n        if (isPaused) {\n            lastTime = new Date().getTime();\n            setTimeout(drawFrames, 500);\n            return;\n        }\n\n        if (isStopDrawing) {\n            return;\n        }\n\n        if (requestDataInvoked) {\n            return setTimeout(drawFrames, 100);\n        }\n\n        var duration = new Date().getTime() - lastTime;\n        if (!duration) {\n            return drawFrames();\n        }\n\n        // via webrtc-experiment#206, by Jack i.e. @Seymourr\n        lastTime = new Date().getTime();\n\n        if (!self.isHTMLObject && video.paused) {\n            video.play(); // Android\n        }\n\n        context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n        if (!isStopDrawing) {\n            whammy.frames.push({\n                duration: duration,\n                image: canvas.toDataURL("image/webp")\n            });\n        }\n\n        if (!isOnStartedDrawingNonBlankFramesInvoked && !isBlankFrame(whammy.frames[whammy.frames.length - 1])) {\n            isOnStartedDrawingNonBlankFramesInvoked = true;\n            root.onStartedDrawingNonBlankFrames();\n        }\n\n        setTimeout(drawFrames, 10);\n    }\n\n    var isStopDrawing = false;\n\n    this.stop = function () {\n        isStopDrawing = true;\n        this.requestData();\n        this.onstop();\n    };\n\n    var canvas = document.createElement("canvas");\n    var context = canvas.getContext("2d");\n\n    var video;\n    var lastTime;\n    var whammy;\n\n    var self = this;\n\n    function isBlankFrame(frame, _pixTolerance, _frameTolerance) {\n        var localCanvas = document.createElement("canvas");\n        localCanvas.width = canvas.width;\n        localCanvas.height = canvas.height;\n        var context2d = localCanvas.getContext("2d");\n\n        var sampleColor = {\n            r: 0,\n            g: 0,\n            b: 0\n        };\n        var maxColorDifference = Math.sqrt(Math.pow(255, 2) + Math.pow(255, 2) + Math.pow(255, 2));\n        var pixTolerance = _pixTolerance && _pixTolerance >= 0 && _pixTolerance <= 1 ? _pixTolerance : 0;\n        var frameTolerance = _frameTolerance && _frameTolerance >= 0 && _frameTolerance <= 1 ? _frameTolerance : 0;\n\n        var matchPixCount, endPixCheck, maxPixCount;\n\n        var image = new Image();\n        image.src = frame.image;\n        context2d.drawImage(image, 0, 0, canvas.width, canvas.height);\n        var imageData = context2d.getImageData(0, 0, canvas.width, canvas.height);\n        matchPixCount = 0;\n        endPixCheck = imageData.data.length;\n        maxPixCount = imageData.data.length / 4;\n\n        for (var pix = 0; pix < endPixCheck; pix += 4) {\n            var currentColor = {\n                r: imageData.data[pix],\n                g: imageData.data[pix + 1],\n                b: imageData.data[pix + 2]\n            };\n            var colorDifference = Math.sqrt(Math.pow(currentColor.r - sampleColor.r, 2) + Math.pow(currentColor.g - sampleColor.g, 2) + Math.pow(currentColor.b - sampleColor.b, 2));\n            // difference in color it is difference in color vectors (r1,g1,b1) <=> (r2,g2,b2)\n            if (colorDifference <= maxColorDifference * pixTolerance) {\n                matchPixCount++;\n            }\n        }\n\n        if (maxPixCount - matchPixCount <= maxPixCount * frameTolerance) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    function dropBlackFrames(_frames, _framesToCheck, _pixTolerance, _frameTolerance) {\n        var localCanvas = document.createElement("canvas");\n        localCanvas.width = canvas.width;\n        localCanvas.height = canvas.height;\n        var context2d = localCanvas.getContext("2d");\n        var resultFrames = [];\n\n        var checkUntilNotBlack = _framesToCheck === -1;\n        var endCheckFrame = _framesToCheck && _framesToCheck > 0 && _framesToCheck <= _frames.length ? _framesToCheck : _frames.length;\n        var sampleColor = {\n            r: 0,\n            g: 0,\n            b: 0\n        };\n        var maxColorDifference = Math.sqrt(Math.pow(255, 2) + Math.pow(255, 2) + Math.pow(255, 2));\n        var pixTolerance = _pixTolerance && _pixTolerance >= 0 && _pixTolerance <= 1 ? _pixTolerance : 0;\n        var frameTolerance = _frameTolerance && _frameTolerance >= 0 && _frameTolerance <= 1 ? _frameTolerance : 0;\n        var doNotCheckNext = false;\n\n        for (var f = 0; f < endCheckFrame; f++) {\n            var matchPixCount, endPixCheck, maxPixCount;\n\n            if (!doNotCheckNext) {\n                var image = new Image();\n                image.src = _frames[f].image;\n                context2d.drawImage(image, 0, 0, canvas.width, canvas.height);\n                var imageData = context2d.getImageData(0, 0, canvas.width, canvas.height);\n                matchPixCount = 0;\n                endPixCheck = imageData.data.length;\n                maxPixCount = imageData.data.length / 4;\n\n                for (var pix = 0; pix < endPixCheck; pix += 4) {\n                    var currentColor = {\n                        r: imageData.data[pix],\n                        g: imageData.data[pix + 1],\n                        b: imageData.data[pix + 2]\n                    };\n                    var colorDifference = Math.sqrt(Math.pow(currentColor.r - sampleColor.r, 2) + Math.pow(currentColor.g - sampleColor.g, 2) + Math.pow(currentColor.b - sampleColor.b, 2));\n                    // difference in color it is difference in color vectors (r1,g1,b1) <=> (r2,g2,b2)\n                    if (colorDifference <= maxColorDifference * pixTolerance) {\n                        matchPixCount++;\n                    }\n                }\n            }\n\n            if (!doNotCheckNext && maxPixCount - matchPixCount <= maxPixCount * frameTolerance) {\n                // console.log(\'removed black frame : \' + f + \' ; frame duration \' + _frames[f].duration);\n            } else {\n                // console.log(\'frame is passed : \' + f);\n                if (checkUntilNotBlack) {\n                    doNotCheckNext = true;\n                }\n                resultFrames.push(_frames[f]);\n            }\n        }\n\n        resultFrames = resultFrames.concat(_frames.slice(endCheckFrame));\n\n        if (resultFrames.length <= 0) {\n            // at least one last frame should be available for next manipulation\n            // if total duration of all frames will be < 1000 than ffmpeg doesn\'t work well...\n            resultFrames.push(_frames[_frames.length - 1]);\n        }\n\n        return resultFrames;\n    }\n\n    var isPaused = false;\n\n    this.pause = function () {\n        isPaused = true;\n    };\n\n    this.resume = function () {\n        isPaused = false;\n    };\n\n    this.onstop = function () {};\n}\n\nif (typeof MediaStreamRecorder !== "undefined") {\n    MediaStreamRecorder.WhammyRecorderHelper = WhammyRecorderHelper;\n}\n\n// --------------\n// GifRecorder.js\n\nfunction GifRecorder(mediaStream) {\n    if (typeof GIFEncoder === "undefined") {\n        throw "Please link: https://cdn.webrtc-experiment.com/gif-recorder.js";\n    }\n\n    // void start(optional long timeSlice)\n    // timestamp to fire "ondataavailable"\n    this.start = function (timeSlice) {\n        console.log("gif레코더", timeSlice);\n        timeSlice = timeSlice || 1000;\n\n        var imageWidth = this.videoWidth || 320;\n        var imageHeight = this.videoHeight || 240;\n\n        canvas.width = video.width = imageWidth;\n        canvas.height = video.height = imageHeight;\n\n        // external library to record as GIF images\n        gifEncoder = new GIFEncoder();\n\n        // void setRepeat(int iter)\n        // Sets the number of times the set of GIF frames should be played.\n        // Default is 1; 0 means play indefinitely.\n        gifEncoder.setRepeat(0);\n\n        // void setFrameRate(Number fps)\n        // Sets frame rate in frames per second.\n        // Equivalent to setDelay(1000/fps).\n        // Using "setDelay" instead of "setFrameRate"\n        gifEncoder.setDelay(this.frameRate || this.speed || 200);\n\n        // void setQuality(int quality)\n        // Sets quality of color quantization (conversion of images to the\n        // maximum 256 colors allowed by the GIF specification).\n        // Lower values (minimum = 1) produce better colors,\n        // but slow processing significantly. 10 is the default,\n        // and produces good color mapping at reasonable speeds.\n        // Values greater than 20 do not yield significant improvements in speed.\n        gifEncoder.setQuality(this.quality || 1);\n\n        // Boolean start()\n        // This writes the GIF Header and returns false if it fails.\n        gifEncoder.start();\n\n        startTime = Date.now();\n\n        function drawVideoFrame(time) {\n            if (isPaused) {\n                setTimeout(drawVideoFrame, 500, time);\n                return;\n            }\n\n            lastAnimationFrame = requestAnimationFrame(drawVideoFrame);\n\n            if ((typeof lastFrameTime === "undefined" ? "undefined" : _typeof(lastFrameTime)) === undefined) {\n                lastFrameTime = time;\n            }\n\n            // ~10 fps\n            if (time - lastFrameTime < 90) {\n                return;\n            }\n\n            if (video.paused) {\n                video.play(); // Android\n            }\n\n            context.drawImage(video, 0, 0, imageWidth, imageHeight);\n\n            gifEncoder.addFrame(context);\n\n            // console.log(\'Recording...\' + Math.round((Date.now() - startTime) / 1000) + \'s\');\n            // console.log("fps: ", 1000 / (time - lastFrameTime));\n\n            lastFrameTime = time;\n        }\n\n        lastAnimationFrame = requestAnimationFrame(drawVideoFrame);\n\n        timeout = setTimeout(doneRecording, timeSlice);\n    };\n\n    function doneRecording() {\n        console.log("[lib]-doneRecording");\n        endTime = Date.now();\n\n        var gifBlob = new Blob([new Uint8Array(gifEncoder.stream().bin)], {\n            type: "image/gif"\n        });\n        self.ondataavailable(gifBlob);\n\n        // todo: find a way to clear old recorded blobs\n        gifEncoder.stream().bin = [];\n    }\n\n    this.stop = function () {\n        if (lastAnimationFrame) {\n            cancelAnimationFrame(lastAnimationFrame);\n            clearTimeout(timeout);\n            doneRecording();\n            this.onstop();\n        }\n    };\n\n    this.onstop = function () {};\n\n    var isPaused = false;\n\n    this.pause = function () {\n        isPaused = true;\n    };\n\n    this.resume = function () {\n        isPaused = false;\n    };\n\n    this.ondataavailable = function (e) {\n        console.log("[ondataavailable!!!]", e);\n    };\n    this.onstop = function () {};\n\n    // Reference to itself\n    var self = this;\n\n    var canvas = document.createElement("canvas");\n    var context = canvas.getContext("2d");\n\n    var video = document.createElement("video");\n    video.muted = true;\n    video.autoplay = true;\n    video.src = URL.createObjectURL(mediaStream);\n    video.play();\n\n    var lastAnimationFrame = null;\n    var startTime, endTime, lastFrameTime;\n\n    var gifEncoder;\n    var timeout;\n}\n\nif (typeof MediaStreamRecorder !== "undefined") {\n    MediaStreamRecorder.GifRecorder = GifRecorder;\n}\n\n// https://github.com/antimatter15/whammy/blob/master/LICENSE\n// _________\n// Whammy.js\n\n// todo: Firefox now supports webp for webm containers!\n// their MediaRecorder implementation works well!\n// should we provide an option to record via Whammy.js or MediaRecorder API is a better solution?\n\n/**\r\n * Whammy is a standalone class used by {@link RecordRTC} to bring video recording in Chrome. It is written by {@link https://github.com/antimatter15|antimatter15}\r\n * @summary A real time javascript webm encoder based on a canvas hack.\r\n * @typedef Whammy\r\n * @class\r\n * @example\r\n * var recorder = new Whammy().Video(15);\r\n * recorder.add(context || canvas || dataURL);\r\n * var output = recorder.compile();\r\n */\n\nvar Whammy = function () {\n    // a more abstract-ish API\n\n    function WhammyVideo(duration, quality) {\n        this.frames = [];\n        if (!duration) {\n            duration = 1;\n        }\n        this.duration = 1000 / duration;\n        this.quality = quality || 0.8;\n    }\n\n    /**\r\n     * Pass Canvas or Context or image/webp(string) to {@link Whammy} encoder.\r\n     * @method\r\n     * @memberof Whammy\r\n     * @example\r\n     * recorder = new Whammy().Video(0.8, 100);\r\n     * recorder.add(canvas || context || \'image/webp\');\r\n     * @param {string} frame - Canvas || Context || image/webp\r\n     * @param {number} duration - Stick a duration (in milliseconds)\r\n     */\n    WhammyVideo.prototype.add = function (frame, duration) {\n        if ("canvas" in frame) {\n            //CanvasRenderingContext2D\n            frame = frame.canvas;\n        }\n\n        if ("toDataURL" in frame) {\n            frame = frame.toDataURL("image/webp", this.quality);\n        }\n\n        if (!/^data:image\\/webp;base64,/gi.test(frame)) {\n            throw "Input must be formatted properly as a base64 encoded DataURI of type image/webp";\n        }\n        this.frames.push({\n            image: frame,\n            duration: duration || this.duration\n        });\n    };\n\n    function processInWebWorker(_function) {\n        var blob = URL.createObjectURL(new Blob([_function.toString(), "this.onmessage =  function (e) {" + _function.name + "(e.data);}"], {\n            type: "application/javascript"\n        }));\n\n        var worker = new Worker(blob);\n        URL.revokeObjectURL(blob);\n        return worker;\n    }\n\n    function whammyInWebWorker(frames) {\n        function ArrayToWebM(frames) {\n            var info = checkFrames(frames);\n            if (!info) {\n                return [];\n            }\n\n            var clusterMaxDuration = 30000;\n\n            var EBML = [{\n                id: 0x1a45dfa3, // EBML\n                data: [{\n                    data: 1,\n                    id: 0x4286 // EBMLVersion\n                }, {\n                    data: 1,\n                    id: 0x42f7 // EBMLReadVersion\n                }, {\n                    data: 4,\n                    id: 0x42f2 // EBMLMaxIDLength\n                }, {\n                    data: 8,\n                    id: 0x42f3 // EBMLMaxSizeLength\n                }, {\n                    data: "webm",\n                    id: 0x4282 // DocType\n                }, {\n                    data: 2,\n                    id: 0x4287 // DocTypeVersion\n                }, {\n                    data: 2,\n                    id: 0x4285 // DocTypeReadVersion\n                }]\n            }, {\n                id: 0x18538067, // Segment\n                data: [{\n                    id: 0x1549a966, // Info\n                    data: [{\n                        data: 1e6, //do things in millisecs (num of nanosecs for duration scale)\n                        id: 0x2ad7b1 // TimecodeScale\n                    }, {\n                        data: "whammy",\n                        id: 0x4d80 // MuxingApp\n                    }, {\n                        data: "whammy",\n                        id: 0x5741 // WritingApp\n                    }, {\n                        data: doubleToString(info.duration),\n                        id: 0x4489 // Duration\n                    }]\n                }, {\n                    id: 0x1654ae6b, // Tracks\n                    data: [{\n                        id: 0xae, // TrackEntry\n                        data: [{\n                            data: 1,\n                            id: 0xd7 // TrackNumber\n                        }, {\n                            data: 1,\n                            id: 0x73c5 // TrackUID\n                        }, {\n                            data: 0,\n                            id: 0x9c // FlagLacing\n                        }, {\n                            data: "und",\n                            id: 0x22b59c // Language\n                        }, {\n                            data: "V_VP8",\n                            id: 0x86 // CodecID\n                        }, {\n                            data: "VP8",\n                            id: 0x258688 // CodecName\n                        }, {\n                            data: 1,\n                            id: 0x83 // TrackType\n                        }, {\n                            id: 0xe0, // Video\n                            data: [{\n                                data: info.width,\n                                id: 0xb0 // PixelWidth\n                            }, {\n                                data: info.height,\n                                id: 0xba // PixelHeight\n                            }]\n                        }]\n                    }]\n                }]\n            }];\n\n            //Generate clusters (max duration)\n            var frameNumber = 0;\n            var clusterTimecode = 0;\n            while (frameNumber < frames.length) {\n                var clusterFrames = [];\n                var clusterDuration = 0;\n                do {\n                    clusterFrames.push(frames[frameNumber]);\n                    clusterDuration += frames[frameNumber].duration;\n                    frameNumber++;\n                } while (frameNumber < frames.length && clusterDuration < clusterMaxDuration);\n\n                var clusterCounter = 0;\n                var cluster = {\n                    id: 0x1f43b675, // Cluster\n                    data: getClusterData(clusterTimecode, clusterCounter, clusterFrames)\n                }; //Add cluster to segment\n                EBML[1].data.push(cluster);\n                clusterTimecode += clusterDuration;\n            }\n\n            return generateEBML(EBML);\n        }\n\n        function getClusterData(clusterTimecode, clusterCounter, clusterFrames) {\n            return [{\n                data: clusterTimecode,\n                id: 0xe7 // Timecode\n            }].concat(clusterFrames.map(function (webp) {\n                var block = makeSimpleBlock({\n                    discardable: 0,\n                    frame: webp.data.slice(4),\n                    invisible: 0,\n                    keyframe: 1,\n                    lacing: 0,\n                    trackNum: 1,\n                    timecode: Math.round(clusterCounter)\n                });\n                clusterCounter += webp.duration;\n                return {\n                    data: block,\n                    id: 0xa3\n                };\n            }));\n        }\n\n        // sums the lengths of all the frames and gets the duration\n\n        function checkFrames(frames) {\n            if (!frames[0]) {\n                postMessage({\n                    error: "Something went wrong. Maybe WebP format is not supported in the current browser."\n                });\n                return;\n            }\n\n            var width = frames[0].width,\n                height = frames[0].height,\n                duration = frames[0].duration;\n\n            for (var i = 1; i < frames.length; i++) {\n                duration += frames[i].duration;\n            }\n            return {\n                duration: duration,\n                width: width,\n                height: height\n            };\n        }\n\n        function numToBuffer(num) {\n            var parts = [];\n            while (num > 0) {\n                parts.push(num & 0xff);\n                num = num >> 8;\n            }\n            return new Uint8Array(parts.reverse());\n        }\n\n        function strToBuffer(str) {\n            return new Uint8Array(str.split("").map(function (e) {\n                return e.charCodeAt(0);\n            }));\n        }\n\n        function bitsToBuffer(bits) {\n            var data = [];\n            var pad = bits.length % 8 ? new Array(1 + 8 - bits.length % 8).join("0") : "";\n            bits = pad + bits;\n            for (var i = 0; i < bits.length; i += 8) {\n                data.push(parseInt(bits.substr(i, 8), 2));\n            }\n            return new Uint8Array(data);\n        }\n\n        function generateEBML(json) {\n            var ebml = [];\n            for (var i = 0; i < json.length; i++) {\n                var data = json[i].data;\n\n                if ((typeof data === "undefined" ? "undefined" : _typeof(data)) === "object") {\n                    data = generateEBML(data);\n                }\n\n                if (typeof data === "number") {\n                    data = bitsToBuffer(data.toString(2));\n                }\n\n                if (typeof data === "string") {\n                    data = strToBuffer(data);\n                }\n\n                var len = data.size || data.byteLength || data.length;\n                var zeroes = Math.ceil(Math.ceil(Math.log(len) / Math.log(2)) / 8);\n                var sizeToString = len.toString(2);\n                var padded = new Array(zeroes * 7 + 7 + 1 - sizeToString.length).join("0") + sizeToString;\n                var size = new Array(zeroes).join("0") + "1" + padded;\n\n                ebml.push(numToBuffer(json[i].id));\n                ebml.push(bitsToBuffer(size));\n                ebml.push(data);\n            }\n\n            return new Blob(ebml, {\n                type: "video/webm"\n            });\n        }\n\n        function toBinStrOld(bits) {\n            var data = "";\n            var pad = bits.length % 8 ? new Array(1 + 8 - bits.length % 8).join("0") : "";\n            bits = pad + bits;\n            for (var i = 0; i < bits.length; i += 8) {\n                data += String.fromCharCode(parseInt(bits.substr(i, 8), 2));\n            }\n            return data;\n        }\n\n        function makeSimpleBlock(data) {\n            var flags = 0;\n\n            if (data.keyframe) {\n                flags |= 128;\n            }\n\n            if (data.invisible) {\n                flags |= 8;\n            }\n\n            if (data.lacing) {\n                flags |= data.lacing << 1;\n            }\n\n            if (data.discardable) {\n                flags |= 1;\n            }\n\n            if (data.trackNum > 127) {\n                throw "TrackNumber > 127 not supported";\n            }\n\n            var out = [data.trackNum | 0x80, data.timecode >> 8, data.timecode & 0xff, flags].map(function (e) {\n                return String.fromCharCode(e);\n            }).join("") + data.frame;\n\n            return out;\n        }\n\n        function parseWebP(riff) {\n            var VP8 = riff.RIFF[0].WEBP[0];\n\n            var frameStart = VP8.indexOf("\\x9d\\x01\\x2a"); // A VP8 keyframe starts with the 0x9d012a header\n            for (var i = 0, c = []; i < 4; i++) {\n                c[i] = VP8.charCodeAt(frameStart + 3 + i);\n            }\n\n            var width, height, tmp;\n\n            //the code below is literally copied verbatim from the bitstream spec\n            tmp = c[1] << 8 | c[0];\n            width = tmp & 0x3fff;\n            tmp = c[3] << 8 | c[2];\n            height = tmp & 0x3fff;\n            return {\n                width: width,\n                height: height,\n                data: VP8,\n                riff: riff\n            };\n        }\n\n        function getStrLength(string, offset) {\n            return parseInt(string.substr(offset + 4, 4).split("").map(function (i) {\n                var unpadded = i.charCodeAt(0).toString(2);\n                return new Array(8 - unpadded.length + 1).join("0") + unpadded;\n            }).join(""), 2);\n        }\n\n        function parseRIFF(string) {\n            var offset = 0;\n            var chunks = {};\n\n            while (offset < string.length) {\n                var id = string.substr(offset, 4);\n                var len = getStrLength(string, offset);\n                var data = string.substr(offset + 4 + 4, len);\n                offset += 4 + 4 + len;\n                chunks[id] = chunks[id] || [];\n\n                if (id === "RIFF" || id === "LIST") {\n                    chunks[id].push(parseRIFF(data));\n                } else {\n                    chunks[id].push(data);\n                }\n            }\n            return chunks;\n        }\n\n        function doubleToString(num) {\n            return [].slice.call(new Uint8Array(new Float64Array([num]).buffer), 0).map(function (e) {\n                return String.fromCharCode(e);\n            }).reverse().join("");\n        }\n\n        var webm = new ArrayToWebM(frames.map(function (frame) {\n            var webp = parseWebP(parseRIFF(atob(frame.image.slice(23))));\n            webp.duration = frame.duration;\n            return webp;\n        }));\n\n        postMessage(webm);\n    }\n\n    /**\r\n     * Encodes frames in WebM container. It uses WebWorkinvoke to invoke \'ArrayToWebM\' method.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof Whammy\r\n     * @example\r\n     * recorder = new Whammy().Video(0.8, 100);\r\n     * recorder.compile(function(blob) {\r\n     *    // blob.size - blob.type\r\n     * });\r\n     */\n    WhammyVideo.prototype.compile = function (callback) {\n        var webWorker = processInWebWorker(whammyInWebWorker);\n\n        webWorker.onmessage = function (event) {\n            if (event.data.error) {\n                console.error(event.data.error);\n                return;\n            }\n            callback(event.data);\n        };\n\n        webWorker.postMessage(this.frames);\n    };\n\n    return {\n        /**\r\n         * A more abstract-ish API.\r\n         * @method\r\n         * @memberof Whammy\r\n         * @example\r\n         * recorder = new Whammy().Video(0.8, 100);\r\n         * @param {?number} speed - 0.8\r\n         * @param {?number} quality - 100\r\n         */\n        Video: WhammyVideo\n    };\n}();\n\nif (typeof MediaStreamRecorder !== "undefined") {\n    MediaStreamRecorder.Whammy = Whammy;\n}\n\n// Last time updated at Nov 18, 2014, 08:32:23\n\n// Latest file can be found here: https://cdn.webrtc-experiment.com/ConcatenateBlobs.js\n\n// Muaz Khan    - www.MuazKhan.com\n// MIT License  - www.WebRTC-Experiment.com/licence\n// Source Code  - https://github.com/muaz-khan/ConcatenateBlobs\n// Demo         - https://www.WebRTC-Experiment.com/ConcatenateBlobs/\n\n// ___________________\n// ConcatenateBlobs.js\n\n// Simply pass array of blobs.\n// This javascript library will concatenate all blobs in single "Blob" object.\n\n(function () {\n    window.ConcatenateBlobs = function (blobs, type, callback) {\n        // 여기 녹취15\n        console.log("[컨켓트블랍스]");\n        var buffers = [];\n\n        var index = 0;\n\n        function readAsArrayBuffer() {\n            if (!blobs[index]) {\n                console.log("어떻게 바뀌는지 : before:", blobs, blobs[0], index);\n                // 여기 녹취16 concatenateBuffers로\n                var res = concatenateBuffers();\n                // 여기 녹취 19\n                console.log("바뀐 후 : after:", res);\n                return res;\n                return;\n            }\n            //리더 온로드 이벤트로 녹음 데이터를 먼저 읽고, 그걸 버퍼로 만들어놓는다.\n            var reader = new FileReader();\n            reader.onload = function (event) {\n                console.log("파일리더 이벤트", event.target.result);\n                buffers.push(event.target.result);\n                index++;\n                //녹음 데이터 버퍼가 만들어진 상태에서, 내부에 녹음 버퍼를 합쳐주는 함수(concate)를 호출하는 readAsArrayBuffer()를 호출\n                readAsArrayBuffer(); //\n            };\n            reader.readAsArrayBuffer(blobs[index]);\n        }\n\n        readAsArrayBuffer();\n\n        function concatenateBuffers() {\n            // 여기 녹취17\n            console.log("컨케트 내부함수 여긴 안탈거고", buffers);\n            var byteLength = 0;\n            buffers.forEach(function (buffer) {\n                byteLength += buffer.byteLength;\n            });\n\n            var tmp = new Uint16Array(byteLength); //바이트크기만큼 빈 어레이 생성\n            console.log("tmp buffer111:", buffers, tmp.buffer);\n            var lastOffset = 0;\n            buffers.forEach(function (buffer) {\n                // BYTES_PER_ELEMENT == 2 for Uint16Array\n                var reusableByteLength = buffer.byteLength;\n                if (reusableByteLength % 2 != 0) {\n                    buffer = buffer.slice(0, reusableByteLength - 1);\n                }\n                tmp.set(new Uint16Array(buffer), lastOffset);\n                lastOffset += reusableByteLength;\n            });\n\n            console.log("tmp buffer222:", tmp, buffers[0], tmp.buffer);\n            //라이브러리 기존 코드, 왜 이렇게 동작시켜야 하는지 이해가 안됨...\n            // var blob = new Blob([tmp.buffer], { //버퍼 사이즈, 재생 길이 2배로 늘어남\n            //     type: type\n            // });\n            var blob = new Blob([buffers[0]], {\n                type: type\n            });\n\n            console.log("리턴되는 블랍:", blob);\n            callback(blob);\n            return blob;\n        }\n    };\n})();\n\n// https://github.com/streamproc/MediaStreamRecorder/issues/42\nif (true /* && !!module.exports*/) {\n        module.exports = MediaStreamRecorder;\n    }\n\nif (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n        return MediaStreamRecorder;\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n}\n\n//# sourceURL=webpack://zibox2-sdk/./public/javascripts/MediaStreamRecorder.js?')},"./src/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval('\n\nvar _main = __webpack_require__(/*! ./main */ "./src/main.js");\n\nvar _main2 = _interopRequireDefault(_main);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//window zibox2 등록\nif (window) {\n  window.Zibox2 = _main2.default;\n}\n\nmodule.exports = _main2.default;\n\n//# sourceURL=webpack://zibox2-sdk/./src/index.js?')},"./src/lib/audionode.js":()=>{"use strict";eval("\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/******/(function (modules) {\n  // webpackBootstrap\n  /******/ // The module cache\n  /******/var installedModules = {};\n  /******/\n  /******/ // The require function\n  /******/function __nested_webpack_require_462__(moduleId) {\n    /******/\n    /******/ // Check if module is in cache\n    /******/if (installedModules[moduleId]) {\n      /******/return installedModules[moduleId].exports;\n      /******/\n    }\n    /******/ // Create a new module (and put it into the cache)\n    /******/var module = installedModules[moduleId] = {\n      /******/i: moduleId,\n      /******/l: false,\n      /******/exports: {}\n      /******/ };\n    /******/\n    /******/ // Execute the module function\n    /******/modules[moduleId].call(module.exports, module, module.exports, __nested_webpack_require_462__);\n    /******/\n    /******/ // Flag the module as loaded\n    /******/module.l = true;\n    /******/\n    /******/ // Return the exports of the module\n    /******/return module.exports;\n    /******/\n  }\n  /******/\n  /******/\n  /******/ // expose the modules object (__webpack_modules__)\n  /******/__nested_webpack_require_462__.m = modules;\n  /******/\n  /******/ // expose the module cache\n  /******/__nested_webpack_require_462__.c = installedModules;\n  /******/\n  /******/ // define getter function for harmony exports\n  /******/__nested_webpack_require_462__.d = function (exports, name, getter) {\n    /******/if (!__nested_webpack_require_462__.o(exports, name)) {\n      /******/Object.defineProperty(exports, name, {\n        /******/configurable: false,\n        /******/enumerable: true,\n        /******/get: getter\n        /******/ });\n      /******/\n    }\n    /******/\n  };\n  /******/\n  /******/ // getDefaultExport function for compatibility with non-harmony modules\n  /******/__nested_webpack_require_462__.n = function (module) {\n    /******/var getter = module && module.__esModule ?\n    /******/function getDefault() {\n      return module['default'];\n    } :\n    /******/function getModuleExports() {\n      return module;\n    };\n    /******/__nested_webpack_require_462__.d(getter, 'a', getter);\n    /******/return getter;\n    /******/\n  };\n  /******/\n  /******/ // Object.prototype.hasOwnProperty.call\n  /******/__nested_webpack_require_462__.o = function (object, property) {\n    return Object.prototype.hasOwnProperty.call(object, property);\n  };\n  /******/\n  /******/ // __webpack_public_path__\n  /******/__nested_webpack_require_462__.p = \"\";\n  /******/\n  /******/ // Load entry module and return exports\n  /******/return __nested_webpack_require_462__(__nested_webpack_require_462__.s = 17);\n  /******/\n})(\n/************************************************************************/\n/******/[\n/* 0 */\n/***/function (module, exports, __nested_webpack_require_2888__) {\n\n  \"use strict\";\n  // Copyright Joyent, Inc. and other Node contributors.\n  //\n  // Permission is hereby granted, free of charge, to any person obtaining a\n  // copy of this software and associated documentation files (the\n  // \"Software\"), to deal in the Software without restriction, including\n  // without limitation the rights to use, copy, modify, merge, publish,\n  // distribute, sublicense, and/or sell copies of the Software, and to permit\n  // persons to whom the Software is furnished to do so, subject to the\n  // following conditions:\n  //\n  // The above copyright notice and this permission notice shall be included\n  // in all copies or substantial portions of the Software.\n  //\n  // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n  // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n  // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n  // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n  // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n  // USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n  // a duplex stream is just a stream that is both readable and writable.\n  // Since JS doesn't have multiple prototypal inheritance, this class\n  // prototypally inherits from Readable, and then parasitically from\n  // Writable.\n\n\n  /*<replacement>*/\n\n  var pna = __nested_webpack_require_2888__(5);\n  /*</replacement>*/\n\n  /*<replacement>*/\n  var objectKeys = Object.keys || function (obj) {\n    var keys = [];\n    for (var key in obj) {\n      keys.push(key);\n    }return keys;\n  };\n  /*</replacement>*/\n\n  module.exports = Duplex;\n\n  /*<replacement>*/\n  var util = __nested_webpack_require_2888__(4);\n  util.inherits = __nested_webpack_require_2888__(2);\n  /*</replacement>*/\n\n  var Readable = __nested_webpack_require_2888__(12);\n  var Writable = __nested_webpack_require_2888__(10);\n\n  util.inherits(Duplex, Readable);\n\n  {\n    // avoid scope creep, the keys array can then be collected\n    var keys = objectKeys(Writable.prototype);\n    for (var v = 0; v < keys.length; v++) {\n      var method = keys[v];\n      if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n    }\n  }\n\n  function Duplex(options) {\n    if (!(this instanceof Duplex)) return new Duplex(options);\n\n    Readable.call(this, options);\n    Writable.call(this, options);\n\n    if (options && options.readable === false) this.readable = false;\n\n    if (options && options.writable === false) this.writable = false;\n\n    this.allowHalfOpen = true;\n    if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n    this.once('end', onend);\n  }\n\n  Object.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n    // making it explicit this property is not enumerable\n    // because otherwise some prototype manipulation in\n    // userland will fail\n    enumerable: false,\n    get: function get() {\n      return this._writableState.highWaterMark;\n    }\n  });\n\n  // the no-half-open enforcer\n  function onend() {\n    // if we allow half-open state, or if the writable side ended,\n    // then we're ok.\n    if (this.allowHalfOpen || this._writableState.ended) return;\n\n    // no more data can be written.\n    // But allow more writes to happen in this tick.\n    pna.nextTick(onEndNT, this);\n  }\n\n  function onEndNT(self) {\n    self.end();\n  }\n\n  Object.defineProperty(Duplex.prototype, 'destroyed', {\n    get: function get() {\n      if (this._readableState === undefined || this._writableState === undefined) {\n        return false;\n      }\n      return this._readableState.destroyed && this._writableState.destroyed;\n    },\n    set: function set(value) {\n      // we ignore the value if the stream\n      // has not been initialized yet\n      if (this._readableState === undefined || this._writableState === undefined) {\n        return;\n      }\n\n      // backward compatibility, the user is explicitly\n      // managing destroyed\n      this._readableState.destroyed = value;\n      this._writableState.destroyed = value;\n    }\n  });\n\n  Duplex.prototype._destroy = function (err, cb) {\n    this.push(null);\n    this.end();\n\n    pna.nextTick(cb, err);\n  };\n\n  /***/\n},\n/* 1 */\n/***/function (module, exports) {\n\n  var g;\n\n  // This works in non-strict mode\n  g = function () {\n    return this;\n  }();\n\n  try {\n    // This works if eval is allowed (see CSP)\n    g = g || Function(\"return this\")() || (1, eval)(\"this\");\n  } catch (e) {\n    // This works if the window reference is available\n    if ((typeof window === 'undefined' ? 'undefined' : _typeof(window)) === \"object\") g = window;\n  }\n\n  // g can still be undefined, but nothing to do about it...\n  // We return undefined, instead of nothing here, so it's\n  // easier to handle this case. if(!global) { ...}\n\n  module.exports = g;\n\n  /***/\n},\n/* 2 */\n/***/function (module, exports) {\n\n  if (typeof Object.create === 'function') {\n    // implementation from standard node.js 'util' module\n    module.exports = function inherits(ctor, superCtor) {\n      ctor.super_ = superCtor;\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n    };\n  } else {\n    // old school shim for old browsers\n    module.exports = function inherits(ctor, superCtor) {\n      ctor.super_ = superCtor;\n      var TempCtor = function TempCtor() {};\n      TempCtor.prototype = superCtor.prototype;\n      ctor.prototype = new TempCtor();\n      ctor.prototype.constructor = ctor;\n    };\n  }\n\n  /***/\n},\n/* 3 */\n/***/function (module, exports) {\n\n  // shim for using process in browser\n  var process = module.exports = {};\n\n  // cached from whatever global is present so that test runners that stub it\n  // don't break things.  But we need to wrap it in a try catch in case it is\n  // wrapped in strict mode code which doesn't define any globals.  It's inside a\n  // function because try/catches deoptimize in certain engines.\n\n  var cachedSetTimeout;\n  var cachedClearTimeout;\n\n  function defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n  }\n  function defaultClearTimeout() {\n    throw new Error('clearTimeout has not been defined');\n  }\n  (function () {\n    try {\n      if (typeof setTimeout === 'function') {\n        cachedSetTimeout = setTimeout;\n      } else {\n        cachedSetTimeout = defaultSetTimout;\n      }\n    } catch (e) {\n      cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n      if (typeof clearTimeout === 'function') {\n        cachedClearTimeout = clearTimeout;\n      } else {\n        cachedClearTimeout = defaultClearTimeout;\n      }\n    } catch (e) {\n      cachedClearTimeout = defaultClearTimeout;\n    }\n  })();\n  function runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n      //normal enviroments in sane situations\n      return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n      cachedSetTimeout = setTimeout;\n      return setTimeout(fun, 0);\n    }\n    try {\n      // when when somebody has screwed with setTimeout but no I.E. maddness\n      return cachedSetTimeout(fun, 0);\n    } catch (e) {\n      try {\n        // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n        return cachedSetTimeout.call(null, fun, 0);\n      } catch (e) {\n        // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n        return cachedSetTimeout.call(this, fun, 0);\n      }\n    }\n  }\n  function runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n      //normal enviroments in sane situations\n      return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n      cachedClearTimeout = clearTimeout;\n      return clearTimeout(marker);\n    }\n    try {\n      // when when somebody has screwed with setTimeout but no I.E. maddness\n      return cachedClearTimeout(marker);\n    } catch (e) {\n      try {\n        // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n        return cachedClearTimeout.call(null, marker);\n      } catch (e) {\n        // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n        // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n        return cachedClearTimeout.call(this, marker);\n      }\n    }\n  }\n  var queue = [];\n  var draining = false;\n  var currentQueue;\n  var queueIndex = -1;\n\n  function cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n      return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n      queue = currentQueue.concat(queue);\n    } else {\n      queueIndex = -1;\n    }\n    if (queue.length) {\n      drainQueue();\n    }\n  }\n\n  function drainQueue() {\n    if (draining) {\n      return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while (len) {\n      currentQueue = queue;\n      queue = [];\n      while (++queueIndex < len) {\n        if (currentQueue) {\n          currentQueue[queueIndex].run();\n        }\n      }\n      queueIndex = -1;\n      len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n  }\n\n  process.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n      for (var i = 1; i < arguments.length; i++) {\n        args[i - 1] = arguments[i];\n      }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n      runTimeout(drainQueue);\n    }\n  };\n\n  // v8 likes predictible objects\n  function Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n  }\n  Item.prototype.run = function () {\n    this.fun.apply(null, this.array);\n  };\n  process.title = 'browser';\n  process.browser = true;\n  process.env = {};\n  process.argv = [];\n  process.version = ''; // empty string to avoid regexp issues\n  process.versions = {};\n\n  function noop() {}\n\n  process.on = noop;\n  process.addListener = noop;\n  process.once = noop;\n  process.off = noop;\n  process.removeListener = noop;\n  process.removeAllListeners = noop;\n  process.emit = noop;\n  process.prependListener = noop;\n  process.prependOnceListener = noop;\n\n  process.listeners = function (name) {\n    return [];\n  };\n\n  process.binding = function (name) {\n    throw new Error('process.binding is not supported');\n  };\n\n  process.cwd = function () {\n    return '/';\n  };\n  process.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n  };\n  process.umask = function () {\n    return 0;\n  };\n\n  /***/\n},\n/* 4 */\n/***/function (module, exports, __nested_webpack_require_14045__) {\n\n  /* WEBPACK VAR INJECTION */(function (Buffer) {\n    // Copyright Joyent, Inc. and other Node contributors.\n    //\n    // Permission is hereby granted, free of charge, to any person obtaining a\n    // copy of this software and associated documentation files (the\n    // \"Software\"), to deal in the Software without restriction, including\n    // without limitation the rights to use, copy, modify, merge, publish,\n    // distribute, sublicense, and/or sell copies of the Software, and to permit\n    // persons to whom the Software is furnished to do so, subject to the\n    // following conditions:\n    //\n    // The above copyright notice and this permission notice shall be included\n    // in all copies or substantial portions of the Software.\n    //\n    // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n    // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n    // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n    // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n    // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n    // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n    // USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n    // NOTE: These type checking functions intentionally don't use `instanceof`\n    // because it is fragile and can be easily faked with `Object.create()`.\n\n    function isArray(arg) {\n      if (Array.isArray) {\n        return Array.isArray(arg);\n      }\n      return objectToString(arg) === '[object Array]';\n    }\n    exports.isArray = isArray;\n\n    function isBoolean(arg) {\n      return typeof arg === 'boolean';\n    }\n    exports.isBoolean = isBoolean;\n\n    function isNull(arg) {\n      return arg === null;\n    }\n    exports.isNull = isNull;\n\n    function isNullOrUndefined(arg) {\n      return arg == null;\n    }\n    exports.isNullOrUndefined = isNullOrUndefined;\n\n    function isNumber(arg) {\n      return typeof arg === 'number';\n    }\n    exports.isNumber = isNumber;\n\n    function isString(arg) {\n      return typeof arg === 'string';\n    }\n    exports.isString = isString;\n\n    function isSymbol(arg) {\n      return (typeof arg === 'undefined' ? 'undefined' : _typeof(arg)) === 'symbol';\n    }\n    exports.isSymbol = isSymbol;\n\n    function isUndefined(arg) {\n      return arg === void 0;\n    }\n    exports.isUndefined = isUndefined;\n\n    function isRegExp(re) {\n      return objectToString(re) === '[object RegExp]';\n    }\n    exports.isRegExp = isRegExp;\n\n    function isObject(arg) {\n      return (typeof arg === 'undefined' ? 'undefined' : _typeof(arg)) === 'object' && arg !== null;\n    }\n    exports.isObject = isObject;\n\n    function isDate(d) {\n      return objectToString(d) === '[object Date]';\n    }\n    exports.isDate = isDate;\n\n    function isError(e) {\n      return objectToString(e) === '[object Error]' || e instanceof Error;\n    }\n    exports.isError = isError;\n\n    function isFunction(arg) {\n      return typeof arg === 'function';\n    }\n    exports.isFunction = isFunction;\n\n    function isPrimitive(arg) {\n      return arg === null || typeof arg === 'boolean' || typeof arg === 'number' || typeof arg === 'string' || (typeof arg === 'undefined' ? 'undefined' : _typeof(arg)) === 'symbol' || // ES6 symbol\n      typeof arg === 'undefined';\n    }\n    exports.isPrimitive = isPrimitive;\n\n    exports.isBuffer = Buffer.isBuffer;\n\n    function objectToString(o) {\n      return Object.prototype.toString.call(o);\n    }\n\n    /* WEBPACK VAR INJECTION */\n  }).call(exports, __nested_webpack_require_14045__(7).Buffer);\n\n  /***/\n},\n/* 5 */\n/***/function (module, exports, __nested_webpack_require_17715__) {\n\n  \"use strict\";\n  /* WEBPACK VAR INJECTION */\n  (function (process) {\n\n    if (!process.version || process.version.indexOf('v0.') === 0 || process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n      module.exports = { nextTick: nextTick };\n    } else {\n      module.exports = process;\n    }\n\n    function nextTick(fn, arg1, arg2, arg3) {\n      if (typeof fn !== 'function') {\n        throw new TypeError('\"callback\" argument must be a function');\n      }\n      var len = arguments.length;\n      var args, i;\n      switch (len) {\n        case 0:\n        case 1:\n          return process.nextTick(fn);\n        case 2:\n          return process.nextTick(function afterTickOne() {\n            fn.call(null, arg1);\n          });\n        case 3:\n          return process.nextTick(function afterTickTwo() {\n            fn.call(null, arg1, arg2);\n          });\n        case 4:\n          return process.nextTick(function afterTickThree() {\n            fn.call(null, arg1, arg2, arg3);\n          });\n        default:\n          args = new Array(len - 1);\n          i = 0;\n          while (i < args.length) {\n            args[i++] = arguments[i];\n          }\n          return process.nextTick(function afterTick() {\n            fn.apply(null, args);\n          });\n      }\n    }\n\n    /* WEBPACK VAR INJECTION */\n  }).call(exports, __nested_webpack_require_17715__(3));\n\n  /***/\n},\n/* 6 */\n/***/function (module, exports, __nested_webpack_require_19161__) {\n\n  /* eslint-disable node/no-deprecated-api */\n  var buffer = __nested_webpack_require_19161__(7);\n  var Buffer = buffer.Buffer;\n\n  // alternative to using Object.keys for old browsers\n  function copyProps(src, dst) {\n    for (var key in src) {\n      dst[key] = src[key];\n    }\n  }\n  if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n    module.exports = buffer;\n  } else {\n    // Copy properties from require('buffer')\n    copyProps(buffer, exports);\n    exports.Buffer = SafeBuffer;\n  }\n\n  function SafeBuffer(arg, encodingOrOffset, length) {\n    return Buffer(arg, encodingOrOffset, length);\n  }\n\n  // Copy static methods from Buffer\n  copyProps(Buffer, SafeBuffer);\n\n  SafeBuffer.from = function (arg, encodingOrOffset, length) {\n    if (typeof arg === 'number') {\n      throw new TypeError('Argument must not be a number');\n    }\n    return Buffer(arg, encodingOrOffset, length);\n  };\n\n  SafeBuffer.alloc = function (size, fill, encoding) {\n    if (typeof size !== 'number') {\n      throw new TypeError('Argument must be a number');\n    }\n    var buf = Buffer(size);\n    if (fill !== undefined) {\n      if (typeof encoding === 'string') {\n        buf.fill(fill, encoding);\n      } else {\n        buf.fill(fill);\n      }\n    } else {\n      buf.fill(0);\n    }\n    return buf;\n  };\n\n  SafeBuffer.allocUnsafe = function (size) {\n    if (typeof size !== 'number') {\n      throw new TypeError('Argument must be a number');\n    }\n    return Buffer(size);\n  };\n\n  SafeBuffer.allocUnsafeSlow = function (size) {\n    if (typeof size !== 'number') {\n      throw new TypeError('Argument must be a number');\n    }\n    return buffer.SlowBuffer(size);\n  };\n\n  /***/\n},\n/* 7 */\n/***/function (module, exports, __nested_webpack_require_20903__) {\n\n  \"use strict\";\n  /* WEBPACK VAR INJECTION */\n  (function (global) {\n    /*!\r\n    * The buffer module from node.js, for the browser.\r\n    *\r\n    * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\r\n    * @license  MIT\r\n    */\n    /* eslint-disable no-proto */\n\n    var base64 = __nested_webpack_require_20903__(19);\n    var ieee754 = __nested_webpack_require_20903__(20);\n    var isArray = __nested_webpack_require_20903__(11);\n\n    exports.Buffer = Buffer;\n    exports.SlowBuffer = SlowBuffer;\n    exports.INSPECT_MAX_BYTES = 50;\n\n    /**\r\n     * If `Buffer.TYPED_ARRAY_SUPPORT`:\r\n     *   === true    Use Uint8Array implementation (fastest)\r\n     *   === false   Use Object implementation (most compatible, even IE6)\r\n     *\r\n     * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\r\n     * Opera 11.6+, iOS 4.2+.\r\n     *\r\n     * Due to various browser bugs, sometimes the Object implementation will be used even\r\n     * when the browser supports typed arrays.\r\n     *\r\n     * Note:\r\n     *\r\n     *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\r\n     *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\r\n     *\r\n     *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\r\n     *\r\n     *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\r\n     *     incorrect length in some situations.\r\n    \r\n     * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\r\n     * get the Object implementation, which is slower but behaves correctly.\r\n     */\n    Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined ? global.TYPED_ARRAY_SUPPORT : typedArraySupport();\n\n    /*\r\n     * Export kMaxLength after typed array support is determined.\r\n     */\n    exports.kMaxLength = kMaxLength();\n\n    function typedArraySupport() {\n      try {\n        var arr = new Uint8Array(1);\n        arr.__proto__ = { __proto__: Uint8Array.prototype, foo: function foo() {\n            return 42;\n          } };\n        return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0; // ie10 has broken `subarray`\n      } catch (e) {\n        return false;\n      }\n    }\n\n    function kMaxLength() {\n      return Buffer.TYPED_ARRAY_SUPPORT ? 0x7fffffff : 0x3fffffff;\n    }\n\n    function createBuffer(that, length) {\n      if (kMaxLength() < length) {\n        throw new RangeError('Invalid typed array length');\n      }\n      if (Buffer.TYPED_ARRAY_SUPPORT) {\n        // Return an augmented `Uint8Array` instance, for best performance\n        that = new Uint8Array(length);\n        that.__proto__ = Buffer.prototype;\n      } else {\n        // Fallback: Return an object instance of the Buffer class\n        if (that === null) {\n          that = new Buffer(length);\n        }\n        that.length = length;\n      }\n\n      return that;\n    }\n\n    /**\r\n     * The Buffer constructor returns instances of `Uint8Array` that have their\r\n     * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\r\n     * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\r\n     * and the `Uint8Array` methods. Square bracket notation works as expected -- it\r\n     * returns a single octet.\r\n     *\r\n     * The `Uint8Array` prototype remains unmodified.\r\n     */\n\n    function Buffer(arg, encodingOrOffset, length) {\n      if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n        return new Buffer(arg, encodingOrOffset, length);\n      }\n\n      // Common case.\n      if (typeof arg === 'number') {\n        if (typeof encodingOrOffset === 'string') {\n          throw new Error('If encoding is specified then the first argument must be a string');\n        }\n        return allocUnsafe(this, arg);\n      }\n      return from(this, arg, encodingOrOffset, length);\n    }\n\n    Buffer.poolSize = 8192; // not used by this implementation\n\n    // TODO: Legacy, not needed anymore. Remove in next major version.\n    Buffer._augment = function (arr) {\n      arr.__proto__ = Buffer.prototype;\n      return arr;\n    };\n\n    function from(that, value, encodingOrOffset, length) {\n      if (typeof value === 'number') {\n        throw new TypeError('\"value\" argument must not be a number');\n      }\n\n      if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n        return fromArrayBuffer(that, value, encodingOrOffset, length);\n      }\n\n      if (typeof value === 'string') {\n        return fromString(that, value, encodingOrOffset);\n      }\n\n      return fromObject(that, value);\n    }\n\n    /**\r\n     * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\r\n     * if value is a number.\r\n     * Buffer.from(str[, encoding])\r\n     * Buffer.from(array)\r\n     * Buffer.from(buffer)\r\n     * Buffer.from(arrayBuffer[, byteOffset[, length]])\r\n     **/\n    Buffer.from = function (value, encodingOrOffset, length) {\n      return from(null, value, encodingOrOffset, length);\n    };\n\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n      Buffer.prototype.__proto__ = Uint8Array.prototype;\n      Buffer.__proto__ = Uint8Array;\n      if (typeof Symbol !== 'undefined' && Symbol.species && Buffer[Symbol.species] === Buffer) {\n        // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n        Object.defineProperty(Buffer, Symbol.species, {\n          value: null,\n          configurable: true\n        });\n      }\n    }\n\n    function assertSize(size) {\n      if (typeof size !== 'number') {\n        throw new TypeError('\"size\" argument must be a number');\n      } else if (size < 0) {\n        throw new RangeError('\"size\" argument must not be negative');\n      }\n    }\n\n    function alloc(that, size, fill, encoding) {\n      assertSize(size);\n      if (size <= 0) {\n        return createBuffer(that, size);\n      }\n      if (fill !== undefined) {\n        // Only pay attention to encoding if it's a string. This\n        // prevents accidentally sending in a number that would\n        // be interpretted as a start offset.\n        return typeof encoding === 'string' ? createBuffer(that, size).fill(fill, encoding) : createBuffer(that, size).fill(fill);\n      }\n      return createBuffer(that, size);\n    }\n\n    /**\r\n     * Creates a new filled Buffer instance.\r\n     * alloc(size[, fill[, encoding]])\r\n     **/\n    Buffer.alloc = function (size, fill, encoding) {\n      return alloc(null, size, fill, encoding);\n    };\n\n    function allocUnsafe(that, size) {\n      assertSize(size);\n      that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);\n      if (!Buffer.TYPED_ARRAY_SUPPORT) {\n        for (var i = 0; i < size; ++i) {\n          that[i] = 0;\n        }\n      }\n      return that;\n    }\n\n    /**\r\n     * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\r\n     * */\n    Buffer.allocUnsafe = function (size) {\n      return allocUnsafe(null, size);\n    };\n    /**\r\n     * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\r\n     */\n    Buffer.allocUnsafeSlow = function (size) {\n      return allocUnsafe(null, size);\n    };\n\n    function fromString(that, string, encoding) {\n      if (typeof encoding !== 'string' || encoding === '') {\n        encoding = 'utf8';\n      }\n\n      if (!Buffer.isEncoding(encoding)) {\n        throw new TypeError('\"encoding\" must be a valid string encoding');\n      }\n\n      var length = byteLength(string, encoding) | 0;\n      that = createBuffer(that, length);\n\n      var actual = that.write(string, encoding);\n\n      if (actual !== length) {\n        // Writing a hex string, for example, that contains invalid characters will\n        // cause everything after the first invalid character to be ignored. (e.g.\n        // 'abxxcd' will be treated as 'ab')\n        that = that.slice(0, actual);\n      }\n\n      return that;\n    }\n\n    function fromArrayLike(that, array) {\n      var length = array.length < 0 ? 0 : checked(array.length) | 0;\n      that = createBuffer(that, length);\n      for (var i = 0; i < length; i += 1) {\n        that[i] = array[i] & 255;\n      }\n      return that;\n    }\n\n    function fromArrayBuffer(that, array, byteOffset, length) {\n      array.byteLength; // this throws if `array` is not a valid ArrayBuffer\n\n      if (byteOffset < 0 || array.byteLength < byteOffset) {\n        throw new RangeError('\\'offset\\' is out of bounds');\n      }\n\n      if (array.byteLength < byteOffset + (length || 0)) {\n        throw new RangeError('\\'length\\' is out of bounds');\n      }\n\n      if (byteOffset === undefined && length === undefined) {\n        array = new Uint8Array(array);\n      } else if (length === undefined) {\n        array = new Uint8Array(array, byteOffset);\n      } else {\n        array = new Uint8Array(array, byteOffset, length);\n      }\n\n      if (Buffer.TYPED_ARRAY_SUPPORT) {\n        // Return an augmented `Uint8Array` instance, for best performance\n        that = array;\n        that.__proto__ = Buffer.prototype;\n      } else {\n        // Fallback: Return an object instance of the Buffer class\n        that = fromArrayLike(that, array);\n      }\n      return that;\n    }\n\n    function fromObject(that, obj) {\n      if (Buffer.isBuffer(obj)) {\n        var len = checked(obj.length) | 0;\n        that = createBuffer(that, len);\n\n        if (that.length === 0) {\n          return that;\n        }\n\n        obj.copy(that, 0, 0, len);\n        return that;\n      }\n\n      if (obj) {\n        if (typeof ArrayBuffer !== 'undefined' && obj.buffer instanceof ArrayBuffer || 'length' in obj) {\n          if (typeof obj.length !== 'number' || isnan(obj.length)) {\n            return createBuffer(that, 0);\n          }\n          return fromArrayLike(that, obj);\n        }\n\n        if (obj.type === 'Buffer' && isArray(obj.data)) {\n          return fromArrayLike(that, obj.data);\n        }\n      }\n\n      throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.');\n    }\n\n    function checked(length) {\n      // Note: cannot use `length < kMaxLength()` here because that fails when\n      // length is NaN (which is otherwise coerced to zero.)\n      if (length >= kMaxLength()) {\n        throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + kMaxLength().toString(16) + ' bytes');\n      }\n      return length | 0;\n    }\n\n    function SlowBuffer(length) {\n      if (+length != length) {\n        // eslint-disable-line eqeqeq\n        length = 0;\n      }\n      return Buffer.alloc(+length);\n    }\n\n    Buffer.isBuffer = function isBuffer(b) {\n      return !!(b != null && b._isBuffer);\n    };\n\n    Buffer.compare = function compare(a, b) {\n      if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n        throw new TypeError('Arguments must be Buffers');\n      }\n\n      if (a === b) return 0;\n\n      var x = a.length;\n      var y = b.length;\n\n      for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n        if (a[i] !== b[i]) {\n          x = a[i];\n          y = b[i];\n          break;\n        }\n      }\n\n      if (x < y) return -1;\n      if (y < x) return 1;\n      return 0;\n    };\n\n    Buffer.isEncoding = function isEncoding(encoding) {\n      switch (String(encoding).toLowerCase()) {\n        case 'hex':\n        case 'utf8':\n        case 'utf-8':\n        case 'ascii':\n        case 'latin1':\n        case 'binary':\n        case 'base64':\n        case 'ucs2':\n        case 'ucs-2':\n        case 'utf16le':\n        case 'utf-16le':\n          return true;\n        default:\n          return false;\n      }\n    };\n\n    Buffer.concat = function concat(list, length) {\n      if (!isArray(list)) {\n        throw new TypeError('\"list\" argument must be an Array of Buffers');\n      }\n\n      if (list.length === 0) {\n        return Buffer.alloc(0);\n      }\n\n      var i;\n      if (length === undefined) {\n        length = 0;\n        for (i = 0; i < list.length; ++i) {\n          length += list[i].length;\n        }\n      }\n\n      var buffer = Buffer.allocUnsafe(length);\n      var pos = 0;\n      for (i = 0; i < list.length; ++i) {\n        var buf = list[i];\n        if (!Buffer.isBuffer(buf)) {\n          throw new TypeError('\"list\" argument must be an Array of Buffers');\n        }\n        buf.copy(buffer, pos);\n        pos += buf.length;\n      }\n      return buffer;\n    };\n\n    function byteLength(string, encoding) {\n      if (Buffer.isBuffer(string)) {\n        return string.length;\n      }\n      if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' && (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n        return string.byteLength;\n      }\n      if (typeof string !== 'string') {\n        string = '' + string;\n      }\n\n      var len = string.length;\n      if (len === 0) return 0;\n\n      // Use a for loop to avoid recursion\n      var loweredCase = false;\n      for (;;) {\n        switch (encoding) {\n          case 'ascii':\n          case 'latin1':\n          case 'binary':\n            return len;\n          case 'utf8':\n          case 'utf-8':\n          case undefined:\n            return utf8ToBytes(string).length;\n          case 'ucs2':\n          case 'ucs-2':\n          case 'utf16le':\n          case 'utf-16le':\n            return len * 2;\n          case 'hex':\n            return len >>> 1;\n          case 'base64':\n            return base64ToBytes(string).length;\n          default:\n            if (loweredCase) return utf8ToBytes(string).length; // assume utf8\n            encoding = ('' + encoding).toLowerCase();\n            loweredCase = true;\n        }\n      }\n    }\n    Buffer.byteLength = byteLength;\n\n    function slowToString(encoding, start, end) {\n      var loweredCase = false;\n\n      // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n      // property of a typed array.\n\n      // This behaves neither like String nor Uint8Array in that we set start/end\n      // to their upper/lower bounds if the value passed is out of range.\n      // undefined is handled specially as per ECMA-262 6th Edition,\n      // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n      if (start === undefined || start < 0) {\n        start = 0;\n      }\n      // Return early if start > this.length. Done here to prevent potential uint32\n      // coercion fail below.\n      if (start > this.length) {\n        return '';\n      }\n\n      if (end === undefined || end > this.length) {\n        end = this.length;\n      }\n\n      if (end <= 0) {\n        return '';\n      }\n\n      // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n      end >>>= 0;\n      start >>>= 0;\n\n      if (end <= start) {\n        return '';\n      }\n\n      if (!encoding) encoding = 'utf8';\n\n      while (true) {\n        switch (encoding) {\n          case 'hex':\n            return hexSlice(this, start, end);\n\n          case 'utf8':\n          case 'utf-8':\n            return utf8Slice(this, start, end);\n\n          case 'ascii':\n            return asciiSlice(this, start, end);\n\n          case 'latin1':\n          case 'binary':\n            return latin1Slice(this, start, end);\n\n          case 'base64':\n            return base64Slice(this, start, end);\n\n          case 'ucs2':\n          case 'ucs-2':\n          case 'utf16le':\n          case 'utf-16le':\n            return utf16leSlice(this, start, end);\n\n          default:\n            if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n            encoding = (encoding + '').toLowerCase();\n            loweredCase = true;\n        }\n      }\n    }\n\n    // The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n    // Buffer instances.\n    Buffer.prototype._isBuffer = true;\n\n    function swap(b, n, m) {\n      var i = b[n];\n      b[n] = b[m];\n      b[m] = i;\n    }\n\n    Buffer.prototype.swap16 = function swap16() {\n      var len = this.length;\n      if (len % 2 !== 0) {\n        throw new RangeError('Buffer size must be a multiple of 16-bits');\n      }\n      for (var i = 0; i < len; i += 2) {\n        swap(this, i, i + 1);\n      }\n      return this;\n    };\n\n    Buffer.prototype.swap32 = function swap32() {\n      var len = this.length;\n      if (len % 4 !== 0) {\n        throw new RangeError('Buffer size must be a multiple of 32-bits');\n      }\n      for (var i = 0; i < len; i += 4) {\n        swap(this, i, i + 3);\n        swap(this, i + 1, i + 2);\n      }\n      return this;\n    };\n\n    Buffer.prototype.swap64 = function swap64() {\n      var len = this.length;\n      if (len % 8 !== 0) {\n        throw new RangeError('Buffer size must be a multiple of 64-bits');\n      }\n      for (var i = 0; i < len; i += 8) {\n        swap(this, i, i + 7);\n        swap(this, i + 1, i + 6);\n        swap(this, i + 2, i + 5);\n        swap(this, i + 3, i + 4);\n      }\n      return this;\n    };\n\n    Buffer.prototype.toString = function toString() {\n      var length = this.length | 0;\n      if (length === 0) return '';\n      if (arguments.length === 0) return utf8Slice(this, 0, length);\n      return slowToString.apply(this, arguments);\n    };\n\n    Buffer.prototype.equals = function equals(b) {\n      if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');\n      if (this === b) return true;\n      return Buffer.compare(this, b) === 0;\n    };\n\n    Buffer.prototype.inspect = function inspect() {\n      var str = '';\n      var max = exports.INSPECT_MAX_BYTES;\n      if (this.length > 0) {\n        str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');\n        if (this.length > max) str += ' ... ';\n      }\n      return '<Buffer ' + str + '>';\n    };\n\n    Buffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n      if (!Buffer.isBuffer(target)) {\n        throw new TypeError('Argument must be a Buffer');\n      }\n\n      if (start === undefined) {\n        start = 0;\n      }\n      if (end === undefined) {\n        end = target ? target.length : 0;\n      }\n      if (thisStart === undefined) {\n        thisStart = 0;\n      }\n      if (thisEnd === undefined) {\n        thisEnd = this.length;\n      }\n\n      if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n        throw new RangeError('out of range index');\n      }\n\n      if (thisStart >= thisEnd && start >= end) {\n        return 0;\n      }\n      if (thisStart >= thisEnd) {\n        return -1;\n      }\n      if (start >= end) {\n        return 1;\n      }\n\n      start >>>= 0;\n      end >>>= 0;\n      thisStart >>>= 0;\n      thisEnd >>>= 0;\n\n      if (this === target) return 0;\n\n      var x = thisEnd - thisStart;\n      var y = end - start;\n      var len = Math.min(x, y);\n\n      var thisCopy = this.slice(thisStart, thisEnd);\n      var targetCopy = target.slice(start, end);\n\n      for (var i = 0; i < len; ++i) {\n        if (thisCopy[i] !== targetCopy[i]) {\n          x = thisCopy[i];\n          y = targetCopy[i];\n          break;\n        }\n      }\n\n      if (x < y) return -1;\n      if (y < x) return 1;\n      return 0;\n    };\n\n    // Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n    // OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n    //\n    // Arguments:\n    // - buffer - a Buffer to search\n    // - val - a string, Buffer, or number\n    // - byteOffset - an index into `buffer`; will be clamped to an int32\n    // - encoding - an optional encoding, relevant is val is a string\n    // - dir - true for indexOf, false for lastIndexOf\n    function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n      // Empty buffer means no match\n      if (buffer.length === 0) return -1;\n\n      // Normalize byteOffset\n      if (typeof byteOffset === 'string') {\n        encoding = byteOffset;\n        byteOffset = 0;\n      } else if (byteOffset > 0x7fffffff) {\n        byteOffset = 0x7fffffff;\n      } else if (byteOffset < -0x80000000) {\n        byteOffset = -0x80000000;\n      }\n      byteOffset = +byteOffset; // Coerce to Number.\n      if (isNaN(byteOffset)) {\n        // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n        byteOffset = dir ? 0 : buffer.length - 1;\n      }\n\n      // Normalize byteOffset: negative offsets start from the end of the buffer\n      if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n      if (byteOffset >= buffer.length) {\n        if (dir) return -1;else byteOffset = buffer.length - 1;\n      } else if (byteOffset < 0) {\n        if (dir) byteOffset = 0;else return -1;\n      }\n\n      // Normalize val\n      if (typeof val === 'string') {\n        val = Buffer.from(val, encoding);\n      }\n\n      // Finally, search either indexOf (if dir is true) or lastIndexOf\n      if (Buffer.isBuffer(val)) {\n        // Special case: looking for empty string/buffer always fails\n        if (val.length === 0) {\n          return -1;\n        }\n        return arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n      } else if (typeof val === 'number') {\n        val = val & 0xFF; // Search for a byte value [0-255]\n        if (Buffer.TYPED_ARRAY_SUPPORT && typeof Uint8Array.prototype.indexOf === 'function') {\n          if (dir) {\n            return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n          } else {\n            return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n          }\n        }\n        return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);\n      }\n\n      throw new TypeError('val must be string, number or Buffer');\n    }\n\n    function arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n      var indexSize = 1;\n      var arrLength = arr.length;\n      var valLength = val.length;\n\n      if (encoding !== undefined) {\n        encoding = String(encoding).toLowerCase();\n        if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {\n          if (arr.length < 2 || val.length < 2) {\n            return -1;\n          }\n          indexSize = 2;\n          arrLength /= 2;\n          valLength /= 2;\n          byteOffset /= 2;\n        }\n      }\n\n      function read(buf, i) {\n        if (indexSize === 1) {\n          return buf[i];\n        } else {\n          return buf.readUInt16BE(i * indexSize);\n        }\n      }\n\n      var i;\n      if (dir) {\n        var foundIndex = -1;\n        for (i = byteOffset; i < arrLength; i++) {\n          if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n            if (foundIndex === -1) foundIndex = i;\n            if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\n          } else {\n            if (foundIndex !== -1) i -= i - foundIndex;\n            foundIndex = -1;\n          }\n        }\n      } else {\n        if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n        for (i = byteOffset; i >= 0; i--) {\n          var found = true;\n          for (var j = 0; j < valLength; j++) {\n            if (read(arr, i + j) !== read(val, j)) {\n              found = false;\n              break;\n            }\n          }\n          if (found) return i;\n        }\n      }\n\n      return -1;\n    }\n\n    Buffer.prototype.includes = function includes(val, byteOffset, encoding) {\n      return this.indexOf(val, byteOffset, encoding) !== -1;\n    };\n\n    Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n      return bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n    };\n\n    Buffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n      return bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n    };\n\n    function hexWrite(buf, string, offset, length) {\n      offset = Number(offset) || 0;\n      var remaining = buf.length - offset;\n      if (!length) {\n        length = remaining;\n      } else {\n        length = Number(length);\n        if (length > remaining) {\n          length = remaining;\n        }\n      }\n\n      // must be an even number of digits\n      var strLen = string.length;\n      if (strLen % 2 !== 0) throw new TypeError('Invalid hex string');\n\n      if (length > strLen / 2) {\n        length = strLen / 2;\n      }\n      for (var i = 0; i < length; ++i) {\n        var parsed = parseInt(string.substr(i * 2, 2), 16);\n        if (isNaN(parsed)) return i;\n        buf[offset + i] = parsed;\n      }\n      return i;\n    }\n\n    function utf8Write(buf, string, offset, length) {\n      return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n    }\n\n    function asciiWrite(buf, string, offset, length) {\n      return blitBuffer(asciiToBytes(string), buf, offset, length);\n    }\n\n    function latin1Write(buf, string, offset, length) {\n      return asciiWrite(buf, string, offset, length);\n    }\n\n    function base64Write(buf, string, offset, length) {\n      return blitBuffer(base64ToBytes(string), buf, offset, length);\n    }\n\n    function ucs2Write(buf, string, offset, length) {\n      return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);\n    }\n\n    Buffer.prototype.write = function write(string, offset, length, encoding) {\n      // Buffer#write(string)\n      if (offset === undefined) {\n        encoding = 'utf8';\n        length = this.length;\n        offset = 0;\n        // Buffer#write(string, encoding)\n      } else if (length === undefined && typeof offset === 'string') {\n        encoding = offset;\n        length = this.length;\n        offset = 0;\n        // Buffer#write(string, offset[, length][, encoding])\n      } else if (isFinite(offset)) {\n        offset = offset | 0;\n        if (isFinite(length)) {\n          length = length | 0;\n          if (encoding === undefined) encoding = 'utf8';\n        } else {\n          encoding = length;\n          length = undefined;\n        }\n        // legacy write(string, encoding, offset, length) - remove in v0.13\n      } else {\n        throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');\n      }\n\n      var remaining = this.length - offset;\n      if (length === undefined || length > remaining) length = remaining;\n\n      if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {\n        throw new RangeError('Attempt to write outside buffer bounds');\n      }\n\n      if (!encoding) encoding = 'utf8';\n\n      var loweredCase = false;\n      for (;;) {\n        switch (encoding) {\n          case 'hex':\n            return hexWrite(this, string, offset, length);\n\n          case 'utf8':\n          case 'utf-8':\n            return utf8Write(this, string, offset, length);\n\n          case 'ascii':\n            return asciiWrite(this, string, offset, length);\n\n          case 'latin1':\n          case 'binary':\n            return latin1Write(this, string, offset, length);\n\n          case 'base64':\n            // Warning: maxLength not taken into account in base64Write\n            return base64Write(this, string, offset, length);\n\n          case 'ucs2':\n          case 'ucs-2':\n          case 'utf16le':\n          case 'utf-16le':\n            return ucs2Write(this, string, offset, length);\n\n          default:\n            if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n            encoding = ('' + encoding).toLowerCase();\n            loweredCase = true;\n        }\n      }\n    };\n\n    Buffer.prototype.toJSON = function toJSON() {\n      return {\n        type: 'Buffer',\n        data: Array.prototype.slice.call(this._arr || this, 0)\n      };\n    };\n\n    function base64Slice(buf, start, end) {\n      if (start === 0 && end === buf.length) {\n        return base64.fromByteArray(buf);\n      } else {\n        return base64.fromByteArray(buf.slice(start, end));\n      }\n    }\n\n    function utf8Slice(buf, start, end) {\n      end = Math.min(buf.length, end);\n      var res = [];\n\n      var i = start;\n      while (i < end) {\n        var firstByte = buf[i];\n        var codePoint = null;\n        var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence <= end) {\n          var secondByte, thirdByte, fourthByte, tempCodePoint;\n\n          switch (bytesPerSequence) {\n            case 1:\n              if (firstByte < 0x80) {\n                codePoint = firstByte;\n              }\n              break;\n            case 2:\n              secondByte = buf[i + 1];\n              if ((secondByte & 0xC0) === 0x80) {\n                tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;\n                if (tempCodePoint > 0x7F) {\n                  codePoint = tempCodePoint;\n                }\n              }\n              break;\n            case 3:\n              secondByte = buf[i + 1];\n              thirdByte = buf[i + 2];\n              if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n                tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;\n                if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n                  codePoint = tempCodePoint;\n                }\n              }\n              break;\n            case 4:\n              secondByte = buf[i + 1];\n              thirdByte = buf[i + 2];\n              fourthByte = buf[i + 3];\n              if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n                tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;\n                if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n                  codePoint = tempCodePoint;\n                }\n              }\n          }\n        }\n\n        if (codePoint === null) {\n          // we did not generate a valid codePoint so insert a\n          // replacement char (U+FFFD) and advance only 1 byte\n          codePoint = 0xFFFD;\n          bytesPerSequence = 1;\n        } else if (codePoint > 0xFFFF) {\n          // encode to utf16 (surrogate pair dance)\n          codePoint -= 0x10000;\n          res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n          codePoint = 0xDC00 | codePoint & 0x3FF;\n        }\n\n        res.push(codePoint);\n        i += bytesPerSequence;\n      }\n\n      return decodeCodePointsArray(res);\n    }\n\n    // Based on http://stackoverflow.com/a/22747272/680742, the browser with\n    // the lowest limit is Chrome, with 0x10000 args.\n    // We go 1 magnitude less, for safety\n    var MAX_ARGUMENTS_LENGTH = 0x1000;\n\n    function decodeCodePointsArray(codePoints) {\n      var len = codePoints.length;\n      if (len <= MAX_ARGUMENTS_LENGTH) {\n        return String.fromCharCode.apply(String, codePoints); // avoid extra slice()\n      }\n\n      // Decode in chunks to avoid \"call stack size exceeded\".\n      var res = '';\n      var i = 0;\n      while (i < len) {\n        res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n      }\n      return res;\n    }\n\n    function asciiSlice(buf, start, end) {\n      var ret = '';\n      end = Math.min(buf.length, end);\n\n      for (var i = start; i < end; ++i) {\n        ret += String.fromCharCode(buf[i] & 0x7F);\n      }\n      return ret;\n    }\n\n    function latin1Slice(buf, start, end) {\n      var ret = '';\n      end = Math.min(buf.length, end);\n\n      for (var i = start; i < end; ++i) {\n        ret += String.fromCharCode(buf[i]);\n      }\n      return ret;\n    }\n\n    function hexSlice(buf, start, end) {\n      var len = buf.length;\n\n      if (!start || start < 0) start = 0;\n      if (!end || end < 0 || end > len) end = len;\n\n      var out = '';\n      for (var i = start; i < end; ++i) {\n        out += toHex(buf[i]);\n      }\n      return out;\n    }\n\n    function utf16leSlice(buf, start, end) {\n      var bytes = buf.slice(start, end);\n      var res = '';\n      for (var i = 0; i < bytes.length; i += 2) {\n        res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n      }\n      return res;\n    }\n\n    Buffer.prototype.slice = function slice(start, end) {\n      var len = this.length;\n      start = ~~start;\n      end = end === undefined ? len : ~~end;\n\n      if (start < 0) {\n        start += len;\n        if (start < 0) start = 0;\n      } else if (start > len) {\n        start = len;\n      }\n\n      if (end < 0) {\n        end += len;\n        if (end < 0) end = 0;\n      } else if (end > len) {\n        end = len;\n      }\n\n      if (end < start) end = start;\n\n      var newBuf;\n      if (Buffer.TYPED_ARRAY_SUPPORT) {\n        newBuf = this.subarray(start, end);\n        newBuf.__proto__ = Buffer.prototype;\n      } else {\n        var sliceLen = end - start;\n        newBuf = new Buffer(sliceLen, undefined);\n        for (var i = 0; i < sliceLen; ++i) {\n          newBuf[i] = this[i + start];\n        }\n      }\n\n      return newBuf;\n    };\n\n    /*\r\n     * Need to make sure that buffer isn't trying to write out of bounds.\r\n     */\n    function checkOffset(offset, ext, length) {\n      if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');\n      if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');\n    }\n\n    Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n      offset = offset | 0;\n      byteLength = byteLength | 0;\n      if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n      var val = this[offset];\n      var mul = 1;\n      var i = 0;\n      while (++i < byteLength && (mul *= 0x100)) {\n        val += this[offset + i] * mul;\n      }\n\n      return val;\n    };\n\n    Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n      offset = offset | 0;\n      byteLength = byteLength | 0;\n      if (!noAssert) {\n        checkOffset(offset, byteLength, this.length);\n      }\n\n      var val = this[offset + --byteLength];\n      var mul = 1;\n      while (byteLength > 0 && (mul *= 0x100)) {\n        val += this[offset + --byteLength] * mul;\n      }\n\n      return val;\n    };\n\n    Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n      if (!noAssert) checkOffset(offset, 1, this.length);\n      return this[offset];\n    };\n\n    Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n      if (!noAssert) checkOffset(offset, 2, this.length);\n      return this[offset] | this[offset + 1] << 8;\n    };\n\n    Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n      if (!noAssert) checkOffset(offset, 2, this.length);\n      return this[offset] << 8 | this[offset + 1];\n    };\n\n    Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n      if (!noAssert) checkOffset(offset, 4, this.length);\n\n      return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;\n    };\n\n    Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n      if (!noAssert) checkOffset(offset, 4, this.length);\n\n      return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n    };\n\n    Buffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n      offset = offset | 0;\n      byteLength = byteLength | 0;\n      if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n      var val = this[offset];\n      var mul = 1;\n      var i = 0;\n      while (++i < byteLength && (mul *= 0x100)) {\n        val += this[offset + i] * mul;\n      }\n      mul *= 0x80;\n\n      if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n\n      return val;\n    };\n\n    Buffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n      offset = offset | 0;\n      byteLength = byteLength | 0;\n      if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n      var i = byteLength;\n      var mul = 1;\n      var val = this[offset + --i];\n      while (i > 0 && (mul *= 0x100)) {\n        val += this[offset + --i] * mul;\n      }\n      mul *= 0x80;\n\n      if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n\n      return val;\n    };\n\n    Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n      if (!noAssert) checkOffset(offset, 1, this.length);\n      if (!(this[offset] & 0x80)) return this[offset];\n      return (0xff - this[offset] + 1) * -1;\n    };\n\n    Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n      if (!noAssert) checkOffset(offset, 2, this.length);\n      var val = this[offset] | this[offset + 1] << 8;\n      return val & 0x8000 ? val | 0xFFFF0000 : val;\n    };\n\n    Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n      if (!noAssert) checkOffset(offset, 2, this.length);\n      var val = this[offset + 1] | this[offset] << 8;\n      return val & 0x8000 ? val | 0xFFFF0000 : val;\n    };\n\n    Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n      if (!noAssert) checkOffset(offset, 4, this.length);\n\n      return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n    };\n\n    Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n      if (!noAssert) checkOffset(offset, 4, this.length);\n\n      return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n    };\n\n    Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n      if (!noAssert) checkOffset(offset, 4, this.length);\n      return ieee754.read(this, offset, true, 23, 4);\n    };\n\n    Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n      if (!noAssert) checkOffset(offset, 4, this.length);\n      return ieee754.read(this, offset, false, 23, 4);\n    };\n\n    Buffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n      if (!noAssert) checkOffset(offset, 8, this.length);\n      return ieee754.read(this, offset, true, 52, 8);\n    };\n\n    Buffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n      if (!noAssert) checkOffset(offset, 8, this.length);\n      return ieee754.read(this, offset, false, 52, 8);\n    };\n\n    function checkInt(buf, value, offset, ext, max, min) {\n      if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n      if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds');\n      if (offset + ext > buf.length) throw new RangeError('Index out of range');\n    }\n\n    Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n      value = +value;\n      offset = offset | 0;\n      byteLength = byteLength | 0;\n      if (!noAssert) {\n        var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n        checkInt(this, value, offset, byteLength, maxBytes, 0);\n      }\n\n      var mul = 1;\n      var i = 0;\n      this[offset] = value & 0xFF;\n      while (++i < byteLength && (mul *= 0x100)) {\n        this[offset + i] = value / mul & 0xFF;\n      }\n\n      return offset + byteLength;\n    };\n\n    Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n      value = +value;\n      offset = offset | 0;\n      byteLength = byteLength | 0;\n      if (!noAssert) {\n        var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n        checkInt(this, value, offset, byteLength, maxBytes, 0);\n      }\n\n      var i = byteLength - 1;\n      var mul = 1;\n      this[offset + i] = value & 0xFF;\n      while (--i >= 0 && (mul *= 0x100)) {\n        this[offset + i] = value / mul & 0xFF;\n      }\n\n      return offset + byteLength;\n    };\n\n    Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n      value = +value;\n      offset = offset | 0;\n      if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n      if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n      this[offset] = value & 0xff;\n      return offset + 1;\n    };\n\n    function objectWriteUInt16(buf, value, offset, littleEndian) {\n      if (value < 0) value = 0xffff + value + 1;\n      for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n        buf[offset + i] = (value & 0xff << 8 * (littleEndian ? i : 1 - i)) >>> (littleEndian ? i : 1 - i) * 8;\n      }\n    }\n\n    Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n      value = +value;\n      offset = offset | 0;\n      if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n      if (Buffer.TYPED_ARRAY_SUPPORT) {\n        this[offset] = value & 0xff;\n        this[offset + 1] = value >>> 8;\n      } else {\n        objectWriteUInt16(this, value, offset, true);\n      }\n      return offset + 2;\n    };\n\n    Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n      value = +value;\n      offset = offset | 0;\n      if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n      if (Buffer.TYPED_ARRAY_SUPPORT) {\n        this[offset] = value >>> 8;\n        this[offset + 1] = value & 0xff;\n      } else {\n        objectWriteUInt16(this, value, offset, false);\n      }\n      return offset + 2;\n    };\n\n    function objectWriteUInt32(buf, value, offset, littleEndian) {\n      if (value < 0) value = 0xffffffff + value + 1;\n      for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n        buf[offset + i] = value >>> (littleEndian ? i : 3 - i) * 8 & 0xff;\n      }\n    }\n\n    Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n      value = +value;\n      offset = offset | 0;\n      if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n      if (Buffer.TYPED_ARRAY_SUPPORT) {\n        this[offset + 3] = value >>> 24;\n        this[offset + 2] = value >>> 16;\n        this[offset + 1] = value >>> 8;\n        this[offset] = value & 0xff;\n      } else {\n        objectWriteUInt32(this, value, offset, true);\n      }\n      return offset + 4;\n    };\n\n    Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n      value = +value;\n      offset = offset | 0;\n      if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n      if (Buffer.TYPED_ARRAY_SUPPORT) {\n        this[offset] = value >>> 24;\n        this[offset + 1] = value >>> 16;\n        this[offset + 2] = value >>> 8;\n        this[offset + 3] = value & 0xff;\n      } else {\n        objectWriteUInt32(this, value, offset, false);\n      }\n      return offset + 4;\n    };\n\n    Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n      value = +value;\n      offset = offset | 0;\n      if (!noAssert) {\n        var limit = Math.pow(2, 8 * byteLength - 1);\n\n        checkInt(this, value, offset, byteLength, limit - 1, -limit);\n      }\n\n      var i = 0;\n      var mul = 1;\n      var sub = 0;\n      this[offset] = value & 0xFF;\n      while (++i < byteLength && (mul *= 0x100)) {\n        if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n          sub = 1;\n        }\n        this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n      }\n\n      return offset + byteLength;\n    };\n\n    Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n      value = +value;\n      offset = offset | 0;\n      if (!noAssert) {\n        var limit = Math.pow(2, 8 * byteLength - 1);\n\n        checkInt(this, value, offset, byteLength, limit - 1, -limit);\n      }\n\n      var i = byteLength - 1;\n      var mul = 1;\n      var sub = 0;\n      this[offset + i] = value & 0xFF;\n      while (--i >= 0 && (mul *= 0x100)) {\n        if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n          sub = 1;\n        }\n        this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n      }\n\n      return offset + byteLength;\n    };\n\n    Buffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n      value = +value;\n      offset = offset | 0;\n      if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n      if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n      if (value < 0) value = 0xff + value + 1;\n      this[offset] = value & 0xff;\n      return offset + 1;\n    };\n\n    Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n      value = +value;\n      offset = offset | 0;\n      if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n      if (Buffer.TYPED_ARRAY_SUPPORT) {\n        this[offset] = value & 0xff;\n        this[offset + 1] = value >>> 8;\n      } else {\n        objectWriteUInt16(this, value, offset, true);\n      }\n      return offset + 2;\n    };\n\n    Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n      value = +value;\n      offset = offset | 0;\n      if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n      if (Buffer.TYPED_ARRAY_SUPPORT) {\n        this[offset] = value >>> 8;\n        this[offset + 1] = value & 0xff;\n      } else {\n        objectWriteUInt16(this, value, offset, false);\n      }\n      return offset + 2;\n    };\n\n    Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n      value = +value;\n      offset = offset | 0;\n      if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n      if (Buffer.TYPED_ARRAY_SUPPORT) {\n        this[offset] = value & 0xff;\n        this[offset + 1] = value >>> 8;\n        this[offset + 2] = value >>> 16;\n        this[offset + 3] = value >>> 24;\n      } else {\n        objectWriteUInt32(this, value, offset, true);\n      }\n      return offset + 4;\n    };\n\n    Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n      value = +value;\n      offset = offset | 0;\n      if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n      if (value < 0) value = 0xffffffff + value + 1;\n      if (Buffer.TYPED_ARRAY_SUPPORT) {\n        this[offset] = value >>> 24;\n        this[offset + 1] = value >>> 16;\n        this[offset + 2] = value >>> 8;\n        this[offset + 3] = value & 0xff;\n      } else {\n        objectWriteUInt32(this, value, offset, false);\n      }\n      return offset + 4;\n    };\n\n    function checkIEEE754(buf, value, offset, ext, max, min) {\n      if (offset + ext > buf.length) throw new RangeError('Index out of range');\n      if (offset < 0) throw new RangeError('Index out of range');\n    }\n\n    function writeFloat(buf, value, offset, littleEndian, noAssert) {\n      if (!noAssert) {\n        checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);\n      }\n      ieee754.write(buf, value, offset, littleEndian, 23, 4);\n      return offset + 4;\n    }\n\n    Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n      return writeFloat(this, value, offset, true, noAssert);\n    };\n\n    Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n      return writeFloat(this, value, offset, false, noAssert);\n    };\n\n    function writeDouble(buf, value, offset, littleEndian, noAssert) {\n      if (!noAssert) {\n        checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308);\n      }\n      ieee754.write(buf, value, offset, littleEndian, 52, 8);\n      return offset + 8;\n    }\n\n    Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n      return writeDouble(this, value, offset, true, noAssert);\n    };\n\n    Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n      return writeDouble(this, value, offset, false, noAssert);\n    };\n\n    // copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n    Buffer.prototype.copy = function copy(target, targetStart, start, end) {\n      if (!start) start = 0;\n      if (!end && end !== 0) end = this.length;\n      if (targetStart >= target.length) targetStart = target.length;\n      if (!targetStart) targetStart = 0;\n      if (end > 0 && end < start) end = start;\n\n      // Copy 0 bytes; we're done\n      if (end === start) return 0;\n      if (target.length === 0 || this.length === 0) return 0;\n\n      // Fatal error conditions\n      if (targetStart < 0) {\n        throw new RangeError('targetStart out of bounds');\n      }\n      if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds');\n      if (end < 0) throw new RangeError('sourceEnd out of bounds');\n\n      // Are we oob?\n      if (end > this.length) end = this.length;\n      if (target.length - targetStart < end - start) {\n        end = target.length - targetStart + start;\n      }\n\n      var len = end - start;\n      var i;\n\n      if (this === target && start < targetStart && targetStart < end) {\n        // descending copy from end\n        for (i = len - 1; i >= 0; --i) {\n          target[i + targetStart] = this[i + start];\n        }\n      } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n        // ascending copy from start\n        for (i = 0; i < len; ++i) {\n          target[i + targetStart] = this[i + start];\n        }\n      } else {\n        Uint8Array.prototype.set.call(target, this.subarray(start, start + len), targetStart);\n      }\n\n      return len;\n    };\n\n    // Usage:\n    //    buffer.fill(number[, offset[, end]])\n    //    buffer.fill(buffer[, offset[, end]])\n    //    buffer.fill(string[, offset[, end]][, encoding])\n    Buffer.prototype.fill = function fill(val, start, end, encoding) {\n      // Handle string cases:\n      if (typeof val === 'string') {\n        if (typeof start === 'string') {\n          encoding = start;\n          start = 0;\n          end = this.length;\n        } else if (typeof end === 'string') {\n          encoding = end;\n          end = this.length;\n        }\n        if (val.length === 1) {\n          var code = val.charCodeAt(0);\n          if (code < 256) {\n            val = code;\n          }\n        }\n        if (encoding !== undefined && typeof encoding !== 'string') {\n          throw new TypeError('encoding must be a string');\n        }\n        if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n          throw new TypeError('Unknown encoding: ' + encoding);\n        }\n      } else if (typeof val === 'number') {\n        val = val & 255;\n      }\n\n      // Invalid ranges are not set to a default, so can range check early.\n      if (start < 0 || this.length < start || this.length < end) {\n        throw new RangeError('Out of range index');\n      }\n\n      if (end <= start) {\n        return this;\n      }\n\n      start = start >>> 0;\n      end = end === undefined ? this.length : end >>> 0;\n\n      if (!val) val = 0;\n\n      var i;\n      if (typeof val === 'number') {\n        for (i = start; i < end; ++i) {\n          this[i] = val;\n        }\n      } else {\n        var bytes = Buffer.isBuffer(val) ? val : utf8ToBytes(new Buffer(val, encoding).toString());\n        var len = bytes.length;\n        for (i = 0; i < end - start; ++i) {\n          this[i + start] = bytes[i % len];\n        }\n      }\n\n      return this;\n    };\n\n    // HELPER FUNCTIONS\n    // ================\n\n    var INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g;\n\n    function base64clean(str) {\n      // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n      str = stringtrim(str).replace(INVALID_BASE64_RE, '');\n      // Node converts strings with length < 2 to ''\n      if (str.length < 2) return '';\n      // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n      while (str.length % 4 !== 0) {\n        str = str + '=';\n      }\n      return str;\n    }\n\n    function stringtrim(str) {\n      if (str.trim) return str.trim();\n      return str.replace(/^\\s+|\\s+$/g, '');\n    }\n\n    function toHex(n) {\n      if (n < 16) return '0' + n.toString(16);\n      return n.toString(16);\n    }\n\n    function utf8ToBytes(string, units) {\n      units = units || Infinity;\n      var codePoint;\n      var length = string.length;\n      var leadSurrogate = null;\n      var bytes = [];\n\n      for (var i = 0; i < length; ++i) {\n        codePoint = string.charCodeAt(i);\n\n        // is surrogate component\n        if (codePoint > 0xD7FF && codePoint < 0xE000) {\n          // last char was a lead\n          if (!leadSurrogate) {\n            // no lead yet\n            if (codePoint > 0xDBFF) {\n              // unexpected trail\n              if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n              continue;\n            } else if (i + 1 === length) {\n              // unpaired lead\n              if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n              continue;\n            }\n\n            // valid lead\n            leadSurrogate = codePoint;\n\n            continue;\n          }\n\n          // 2 leads in a row\n          if (codePoint < 0xDC00) {\n            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n            leadSurrogate = codePoint;\n            continue;\n          }\n\n          // valid surrogate pair\n          codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n        } else if (leadSurrogate) {\n          // valid bmp char, but last char was a lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        }\n\n        leadSurrogate = null;\n\n        // encode utf8\n        if (codePoint < 0x80) {\n          if ((units -= 1) < 0) break;\n          bytes.push(codePoint);\n        } else if (codePoint < 0x800) {\n          if ((units -= 2) < 0) break;\n          bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n        } else if (codePoint < 0x10000) {\n          if ((units -= 3) < 0) break;\n          bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n        } else if (codePoint < 0x110000) {\n          if ((units -= 4) < 0) break;\n          bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n        } else {\n          throw new Error('Invalid code point');\n        }\n      }\n\n      return bytes;\n    }\n\n    function asciiToBytes(str) {\n      var byteArray = [];\n      for (var i = 0; i < str.length; ++i) {\n        // Node's code seems to be doing this and not & 0x7F..\n        byteArray.push(str.charCodeAt(i) & 0xFF);\n      }\n      return byteArray;\n    }\n\n    function utf16leToBytes(str, units) {\n      var c, hi, lo;\n      var byteArray = [];\n      for (var i = 0; i < str.length; ++i) {\n        if ((units -= 2) < 0) break;\n\n        c = str.charCodeAt(i);\n        hi = c >> 8;\n        lo = c % 256;\n        byteArray.push(lo);\n        byteArray.push(hi);\n      }\n\n      return byteArray;\n    }\n\n    function base64ToBytes(str) {\n      return base64.toByteArray(base64clean(str));\n    }\n\n    function blitBuffer(src, dst, offset, length) {\n      for (var i = 0; i < length; ++i) {\n        if (i + offset >= dst.length || i >= src.length) break;\n        dst[i + offset] = src[i];\n      }\n      return i;\n    }\n\n    function isnan(val) {\n      return val !== val; // eslint-disable-line no-self-compare\n    }\n\n    /* WEBPACK VAR INJECTION */\n  }).call(exports, __nested_webpack_require_20903__(1));\n\n  /***/\n},\n/* 8 */\n/***/function (module, exports, __webpack_require__) {\n\n  \"use strict\";\n  // Copyright Joyent, Inc. and other Node contributors.\n  //\n  // Permission is hereby granted, free of charge, to any person obtaining a\n  // copy of this software and associated documentation files (the\n  // \"Software\"), to deal in the Software without restriction, including\n  // without limitation the rights to use, copy, modify, merge, publish,\n  // distribute, sublicense, and/or sell copies of the Software, and to permit\n  // persons to whom the Software is furnished to do so, subject to the\n  // following conditions:\n  //\n  // The above copyright notice and this permission notice shall be included\n  // in all copies or substantial portions of the Software.\n  //\n  // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n  // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n  // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n  // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n  // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n  // USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n  var R = (typeof Reflect === 'undefined' ? 'undefined' : _typeof(Reflect)) === 'object' ? Reflect : null;\n  var ReflectApply = R && typeof R.apply === 'function' ? R.apply : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  };\n\n  var ReflectOwnKeys;\n  if (R && typeof R.ownKeys === 'function') {\n    ReflectOwnKeys = R.ownKeys;\n  } else if (Object.getOwnPropertySymbols) {\n    ReflectOwnKeys = function ReflectOwnKeys(target) {\n      return Object.getOwnPropertyNames(target).concat(Object.getOwnPropertySymbols(target));\n    };\n  } else {\n    ReflectOwnKeys = function ReflectOwnKeys(target) {\n      return Object.getOwnPropertyNames(target);\n    };\n  }\n\n  function ProcessEmitWarning(warning) {\n    if (console && console.warn) console.warn(warning);\n  }\n\n  var NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n    return value !== value;\n  };\n\n  function EventEmitter() {\n    EventEmitter.init.call(this);\n  }\n  module.exports = EventEmitter;\n\n  // Backwards-compat with node 0.10.x\n  EventEmitter.EventEmitter = EventEmitter;\n\n  EventEmitter.prototype._events = undefined;\n  EventEmitter.prototype._eventsCount = 0;\n  EventEmitter.prototype._maxListeners = undefined;\n\n  // By default EventEmitters will print a warning if more than 10 listeners are\n  // added to it. This is a useful default which helps finding memory leaks.\n  var defaultMaxListeners = 10;\n\n  Object.defineProperty(EventEmitter, 'defaultMaxListeners', {\n    enumerable: true,\n    get: function get() {\n      return defaultMaxListeners;\n    },\n    set: function set(arg) {\n      if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n        throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n      }\n      defaultMaxListeners = arg;\n    }\n  });\n\n  EventEmitter.init = function () {\n\n    if (this._events === undefined || this._events === Object.getPrototypeOf(this)._events) {\n      this._events = Object.create(null);\n      this._eventsCount = 0;\n    }\n\n    this._maxListeners = this._maxListeners || undefined;\n  };\n\n  // Obviously not all Emitters should be limited to 10. This function allows\n  // that to be increased. Set to zero for unlimited.\n  EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n    if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n      throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n    }\n    this._maxListeners = n;\n    return this;\n  };\n\n  function $getMaxListeners(that) {\n    if (that._maxListeners === undefined) return EventEmitter.defaultMaxListeners;\n    return that._maxListeners;\n  }\n\n  EventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n    return $getMaxListeners(this);\n  };\n\n  EventEmitter.prototype.emit = function emit(type) {\n    var args = [];\n    for (var i = 1; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }var doError = type === 'error';\n\n    var events = this._events;\n    if (events !== undefined) doError = doError && events.error === undefined;else if (!doError) return false;\n\n    // If there is no 'error' event listener then throw.\n    if (doError) {\n      var er;\n      if (args.length > 0) er = args[0];\n      if (er instanceof Error) {\n        // Note: The comments on the `throw` lines are intentional, they show\n        // up in Node's output if this results in an unhandled exception.\n        throw er; // Unhandled 'error' event\n      }\n      // At least give some kind of context to the user\n      var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n      err.context = er;\n      throw err; // Unhandled 'error' event\n    }\n\n    var handler = events[type];\n\n    if (handler === undefined) return false;\n\n    if (typeof handler === 'function') {\n      ReflectApply(handler, this, args);\n    } else {\n      var len = handler.length;\n      var listeners = arrayClone(handler, len);\n      for (var i = 0; i < len; ++i) {\n        ReflectApply(listeners[i], this, args);\n      }\n    }\n\n    return true;\n  };\n\n  function _addListener(target, type, listener, prepend) {\n    var m;\n    var events;\n    var existing;\n\n    if (typeof listener !== 'function') {\n      throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + (typeof listener === 'undefined' ? 'undefined' : _typeof(listener)));\n    }\n\n    events = target._events;\n    if (events === undefined) {\n      events = target._events = Object.create(null);\n      target._eventsCount = 0;\n    } else {\n      // To avoid recursion in the case that type === \"newListener\"! Before\n      // adding it to the listeners, first emit \"newListener\".\n      if (events.newListener !== undefined) {\n        target.emit('newListener', type, listener.listener ? listener.listener : listener);\n\n        // Re-assign `events` because a newListener handler could have caused the\n        // this._events to be assigned to a new object\n        events = target._events;\n      }\n      existing = events[type];\n    }\n\n    if (existing === undefined) {\n      // Optimize the case of one listener. Don't need the extra array object.\n      existing = events[type] = listener;\n      ++target._eventsCount;\n    } else {\n      if (typeof existing === 'function') {\n        // Adding the second element, need to change to array.\n        existing = events[type] = prepend ? [listener, existing] : [existing, listener];\n        // If we've already got an array, just append.\n      } else if (prepend) {\n        existing.unshift(listener);\n      } else {\n        existing.push(listener);\n      }\n\n      // Check for listener leak\n      m = $getMaxListeners(target);\n      if (m > 0 && existing.length > m && !existing.warned) {\n        existing.warned = true;\n        // No error code for this since it is a Warning\n        // eslint-disable-next-line no-restricted-syntax\n        var w = new Error('Possible EventEmitter memory leak detected. ' + existing.length + ' ' + String(type) + ' listeners ' + 'added. Use emitter.setMaxListeners() to ' + 'increase limit');\n        w.name = 'MaxListenersExceededWarning';\n        w.emitter = target;\n        w.type = type;\n        w.count = existing.length;\n        ProcessEmitWarning(w);\n      }\n    }\n\n    return target;\n  }\n\n  EventEmitter.prototype.addListener = function addListener(type, listener) {\n    return _addListener(this, type, listener, false);\n  };\n\n  EventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\n  EventEmitter.prototype.prependListener = function prependListener(type, listener) {\n    return _addListener(this, type, listener, true);\n  };\n\n  function onceWrapper() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }if (!this.fired) {\n      this.target.removeListener(this.type, this.wrapFn);\n      this.fired = true;\n      ReflectApply(this.listener, this.target, args);\n    }\n  }\n\n  function _onceWrap(target, type, listener) {\n    var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n    var wrapped = onceWrapper.bind(state);\n    wrapped.listener = listener;\n    state.wrapFn = wrapped;\n    return wrapped;\n  }\n\n  EventEmitter.prototype.once = function once(type, listener) {\n    if (typeof listener !== 'function') {\n      throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + (typeof listener === 'undefined' ? 'undefined' : _typeof(listener)));\n    }\n    this.on(type, _onceWrap(this, type, listener));\n    return this;\n  };\n\n  EventEmitter.prototype.prependOnceListener = function prependOnceListener(type, listener) {\n    if (typeof listener !== 'function') {\n      throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + (typeof listener === 'undefined' ? 'undefined' : _typeof(listener)));\n    }\n    this.prependListener(type, _onceWrap(this, type, listener));\n    return this;\n  };\n\n  // Emits a 'removeListener' event if and only if the listener was removed.\n  EventEmitter.prototype.removeListener = function removeListener(type, listener) {\n    var list, events, position, i, originalListener;\n\n    if (typeof listener !== 'function') {\n      throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + (typeof listener === 'undefined' ? 'undefined' : _typeof(listener)));\n    }\n\n    events = this._events;\n    if (events === undefined) return this;\n\n    list = events[type];\n    if (list === undefined) return this;\n\n    if (list === listener || list.listener === listener) {\n      if (--this._eventsCount === 0) this._events = Object.create(null);else {\n        delete events[type];\n        if (events.removeListener) this.emit('removeListener', type, list.listener || listener);\n      }\n    } else if (typeof list !== 'function') {\n      position = -1;\n\n      for (i = list.length - 1; i >= 0; i--) {\n        if (list[i] === listener || list[i].listener === listener) {\n          originalListener = list[i].listener;\n          position = i;\n          break;\n        }\n      }\n\n      if (position < 0) return this;\n\n      if (position === 0) list.shift();else {\n        spliceOne(list, position);\n      }\n\n      if (list.length === 1) events[type] = list[0];\n\n      if (events.removeListener !== undefined) this.emit('removeListener', type, originalListener || listener);\n    }\n\n    return this;\n  };\n\n  EventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\n  EventEmitter.prototype.removeAllListeners = function removeAllListeners(type) {\n    var listeners, events, i;\n\n    events = this._events;\n    if (events === undefined) return this;\n\n    // not listening for removeListener, no need to emit\n    if (events.removeListener === undefined) {\n      if (arguments.length === 0) {\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n      } else if (events[type] !== undefined) {\n        if (--this._eventsCount === 0) this._events = Object.create(null);else delete events[type];\n      }\n      return this;\n    }\n\n    // emit removeListener for all listeners on all events\n    if (arguments.length === 0) {\n      var keys = Object.keys(events);\n      var key;\n      for (i = 0; i < keys.length; ++i) {\n        key = keys[i];\n        if (key === 'removeListener') continue;\n        this.removeAllListeners(key);\n      }\n      this.removeAllListeners('removeListener');\n      this._events = Object.create(null);\n      this._eventsCount = 0;\n      return this;\n    }\n\n    listeners = events[type];\n\n    if (typeof listeners === 'function') {\n      this.removeListener(type, listeners);\n    } else if (listeners !== undefined) {\n      // LIFO order\n      for (i = listeners.length - 1; i >= 0; i--) {\n        this.removeListener(type, listeners[i]);\n      }\n    }\n\n    return this;\n  };\n\n  function _listeners(target, type, unwrap) {\n    var events = target._events;\n\n    if (events === undefined) return [];\n\n    var evlistener = events[type];\n    if (evlistener === undefined) return [];\n\n    if (typeof evlistener === 'function') return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n    return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n  }\n\n  EventEmitter.prototype.listeners = function listeners(type) {\n    return _listeners(this, type, true);\n  };\n\n  EventEmitter.prototype.rawListeners = function rawListeners(type) {\n    return _listeners(this, type, false);\n  };\n\n  EventEmitter.listenerCount = function (emitter, type) {\n    if (typeof emitter.listenerCount === 'function') {\n      return emitter.listenerCount(type);\n    } else {\n      return listenerCount.call(emitter, type);\n    }\n  };\n\n  EventEmitter.prototype.listenerCount = listenerCount;\n  function listenerCount(type) {\n    var events = this._events;\n\n    if (events !== undefined) {\n      var evlistener = events[type];\n\n      if (typeof evlistener === 'function') {\n        return 1;\n      } else if (evlistener !== undefined) {\n        return evlistener.length;\n      }\n    }\n\n    return 0;\n  }\n\n  EventEmitter.prototype.eventNames = function eventNames() {\n    return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n  };\n\n  function arrayClone(arr, n) {\n    var copy = new Array(n);\n    for (var i = 0; i < n; ++i) {\n      copy[i] = arr[i];\n    }return copy;\n  }\n\n  function spliceOne(list, index) {\n    for (; index + 1 < list.length; index++) {\n      list[index] = list[index + 1];\n    }list.pop();\n  }\n\n  function unwrapListeners(arr) {\n    var ret = new Array(arr.length);\n    for (var i = 0; i < ret.length; ++i) {\n      ret[i] = arr[i].listener || arr[i];\n    }\n    return ret;\n  }\n\n  /***/\n},\n/* 9 */\n/***/function (module, exports, __nested_webpack_require_89893__) {\n\n  exports = module.exports = __nested_webpack_require_89893__(12);\n  exports.Stream = exports;\n  exports.Readable = exports;\n  exports.Writable = __nested_webpack_require_89893__(10);\n  exports.Duplex = __nested_webpack_require_89893__(0);\n  exports.Transform = __nested_webpack_require_89893__(16);\n  exports.PassThrough = __nested_webpack_require_89893__(30);\n\n  /***/\n},\n/* 10 */\n/***/function (module, exports, __nested_webpack_require_90267__) {\n\n  \"use strict\";\n  /* WEBPACK VAR INJECTION */\n  (function (process, setImmediate, global) {\n    // Copyright Joyent, Inc. and other Node contributors.\n    //\n    // Permission is hereby granted, free of charge, to any person obtaining a\n    // copy of this software and associated documentation files (the\n    // \"Software\"), to deal in the Software without restriction, including\n    // without limitation the rights to use, copy, modify, merge, publish,\n    // distribute, sublicense, and/or sell copies of the Software, and to permit\n    // persons to whom the Software is furnished to do so, subject to the\n    // following conditions:\n    //\n    // The above copyright notice and this permission notice shall be included\n    // in all copies or substantial portions of the Software.\n    //\n    // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n    // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n    // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n    // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n    // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n    // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n    // USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n    // A bit simpler than readable streams.\n    // Implement an async ._write(chunk, encoding, cb), and it'll handle all\n    // the drain event emission and buffering.\n\n\n    /*<replacement>*/\n\n    var pna = __nested_webpack_require_90267__(5);\n    /*</replacement>*/\n\n    module.exports = Writable;\n\n    /* <replacement> */\n    function WriteReq(chunk, encoding, cb) {\n      this.chunk = chunk;\n      this.encoding = encoding;\n      this.callback = cb;\n      this.next = null;\n    }\n\n    // It seems a linked list but it is not\n    // there will be only 2 of these for each stream\n    function CorkedRequest(state) {\n      var _this = this;\n\n      this.next = null;\n      this.entry = null;\n      this.finish = function () {\n        onCorkedFinish(_this, state);\n      };\n    }\n    /* </replacement> */\n\n    /*<replacement>*/\n    var asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;\n    /*</replacement>*/\n\n    /*<replacement>*/\n    var Duplex;\n    /*</replacement>*/\n\n    Writable.WritableState = WritableState;\n\n    /*<replacement>*/\n    var util = __nested_webpack_require_90267__(4);\n    util.inherits = __nested_webpack_require_90267__(2);\n    /*</replacement>*/\n\n    /*<replacement>*/\n    var internalUtil = {\n      deprecate: __nested_webpack_require_90267__(29)\n    };\n    /*</replacement>*/\n\n    /*<replacement>*/\n    var Stream = __nested_webpack_require_90267__(13);\n    /*</replacement>*/\n\n    /*<replacement>*/\n\n    var Buffer = __nested_webpack_require_90267__(6).Buffer;\n    var OurUint8Array = global.Uint8Array || function () {};\n    function _uint8ArrayToBuffer(chunk) {\n      return Buffer.from(chunk);\n    }\n    function _isUint8Array(obj) {\n      return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n    }\n\n    /*</replacement>*/\n\n    var destroyImpl = __nested_webpack_require_90267__(14);\n\n    util.inherits(Writable, Stream);\n\n    function nop() {}\n\n    function WritableState(options, stream) {\n      Duplex = Duplex || __nested_webpack_require_90267__(0);\n\n      options = options || {};\n\n      // Duplex streams are both readable and writable, but share\n      // the same options object.\n      // However, some cases require setting options to different\n      // values for the readable and the writable sides of the duplex stream.\n      // These options can be provided separately as readableXXX and writableXXX.\n      var isDuplex = stream instanceof Duplex;\n\n      // object stream flag to indicate whether or not this stream\n      // contains buffers or objects.\n      this.objectMode = !!options.objectMode;\n\n      if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n      // the point at which write() starts returning false\n      // Note: 0 is a valid value, means that we always return false if\n      // the entire buffer is not flushed immediately on write()\n      var hwm = options.highWaterMark;\n      var writableHwm = options.writableHighWaterMark;\n      var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n      if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;\n\n      // cast to ints.\n      this.highWaterMark = Math.floor(this.highWaterMark);\n\n      // if _final has been called\n      this.finalCalled = false;\n\n      // drain event flag.\n      this.needDrain = false;\n      // at the start of calling end()\n      this.ending = false;\n      // when end() has been called, and returned\n      this.ended = false;\n      // when 'finish' is emitted\n      this.finished = false;\n\n      // has it been destroyed\n      this.destroyed = false;\n\n      // should we decode strings into buffers before passing to _write?\n      // this is here so that some node-core streams can optimize string\n      // handling at a lower level.\n      var noDecode = options.decodeStrings === false;\n      this.decodeStrings = !noDecode;\n\n      // Crypto is kind of old and crusty.  Historically, its default string\n      // encoding is 'binary' so we have to make this configurable.\n      // Everything else in the universe uses 'utf8', though.\n      this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n      // not an actual buffer we keep track of, but a measurement\n      // of how much we're waiting to get pushed to some underlying\n      // socket or file.\n      this.length = 0;\n\n      // a flag to see when we're in the middle of a write.\n      this.writing = false;\n\n      // when true all writes will be buffered until .uncork() call\n      this.corked = 0;\n\n      // a flag to be able to tell if the onwrite cb is called immediately,\n      // or on a later tick.  We set this to true at first, because any\n      // actions that shouldn't happen until \"later\" should generally also\n      // not happen before the first write call.\n      this.sync = true;\n\n      // a flag to know if we're processing previously buffered items, which\n      // may call the _write() callback in the same tick, so that we don't\n      // end up in an overlapped onwrite situation.\n      this.bufferProcessing = false;\n\n      // the callback that's passed to _write(chunk,cb)\n      this.onwrite = function (er) {\n        onwrite(stream, er);\n      };\n\n      // the callback that the user supplies to write(chunk,encoding,cb)\n      this.writecb = null;\n\n      // the amount that is being written when _write is called.\n      this.writelen = 0;\n\n      this.bufferedRequest = null;\n      this.lastBufferedRequest = null;\n\n      // number of pending user-supplied write callbacks\n      // this must be 0 before 'finish' can be emitted\n      this.pendingcb = 0;\n\n      // emit prefinish if the only thing we're waiting for is _write cbs\n      // This is relevant for synchronous Transform streams\n      this.prefinished = false;\n\n      // True if the error was already emitted and should not be thrown again\n      this.errorEmitted = false;\n\n      // count buffered requests\n      this.bufferedRequestCount = 0;\n\n      // allocate the first CorkedRequest, there is always\n      // one allocated and free to use, and we maintain at most two\n      this.corkedRequestsFree = new CorkedRequest(this);\n    }\n\n    WritableState.prototype.getBuffer = function getBuffer() {\n      var current = this.bufferedRequest;\n      var out = [];\n      while (current) {\n        out.push(current);\n        current = current.next;\n      }\n      return out;\n    };\n\n    (function () {\n      try {\n        Object.defineProperty(WritableState.prototype, 'buffer', {\n          get: internalUtil.deprecate(function () {\n            return this.getBuffer();\n          }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n        });\n      } catch (_) {}\n    })();\n\n    // Test _writableState for inheritance to account for Duplex streams,\n    // whose prototype chain only points to Readable.\n    var realHasInstance;\n    if (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n      realHasInstance = Function.prototype[Symbol.hasInstance];\n      Object.defineProperty(Writable, Symbol.hasInstance, {\n        value: function value(object) {\n          if (realHasInstance.call(this, object)) return true;\n          if (this !== Writable) return false;\n\n          return object && object._writableState instanceof WritableState;\n        }\n      });\n    } else {\n      realHasInstance = function realHasInstance(object) {\n        return object instanceof this;\n      };\n    }\n\n    function Writable(options) {\n      Duplex = Duplex || __nested_webpack_require_90267__(0);\n\n      // Writable ctor is applied to Duplexes, too.\n      // `realHasInstance` is necessary because using plain `instanceof`\n      // would return false, as no `_writableState` property is attached.\n\n      // Trying to use the custom `instanceof` for Writable here will also break the\n      // Node.js LazyTransform implementation, which has a non-trivial getter for\n      // `_writableState` that would lead to infinite recursion.\n      if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n        return new Writable(options);\n      }\n\n      this._writableState = new WritableState(options, this);\n\n      // legacy.\n      this.writable = true;\n\n      if (options) {\n        if (typeof options.write === 'function') this._write = options.write;\n\n        if (typeof options.writev === 'function') this._writev = options.writev;\n\n        if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\n        if (typeof options.final === 'function') this._final = options.final;\n      }\n\n      Stream.call(this);\n    }\n\n    // Otherwise people can pipe Writable streams, which is just wrong.\n    Writable.prototype.pipe = function () {\n      this.emit('error', new Error('Cannot pipe, not readable'));\n    };\n\n    function writeAfterEnd(stream, cb) {\n      var er = new Error('write after end');\n      // TODO: defer error events consistently everywhere, not just the cb\n      stream.emit('error', er);\n      pna.nextTick(cb, er);\n    }\n\n    // Checks that a user-supplied chunk is valid, especially for the particular\n    // mode the stream is in. Currently this means that `null` is never accepted\n    // and undefined/non-string values are only allowed in object mode.\n    function validChunk(stream, state, chunk, cb) {\n      var valid = true;\n      var er = false;\n\n      if (chunk === null) {\n        er = new TypeError('May not write null values to stream');\n      } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n        er = new TypeError('Invalid non-string/buffer chunk');\n      }\n      if (er) {\n        stream.emit('error', er);\n        pna.nextTick(cb, er);\n        valid = false;\n      }\n      return valid;\n    }\n\n    Writable.prototype.write = function (chunk, encoding, cb) {\n      var state = this._writableState;\n      var ret = false;\n      var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n      if (isBuf && !Buffer.isBuffer(chunk)) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (typeof encoding === 'function') {\n        cb = encoding;\n        encoding = null;\n      }\n\n      if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n      if (typeof cb !== 'function') cb = nop;\n\n      if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n        state.pendingcb++;\n        ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n      }\n\n      return ret;\n    };\n\n    Writable.prototype.cork = function () {\n      var state = this._writableState;\n\n      state.corked++;\n    };\n\n    Writable.prototype.uncork = function () {\n      var state = this._writableState;\n\n      if (state.corked) {\n        state.corked--;\n\n        if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n      }\n    };\n\n    Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n      // node::ParseEncoding() requires lower case.\n      if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n      if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n      this._writableState.defaultEncoding = encoding;\n      return this;\n    };\n\n    function decodeChunk(state, chunk, encoding) {\n      if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n        chunk = Buffer.from(chunk, encoding);\n      }\n      return chunk;\n    }\n\n    Object.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n      // making it explicit this property is not enumerable\n      // because otherwise some prototype manipulation in\n      // userland will fail\n      enumerable: false,\n      get: function get() {\n        return this._writableState.highWaterMark;\n      }\n    });\n\n    // if we're already writing something, then just put this\n    // in the queue, and wait our turn.  Otherwise, call _write\n    // If we return false, then we need a drain event, so set that flag.\n    function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n      if (!isBuf) {\n        var newChunk = decodeChunk(state, chunk, encoding);\n        if (chunk !== newChunk) {\n          isBuf = true;\n          encoding = 'buffer';\n          chunk = newChunk;\n        }\n      }\n      var len = state.objectMode ? 1 : chunk.length;\n\n      state.length += len;\n\n      var ret = state.length < state.highWaterMark;\n      // we must ensure that previous needDrain will not be reset to false.\n      if (!ret) state.needDrain = true;\n\n      if (state.writing || state.corked) {\n        var last = state.lastBufferedRequest;\n        state.lastBufferedRequest = {\n          chunk: chunk,\n          encoding: encoding,\n          isBuf: isBuf,\n          callback: cb,\n          next: null\n        };\n        if (last) {\n          last.next = state.lastBufferedRequest;\n        } else {\n          state.bufferedRequest = state.lastBufferedRequest;\n        }\n        state.bufferedRequestCount += 1;\n      } else {\n        doWrite(stream, state, false, len, chunk, encoding, cb);\n      }\n\n      return ret;\n    }\n\n    function doWrite(stream, state, writev, len, chunk, encoding, cb) {\n      state.writelen = len;\n      state.writecb = cb;\n      state.writing = true;\n      state.sync = true;\n      if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n      state.sync = false;\n    }\n\n    function onwriteError(stream, state, sync, er, cb) {\n      --state.pendingcb;\n\n      if (sync) {\n        // defer the callback if we are being called synchronously\n        // to avoid piling up things on the stack\n        pna.nextTick(cb, er);\n        // this can emit finish, and it will always happen\n        // after error\n        pna.nextTick(finishMaybe, stream, state);\n        stream._writableState.errorEmitted = true;\n        stream.emit('error', er);\n      } else {\n        // the caller expect this to happen before if\n        // it is async\n        cb(er);\n        stream._writableState.errorEmitted = true;\n        stream.emit('error', er);\n        // this can emit finish, but finish must\n        // always follow error\n        finishMaybe(stream, state);\n      }\n    }\n\n    function onwriteStateUpdate(state) {\n      state.writing = false;\n      state.writecb = null;\n      state.length -= state.writelen;\n      state.writelen = 0;\n    }\n\n    function onwrite(stream, er) {\n      var state = stream._writableState;\n      var sync = state.sync;\n      var cb = state.writecb;\n\n      onwriteStateUpdate(state);\n\n      if (er) onwriteError(stream, state, sync, er, cb);else {\n        // Check if we're actually ready to finish, but don't emit yet\n        var finished = needFinish(state);\n\n        if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n          clearBuffer(stream, state);\n        }\n\n        if (sync) {\n          /*<replacement>*/\n          asyncWrite(afterWrite, stream, state, finished, cb);\n          /*</replacement>*/\n        } else {\n          afterWrite(stream, state, finished, cb);\n        }\n      }\n    }\n\n    function afterWrite(stream, state, finished, cb) {\n      if (!finished) onwriteDrain(stream, state);\n      state.pendingcb--;\n      cb();\n      finishMaybe(stream, state);\n    }\n\n    // Must force callback to be called on nextTick, so that we don't\n    // emit 'drain' before the write() consumer gets the 'false' return\n    // value, and has a chance to attach a 'drain' listener.\n    function onwriteDrain(stream, state) {\n      if (state.length === 0 && state.needDrain) {\n        state.needDrain = false;\n        stream.emit('drain');\n      }\n    }\n\n    // if there's something in the buffer waiting, then process it\n    function clearBuffer(stream, state) {\n      state.bufferProcessing = true;\n      var entry = state.bufferedRequest;\n\n      if (stream._writev && entry && entry.next) {\n        // Fast case, write everything using _writev()\n        var l = state.bufferedRequestCount;\n        var buffer = new Array(l);\n        var holder = state.corkedRequestsFree;\n        holder.entry = entry;\n\n        var count = 0;\n        var allBuffers = true;\n        while (entry) {\n          buffer[count] = entry;\n          if (!entry.isBuf) allBuffers = false;\n          entry = entry.next;\n          count += 1;\n        }\n        buffer.allBuffers = allBuffers;\n\n        doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n        // doWrite is almost always async, defer these to save a bit of time\n        // as the hot path ends with doWrite\n        state.pendingcb++;\n        state.lastBufferedRequest = null;\n        if (holder.next) {\n          state.corkedRequestsFree = holder.next;\n          holder.next = null;\n        } else {\n          state.corkedRequestsFree = new CorkedRequest(state);\n        }\n        state.bufferedRequestCount = 0;\n      } else {\n        // Slow case, write chunks one-by-one\n        while (entry) {\n          var chunk = entry.chunk;\n          var encoding = entry.encoding;\n          var cb = entry.callback;\n          var len = state.objectMode ? 1 : chunk.length;\n\n          doWrite(stream, state, false, len, chunk, encoding, cb);\n          entry = entry.next;\n          state.bufferedRequestCount--;\n          // if we didn't call the onwrite immediately, then\n          // it means that we need to wait until it does.\n          // also, that means that the chunk and cb are currently\n          // being processed, so move the buffer counter past them.\n          if (state.writing) {\n            break;\n          }\n        }\n\n        if (entry === null) state.lastBufferedRequest = null;\n      }\n\n      state.bufferedRequest = entry;\n      state.bufferProcessing = false;\n    }\n\n    Writable.prototype._write = function (chunk, encoding, cb) {\n      cb(new Error('_write() is not implemented'));\n    };\n\n    Writable.prototype._writev = null;\n\n    Writable.prototype.end = function (chunk, encoding, cb) {\n      var state = this._writableState;\n\n      if (typeof chunk === 'function') {\n        cb = chunk;\n        chunk = null;\n        encoding = null;\n      } else if (typeof encoding === 'function') {\n        cb = encoding;\n        encoding = null;\n      }\n\n      if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n      // .end() fully uncorks\n      if (state.corked) {\n        state.corked = 1;\n        this.uncork();\n      }\n\n      // ignore unnecessary end() calls.\n      if (!state.ending && !state.finished) endWritable(this, state, cb);\n    };\n\n    function needFinish(state) {\n      return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n    }\n    function callFinal(stream, state) {\n      stream._final(function (err) {\n        state.pendingcb--;\n        if (err) {\n          stream.emit('error', err);\n        }\n        state.prefinished = true;\n        stream.emit('prefinish');\n        finishMaybe(stream, state);\n      });\n    }\n    function prefinish(stream, state) {\n      if (!state.prefinished && !state.finalCalled) {\n        if (typeof stream._final === 'function') {\n          state.pendingcb++;\n          state.finalCalled = true;\n          pna.nextTick(callFinal, stream, state);\n        } else {\n          state.prefinished = true;\n          stream.emit('prefinish');\n        }\n      }\n    }\n\n    function finishMaybe(stream, state) {\n      var need = needFinish(state);\n      if (need) {\n        prefinish(stream, state);\n        if (state.pendingcb === 0) {\n          state.finished = true;\n          stream.emit('finish');\n        }\n      }\n      return need;\n    }\n\n    function endWritable(stream, state, cb) {\n      state.ending = true;\n      finishMaybe(stream, state);\n      if (cb) {\n        if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);\n      }\n      state.ended = true;\n      stream.writable = false;\n    }\n\n    function onCorkedFinish(corkReq, state, err) {\n      var entry = corkReq.entry;\n      corkReq.entry = null;\n      while (entry) {\n        var cb = entry.callback;\n        state.pendingcb--;\n        cb(err);\n        entry = entry.next;\n      }\n      if (state.corkedRequestsFree) {\n        state.corkedRequestsFree.next = corkReq;\n      } else {\n        state.corkedRequestsFree = corkReq;\n      }\n    }\n\n    Object.defineProperty(Writable.prototype, 'destroyed', {\n      get: function get() {\n        if (this._writableState === undefined) {\n          return false;\n        }\n        return this._writableState.destroyed;\n      },\n      set: function set(value) {\n        // we ignore the value if the stream\n        // has not been initialized yet\n        if (!this._writableState) {\n          return;\n        }\n\n        // backward compatibility, the user is explicitly\n        // managing destroyed\n        this._writableState.destroyed = value;\n      }\n    });\n\n    Writable.prototype.destroy = destroyImpl.destroy;\n    Writable.prototype._undestroy = destroyImpl.undestroy;\n    Writable.prototype._destroy = function (err, cb) {\n      this.end();\n      cb(err);\n    };\n    /* WEBPACK VAR INJECTION */\n  }).call(exports, __nested_webpack_require_90267__(3), __nested_webpack_require_90267__(27).setImmediate, __nested_webpack_require_90267__(1));\n\n  /***/\n},\n/* 11 */\n/***/function (module, exports) {\n\n  var toString = {}.toString;\n\n  module.exports = Array.isArray || function (arr) {\n    return toString.call(arr) == '[object Array]';\n  };\n\n  /***/\n},\n/* 12 */\n/***/function (module, exports, __nested_webpack_require_113314__) {\n\n  \"use strict\";\n  /* WEBPACK VAR INJECTION */\n  (function (global, process) {\n    // Copyright Joyent, Inc. and other Node contributors.\n    //\n    // Permission is hereby granted, free of charge, to any person obtaining a\n    // copy of this software and associated documentation files (the\n    // \"Software\"), to deal in the Software without restriction, including\n    // without limitation the rights to use, copy, modify, merge, publish,\n    // distribute, sublicense, and/or sell copies of the Software, and to permit\n    // persons to whom the Software is furnished to do so, subject to the\n    // following conditions:\n    //\n    // The above copyright notice and this permission notice shall be included\n    // in all copies or substantial portions of the Software.\n    //\n    // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n    // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n    // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n    // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n    // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n    // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n    // USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n    /*<replacement>*/\n\n    var pna = __nested_webpack_require_113314__(5);\n    /*</replacement>*/\n\n    module.exports = Readable;\n\n    /*<replacement>*/\n    var isArray = __nested_webpack_require_113314__(11);\n    /*</replacement>*/\n\n    /*<replacement>*/\n    var Duplex;\n    /*</replacement>*/\n\n    Readable.ReadableState = ReadableState;\n\n    /*<replacement>*/\n    var EE = __nested_webpack_require_113314__(8).EventEmitter;\n\n    var EElistenerCount = function EElistenerCount(emitter, type) {\n      return emitter.listeners(type).length;\n    };\n    /*</replacement>*/\n\n    /*<replacement>*/\n    var Stream = __nested_webpack_require_113314__(13);\n    /*</replacement>*/\n\n    /*<replacement>*/\n\n    var Buffer = __nested_webpack_require_113314__(6).Buffer;\n    var OurUint8Array = global.Uint8Array || function () {};\n    function _uint8ArrayToBuffer(chunk) {\n      return Buffer.from(chunk);\n    }\n    function _isUint8Array(obj) {\n      return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n    }\n\n    /*</replacement>*/\n\n    /*<replacement>*/\n    var util = __nested_webpack_require_113314__(4);\n    util.inherits = __nested_webpack_require_113314__(2);\n    /*</replacement>*/\n\n    /*<replacement>*/\n    var debugUtil = __nested_webpack_require_113314__(24);\n    var debug = void 0;\n    if (debugUtil && debugUtil.debuglog) {\n      debug = debugUtil.debuglog('stream');\n    } else {\n      debug = function debug() {};\n    }\n    /*</replacement>*/\n\n    var BufferList = __nested_webpack_require_113314__(25);\n    var destroyImpl = __nested_webpack_require_113314__(14);\n    var StringDecoder;\n\n    util.inherits(Readable, Stream);\n\n    var kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\n    function prependListener(emitter, event, fn) {\n      // Sadly this is not cacheable as some libraries bundle their own\n      // event emitter implementation with them.\n      if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n      // This is a hack to make sure that our error handler is attached before any\n      // userland ones.  NEVER DO THIS. This is here only because this code needs\n      // to continue to work with older versions of Node.js that do not include\n      // the prependListener() method. The goal is to eventually remove this hack.\n      if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n    }\n\n    function ReadableState(options, stream) {\n      Duplex = Duplex || __nested_webpack_require_113314__(0);\n\n      options = options || {};\n\n      // Duplex streams are both readable and writable, but share\n      // the same options object.\n      // However, some cases require setting options to different\n      // values for the readable and the writable sides of the duplex stream.\n      // These options can be provided separately as readableXXX and writableXXX.\n      var isDuplex = stream instanceof Duplex;\n\n      // object stream flag. Used to make read(n) ignore n and to\n      // make all the buffer merging and length checks go away\n      this.objectMode = !!options.objectMode;\n\n      if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n      // the point at which it stops calling _read() to fill the buffer\n      // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n      var hwm = options.highWaterMark;\n      var readableHwm = options.readableHighWaterMark;\n      var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n      if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;\n\n      // cast to ints.\n      this.highWaterMark = Math.floor(this.highWaterMark);\n\n      // A linked list is used to store data chunks instead of an array because the\n      // linked list can remove elements from the beginning faster than\n      // array.shift()\n      this.buffer = new BufferList();\n      this.length = 0;\n      this.pipes = null;\n      this.pipesCount = 0;\n      this.flowing = null;\n      this.ended = false;\n      this.endEmitted = false;\n      this.reading = false;\n\n      // a flag to be able to tell if the event 'readable'/'data' is emitted\n      // immediately, or on a later tick.  We set this to true at first, because\n      // any actions that shouldn't happen until \"later\" should generally also\n      // not happen before the first read call.\n      this.sync = true;\n\n      // whenever we return null, then we set a flag to say\n      // that we're awaiting a 'readable' event emission.\n      this.needReadable = false;\n      this.emittedReadable = false;\n      this.readableListening = false;\n      this.resumeScheduled = false;\n\n      // has it been destroyed\n      this.destroyed = false;\n\n      // Crypto is kind of old and crusty.  Historically, its default string\n      // encoding is 'binary' so we have to make this configurable.\n      // Everything else in the universe uses 'utf8', though.\n      this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n      // the number of writers that are awaiting a drain event in .pipe()s\n      this.awaitDrain = 0;\n\n      // if true, a maybeReadMore has been scheduled\n      this.readingMore = false;\n\n      this.decoder = null;\n      this.encoding = null;\n      if (options.encoding) {\n        if (!StringDecoder) StringDecoder = __nested_webpack_require_113314__(15).StringDecoder;\n        this.decoder = new StringDecoder(options.encoding);\n        this.encoding = options.encoding;\n      }\n    }\n\n    function Readable(options) {\n      Duplex = Duplex || __nested_webpack_require_113314__(0);\n\n      if (!(this instanceof Readable)) return new Readable(options);\n\n      this._readableState = new ReadableState(options, this);\n\n      // legacy\n      this.readable = true;\n\n      if (options) {\n        if (typeof options.read === 'function') this._read = options.read;\n\n        if (typeof options.destroy === 'function') this._destroy = options.destroy;\n      }\n\n      Stream.call(this);\n    }\n\n    Object.defineProperty(Readable.prototype, 'destroyed', {\n      get: function get() {\n        if (this._readableState === undefined) {\n          return false;\n        }\n        return this._readableState.destroyed;\n      },\n      set: function set(value) {\n        // we ignore the value if the stream\n        // has not been initialized yet\n        if (!this._readableState) {\n          return;\n        }\n\n        // backward compatibility, the user is explicitly\n        // managing destroyed\n        this._readableState.destroyed = value;\n      }\n    });\n\n    Readable.prototype.destroy = destroyImpl.destroy;\n    Readable.prototype._undestroy = destroyImpl.undestroy;\n    Readable.prototype._destroy = function (err, cb) {\n      this.push(null);\n      cb(err);\n    };\n\n    // Manually shove something into the read() buffer.\n    // This returns true if the highWaterMark has not been hit yet,\n    // similar to how Writable.write() returns true if you should\n    // write() some more.\n    Readable.prototype.push = function (chunk, encoding) {\n      var state = this._readableState;\n      var skipChunkCheck;\n\n      if (!state.objectMode) {\n        if (typeof chunk === 'string') {\n          encoding = encoding || state.defaultEncoding;\n          if (encoding !== state.encoding) {\n            chunk = Buffer.from(chunk, encoding);\n            encoding = '';\n          }\n          skipChunkCheck = true;\n        }\n      } else {\n        skipChunkCheck = true;\n      }\n\n      return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n    };\n\n    // Unshift should *always* be something directly out of read()\n    Readable.prototype.unshift = function (chunk) {\n      return readableAddChunk(this, chunk, null, true, false);\n    };\n\n    function readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n      var state = stream._readableState;\n      if (chunk === null) {\n        state.reading = false;\n        onEofChunk(stream, state);\n      } else {\n        var er;\n        if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n        if (er) {\n          stream.emit('error', er);\n        } else if (state.objectMode || chunk && chunk.length > 0) {\n          if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n            chunk = _uint8ArrayToBuffer(chunk);\n          }\n\n          if (addToFront) {\n            if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n          } else if (state.ended) {\n            stream.emit('error', new Error('stream.push() after EOF'));\n          } else {\n            state.reading = false;\n            if (state.decoder && !encoding) {\n              chunk = state.decoder.write(chunk);\n              if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n            } else {\n              addChunk(stream, state, chunk, false);\n            }\n          }\n        } else if (!addToFront) {\n          state.reading = false;\n        }\n      }\n\n      return needMoreData(state);\n    }\n\n    function addChunk(stream, state, chunk, addToFront) {\n      if (state.flowing && state.length === 0 && !state.sync) {\n        stream.emit('data', chunk);\n        stream.read(0);\n      } else {\n        // update the buffer info.\n        state.length += state.objectMode ? 1 : chunk.length;\n        if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n        if (state.needReadable) emitReadable(stream);\n      }\n      maybeReadMore(stream, state);\n    }\n\n    function chunkInvalid(state, chunk) {\n      var er;\n      if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n        er = new TypeError('Invalid non-string/buffer chunk');\n      }\n      return er;\n    }\n\n    // if it's past the high water mark, we can push in some more.\n    // Also, if we have no data yet, we can stand some\n    // more bytes.  This is to work around cases where hwm=0,\n    // such as the repl.  Also, if the push() triggered a\n    // readable event, and the user called read(largeNumber) such that\n    // needReadable was set, then we ought to push more, so that another\n    // 'readable' event will be triggered.\n    function needMoreData(state) {\n      return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n    }\n\n    Readable.prototype.isPaused = function () {\n      return this._readableState.flowing === false;\n    };\n\n    // backwards compatibility.\n    Readable.prototype.setEncoding = function (enc) {\n      if (!StringDecoder) StringDecoder = __nested_webpack_require_113314__(15).StringDecoder;\n      this._readableState.decoder = new StringDecoder(enc);\n      this._readableState.encoding = enc;\n      return this;\n    };\n\n    // Don't raise the hwm > 8MB\n    var MAX_HWM = 0x800000;\n    function computeNewHighWaterMark(n) {\n      if (n >= MAX_HWM) {\n        n = MAX_HWM;\n      } else {\n        // Get the next highest power of 2 to prevent increasing hwm excessively in\n        // tiny amounts\n        n--;\n        n |= n >>> 1;\n        n |= n >>> 2;\n        n |= n >>> 4;\n        n |= n >>> 8;\n        n |= n >>> 16;\n        n++;\n      }\n      return n;\n    }\n\n    // This function is designed to be inlinable, so please take care when making\n    // changes to the function body.\n    function howMuchToRead(n, state) {\n      if (n <= 0 || state.length === 0 && state.ended) return 0;\n      if (state.objectMode) return 1;\n      if (n !== n) {\n        // Only flow one buffer at a time\n        if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n      }\n      // If we're asking for more than the current hwm, then raise the hwm.\n      if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n      if (n <= state.length) return n;\n      // Don't have enough\n      if (!state.ended) {\n        state.needReadable = true;\n        return 0;\n      }\n      return state.length;\n    }\n\n    // you can override either this method, or the async _read(n) below.\n    Readable.prototype.read = function (n) {\n      debug('read', n);\n      n = parseInt(n, 10);\n      var state = this._readableState;\n      var nOrig = n;\n\n      if (n !== 0) state.emittedReadable = false;\n\n      // if we're doing read(0) to trigger a readable event, but we\n      // already have a bunch of data in the buffer, then just trigger\n      // the 'readable' event and move on.\n      if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n        debug('read: emitReadable', state.length, state.ended);\n        if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n        return null;\n      }\n\n      n = howMuchToRead(n, state);\n\n      // if we've ended, and we're now clear, then finish it up.\n      if (n === 0 && state.ended) {\n        if (state.length === 0) endReadable(this);\n        return null;\n      }\n\n      // All the actual chunk generation logic needs to be\n      // *below* the call to _read.  The reason is that in certain\n      // synthetic stream cases, such as passthrough streams, _read\n      // may be a completely synchronous operation which may change\n      // the state of the read buffer, providing enough data when\n      // before there was *not* enough.\n      //\n      // So, the steps are:\n      // 1. Figure out what the state of things will be after we do\n      // a read from the buffer.\n      //\n      // 2. If that resulting state will trigger a _read, then call _read.\n      // Note that this may be asynchronous, or synchronous.  Yes, it is\n      // deeply ugly to write APIs this way, but that still doesn't mean\n      // that the Readable class should behave improperly, as streams are\n      // designed to be sync/async agnostic.\n      // Take note if the _read call is sync or async (ie, if the read call\n      // has returned yet), so that we know whether or not it's safe to emit\n      // 'readable' etc.\n      //\n      // 3. Actually pull the requested chunks out of the buffer and return.\n\n      // if we need a readable event, then we need to do some reading.\n      var doRead = state.needReadable;\n      debug('need readable', doRead);\n\n      // if we currently have less than the highWaterMark, then also read some\n      if (state.length === 0 || state.length - n < state.highWaterMark) {\n        doRead = true;\n        debug('length less than watermark', doRead);\n      }\n\n      // however, if we've ended, then there's no point, and if we're already\n      // reading, then it's unnecessary.\n      if (state.ended || state.reading) {\n        doRead = false;\n        debug('reading or ended', doRead);\n      } else if (doRead) {\n        debug('do read');\n        state.reading = true;\n        state.sync = true;\n        // if the length is currently zero, then we *need* a readable event.\n        if (state.length === 0) state.needReadable = true;\n        // call internal read method\n        this._read(state.highWaterMark);\n        state.sync = false;\n        // If _read pushed data synchronously, then `reading` will be false,\n        // and we need to re-evaluate how much data we can return to the user.\n        if (!state.reading) n = howMuchToRead(nOrig, state);\n      }\n\n      var ret;\n      if (n > 0) ret = fromList(n, state);else ret = null;\n\n      if (ret === null) {\n        state.needReadable = true;\n        n = 0;\n      } else {\n        state.length -= n;\n      }\n\n      if (state.length === 0) {\n        // If we have nothing in the buffer, then we want to know\n        // as soon as we *do* get something into the buffer.\n        if (!state.ended) state.needReadable = true;\n\n        // If we tried to read() past the EOF, then emit end on the next tick.\n        if (nOrig !== n && state.ended) endReadable(this);\n      }\n\n      if (ret !== null) this.emit('data', ret);\n\n      return ret;\n    };\n\n    function onEofChunk(stream, state) {\n      if (state.ended) return;\n      if (state.decoder) {\n        var chunk = state.decoder.end();\n        if (chunk && chunk.length) {\n          state.buffer.push(chunk);\n          state.length += state.objectMode ? 1 : chunk.length;\n        }\n      }\n      state.ended = true;\n\n      // emit 'readable' now to make sure it gets picked up.\n      emitReadable(stream);\n    }\n\n    // Don't emit readable right away in sync mode, because this can trigger\n    // another read() call => stack overflow.  This way, it might trigger\n    // a nextTick recursion warning, but that's not so bad.\n    function emitReadable(stream) {\n      var state = stream._readableState;\n      state.needReadable = false;\n      if (!state.emittedReadable) {\n        debug('emitReadable', state.flowing);\n        state.emittedReadable = true;\n        if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);\n      }\n    }\n\n    function emitReadable_(stream) {\n      debug('emit readable');\n      stream.emit('readable');\n      flow(stream);\n    }\n\n    // at this point, the user has presumably seen the 'readable' event,\n    // and called read() to consume some data.  that may have triggered\n    // in turn another _read(n) call, in which case reading = true if\n    // it's in progress.\n    // However, if we're not ended, or reading, and the length < hwm,\n    // then go ahead and try to read some more preemptively.\n    function maybeReadMore(stream, state) {\n      if (!state.readingMore) {\n        state.readingMore = true;\n        pna.nextTick(maybeReadMore_, stream, state);\n      }\n    }\n\n    function maybeReadMore_(stream, state) {\n      var len = state.length;\n      while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n        debug('maybeReadMore read 0');\n        stream.read(0);\n        if (len === state.length)\n          // didn't get any data, stop spinning.\n          break;else len = state.length;\n      }\n      state.readingMore = false;\n    }\n\n    // abstract method.  to be overridden in specific implementation classes.\n    // call cb(er, data) where data is <= n in length.\n    // for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n    // arbitrary, and perhaps not very meaningful.\n    Readable.prototype._read = function (n) {\n      this.emit('error', new Error('_read() is not implemented'));\n    };\n\n    Readable.prototype.pipe = function (dest, pipeOpts) {\n      var src = this;\n      var state = this._readableState;\n\n      switch (state.pipesCount) {\n        case 0:\n          state.pipes = dest;\n          break;\n        case 1:\n          state.pipes = [state.pipes, dest];\n          break;\n        default:\n          state.pipes.push(dest);\n          break;\n      }\n      state.pipesCount += 1;\n      debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n      var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n      var endFn = doEnd ? onend : unpipe;\n      if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);\n\n      dest.on('unpipe', onunpipe);\n      function onunpipe(readable, unpipeInfo) {\n        debug('onunpipe');\n        if (readable === src) {\n          if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n            unpipeInfo.hasUnpiped = true;\n            cleanup();\n          }\n        }\n      }\n\n      function onend() {\n        debug('onend');\n        dest.end();\n      }\n\n      // when the dest drains, it reduces the awaitDrain counter\n      // on the source.  This would be more elegant with a .once()\n      // handler in flow(), but adding and removing repeatedly is\n      // too slow.\n      var ondrain = pipeOnDrain(src);\n      dest.on('drain', ondrain);\n\n      var cleanedUp = false;\n      function cleanup() {\n        debug('cleanup');\n        // cleanup event handlers once the pipe is broken\n        dest.removeListener('close', onclose);\n        dest.removeListener('finish', onfinish);\n        dest.removeListener('drain', ondrain);\n        dest.removeListener('error', onerror);\n        dest.removeListener('unpipe', onunpipe);\n        src.removeListener('end', onend);\n        src.removeListener('end', unpipe);\n        src.removeListener('data', ondata);\n\n        cleanedUp = true;\n\n        // if the reader is waiting for a drain event from this\n        // specific writer, then it would cause it to never start\n        // flowing again.\n        // So, if this is awaiting a drain, then we just call it now.\n        // If we don't know, then assume that we are waiting for one.\n        if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n      }\n\n      // If the user pushes more data while we're writing to dest then we'll end up\n      // in ondata again. However, we only want to increase awaitDrain once because\n      // dest will only emit one 'drain' event for the multiple writes.\n      // => Introduce a guard on increasing awaitDrain.\n      var increasedAwaitDrain = false;\n      src.on('data', ondata);\n      function ondata(chunk) {\n        debug('ondata');\n        increasedAwaitDrain = false;\n        var ret = dest.write(chunk);\n        if (false === ret && !increasedAwaitDrain) {\n          // If the user unpiped during `dest.write()`, it is possible\n          // to get stuck in a permanently paused state if that write\n          // also returned false.\n          // => Check whether `dest` is still a piping destination.\n          if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n            debug('false write response, pause', src._readableState.awaitDrain);\n            src._readableState.awaitDrain++;\n            increasedAwaitDrain = true;\n          }\n          src.pause();\n        }\n      }\n\n      // if the dest has an error, then stop piping into it.\n      // however, don't suppress the throwing behavior for this.\n      function onerror(er) {\n        debug('onerror', er);\n        unpipe();\n        dest.removeListener('error', onerror);\n        if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n      }\n\n      // Make sure our error handler is attached before userland ones.\n      prependListener(dest, 'error', onerror);\n\n      // Both close and finish should trigger unpipe, but only once.\n      function onclose() {\n        dest.removeListener('finish', onfinish);\n        unpipe();\n      }\n      dest.once('close', onclose);\n      function onfinish() {\n        debug('onfinish');\n        dest.removeListener('close', onclose);\n        unpipe();\n      }\n      dest.once('finish', onfinish);\n\n      function unpipe() {\n        debug('unpipe');\n        src.unpipe(dest);\n      }\n\n      // tell the dest that it's being piped to\n      dest.emit('pipe', src);\n\n      // start the flow if it hasn't been started already.\n      if (!state.flowing) {\n        debug('pipe resume');\n        src.resume();\n      }\n\n      return dest;\n    };\n\n    function pipeOnDrain(src) {\n      return function () {\n        var state = src._readableState;\n        debug('pipeOnDrain', state.awaitDrain);\n        if (state.awaitDrain) state.awaitDrain--;\n        if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n          state.flowing = true;\n          flow(src);\n        }\n      };\n    }\n\n    Readable.prototype.unpipe = function (dest) {\n      var state = this._readableState;\n      var unpipeInfo = { hasUnpiped: false };\n\n      // if we're not piping anywhere, then do nothing.\n      if (state.pipesCount === 0) return this;\n\n      // just one destination.  most common case.\n      if (state.pipesCount === 1) {\n        // passed in one, but it's not the right one.\n        if (dest && dest !== state.pipes) return this;\n\n        if (!dest) dest = state.pipes;\n\n        // got a match.\n        state.pipes = null;\n        state.pipesCount = 0;\n        state.flowing = false;\n        if (dest) dest.emit('unpipe', this, unpipeInfo);\n        return this;\n      }\n\n      // slow case. multiple pipe destinations.\n\n      if (!dest) {\n        // remove all.\n        var dests = state.pipes;\n        var len = state.pipesCount;\n        state.pipes = null;\n        state.pipesCount = 0;\n        state.flowing = false;\n\n        for (var i = 0; i < len; i++) {\n          dests[i].emit('unpipe', this, unpipeInfo);\n        }return this;\n      }\n\n      // try to find the right one.\n      var index = indexOf(state.pipes, dest);\n      if (index === -1) return this;\n\n      state.pipes.splice(index, 1);\n      state.pipesCount -= 1;\n      if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n      dest.emit('unpipe', this, unpipeInfo);\n\n      return this;\n    };\n\n    // set up data events if they are asked for\n    // Ensure readable listeners eventually get something\n    Readable.prototype.on = function (ev, fn) {\n      var res = Stream.prototype.on.call(this, ev, fn);\n\n      if (ev === 'data') {\n        // Start flowing on next tick if stream isn't explicitly paused\n        if (this._readableState.flowing !== false) this.resume();\n      } else if (ev === 'readable') {\n        var state = this._readableState;\n        if (!state.endEmitted && !state.readableListening) {\n          state.readableListening = state.needReadable = true;\n          state.emittedReadable = false;\n          if (!state.reading) {\n            pna.nextTick(nReadingNextTick, this);\n          } else if (state.length) {\n            emitReadable(this);\n          }\n        }\n      }\n\n      return res;\n    };\n    Readable.prototype.addListener = Readable.prototype.on;\n\n    function nReadingNextTick(self) {\n      debug('readable nexttick read 0');\n      self.read(0);\n    }\n\n    // pause() and resume() are remnants of the legacy readable stream API\n    // If the user uses them, then switch into old mode.\n    Readable.prototype.resume = function () {\n      var state = this._readableState;\n      if (!state.flowing) {\n        debug('resume');\n        state.flowing = true;\n        resume(this, state);\n      }\n      return this;\n    };\n\n    function resume(stream, state) {\n      if (!state.resumeScheduled) {\n        state.resumeScheduled = true;\n        pna.nextTick(resume_, stream, state);\n      }\n    }\n\n    function resume_(stream, state) {\n      if (!state.reading) {\n        debug('resume read 0');\n        stream.read(0);\n      }\n\n      state.resumeScheduled = false;\n      state.awaitDrain = 0;\n      stream.emit('resume');\n      flow(stream);\n      if (state.flowing && !state.reading) stream.read(0);\n    }\n\n    Readable.prototype.pause = function () {\n      debug('call pause flowing=%j', this._readableState.flowing);\n      if (false !== this._readableState.flowing) {\n        debug('pause');\n        this._readableState.flowing = false;\n        this.emit('pause');\n      }\n      return this;\n    };\n\n    function flow(stream) {\n      var state = stream._readableState;\n      debug('flow', state.flowing);\n      while (state.flowing && stream.read() !== null) {}\n    }\n\n    // wrap an old-style stream as the async data source.\n    // This is *not* part of the readable stream interface.\n    // It is an ugly unfortunate mess of history.\n    Readable.prototype.wrap = function (stream) {\n      var _this = this;\n\n      var state = this._readableState;\n      var paused = false;\n\n      stream.on('end', function () {\n        debug('wrapped end');\n        if (state.decoder && !state.ended) {\n          var chunk = state.decoder.end();\n          if (chunk && chunk.length) _this.push(chunk);\n        }\n\n        _this.push(null);\n      });\n\n      stream.on('data', function (chunk) {\n        debug('wrapped data');\n        if (state.decoder) chunk = state.decoder.write(chunk);\n\n        // don't skip over falsy values in objectMode\n        if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n        var ret = _this.push(chunk);\n        if (!ret) {\n          paused = true;\n          stream.pause();\n        }\n      });\n\n      // proxy all the other methods.\n      // important when wrapping filters and duplexes.\n      for (var i in stream) {\n        if (this[i] === undefined && typeof stream[i] === 'function') {\n          this[i] = function (method) {\n            return function () {\n              return stream[method].apply(stream, arguments);\n            };\n          }(i);\n        }\n      }\n\n      // proxy certain important events.\n      for (var n = 0; n < kProxyEvents.length; n++) {\n        stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n      }\n\n      // when we try to consume some more bytes, simply unpause the\n      // underlying stream.\n      this._read = function (n) {\n        debug('wrapped _read', n);\n        if (paused) {\n          paused = false;\n          stream.resume();\n        }\n      };\n\n      return this;\n    };\n\n    Object.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n      // making it explicit this property is not enumerable\n      // because otherwise some prototype manipulation in\n      // userland will fail\n      enumerable: false,\n      get: function get() {\n        return this._readableState.highWaterMark;\n      }\n    });\n\n    // exposed for testing purposes only.\n    Readable._fromList = fromList;\n\n    // Pluck off n bytes from an array of buffers.\n    // Length is the combined lengths of all the buffers in the list.\n    // This function is designed to be inlinable, so please take care when making\n    // changes to the function body.\n    function fromList(n, state) {\n      // nothing buffered\n      if (state.length === 0) return null;\n\n      var ret;\n      if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n        // read it all, truncate the list\n        if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n        state.buffer.clear();\n      } else {\n        // read part of list\n        ret = fromListPartial(n, state.buffer, state.decoder);\n      }\n\n      return ret;\n    }\n\n    // Extracts only enough buffered data to satisfy the amount requested.\n    // This function is designed to be inlinable, so please take care when making\n    // changes to the function body.\n    function fromListPartial(n, list, hasStrings) {\n      var ret;\n      if (n < list.head.data.length) {\n        // slice is the same for buffers and strings\n        ret = list.head.data.slice(0, n);\n        list.head.data = list.head.data.slice(n);\n      } else if (n === list.head.data.length) {\n        // first chunk is a perfect match\n        ret = list.shift();\n      } else {\n        // result spans more than one buffer\n        ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n      }\n      return ret;\n    }\n\n    // Copies a specified amount of characters from the list of buffered data\n    // chunks.\n    // This function is designed to be inlinable, so please take care when making\n    // changes to the function body.\n    function copyFromBufferString(n, list) {\n      var p = list.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) list.head = p.next;else list.head = list.tail = null;\n          } else {\n            list.head = p;\n            p.data = str.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      list.length -= c;\n      return ret;\n    }\n\n    // Copies a specified amount of bytes from the list of buffered data chunks.\n    // This function is designed to be inlinable, so please take care when making\n    // changes to the function body.\n    function copyFromBuffer(n, list) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = list.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) list.head = p.next;else list.head = list.tail = null;\n          } else {\n            list.head = p;\n            p.data = buf.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      list.length -= c;\n      return ret;\n    }\n\n    function endReadable(stream) {\n      var state = stream._readableState;\n\n      // If we get here before consuming all the bytes, then that is a\n      // bug in node.  Should never happen.\n      if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n      if (!state.endEmitted) {\n        state.ended = true;\n        pna.nextTick(endReadableNT, state, stream);\n      }\n    }\n\n    function endReadableNT(state, stream) {\n      // Check that we didn't get one last unshift.\n      if (!state.endEmitted && state.length === 0) {\n        state.endEmitted = true;\n        stream.readable = false;\n        stream.emit('end');\n      }\n    }\n\n    function indexOf(xs, x) {\n      for (var i = 0, l = xs.length; i < l; i++) {\n        if (xs[i] === x) return i;\n      }\n      return -1;\n    }\n    /* WEBPACK VAR INJECTION */\n  }).call(exports, __nested_webpack_require_113314__(1), __nested_webpack_require_113314__(3));\n\n  /***/\n},\n/* 13 */\n/***/function (module, exports, __nested_webpack_require_148325__) {\n\n  module.exports = __nested_webpack_require_148325__(8).EventEmitter;\n\n  /***/\n},\n/* 14 */\n/***/function (module, exports, __nested_webpack_require_148458__) {\n\n  \"use strict\";\n\n  /*<replacement>*/\n\n  var pna = __nested_webpack_require_148458__(5);\n  /*</replacement>*/\n\n  // undocumented cb() API, needed for core, not for public API\n  function destroy(err, cb) {\n    var _this = this;\n\n    var readableDestroyed = this._readableState && this._readableState.destroyed;\n    var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n    if (readableDestroyed || writableDestroyed) {\n      if (cb) {\n        cb(err);\n      } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\n        pna.nextTick(emitErrorNT, this, err);\n      }\n      return this;\n    }\n\n    // we set destroyed to true before firing error callbacks in order\n    // to make it re-entrance safe in case destroy() is called within callbacks\n\n    if (this._readableState) {\n      this._readableState.destroyed = true;\n    }\n\n    // if this is a duplex stream mark the writable part as destroyed as well\n    if (this._writableState) {\n      this._writableState.destroyed = true;\n    }\n\n    this._destroy(err || null, function (err) {\n      if (!cb && err) {\n        pna.nextTick(emitErrorNT, _this, err);\n        if (_this._writableState) {\n          _this._writableState.errorEmitted = true;\n        }\n      } else if (cb) {\n        cb(err);\n      }\n    });\n\n    return this;\n  }\n\n  function undestroy() {\n    if (this._readableState) {\n      this._readableState.destroyed = false;\n      this._readableState.reading = false;\n      this._readableState.ended = false;\n      this._readableState.endEmitted = false;\n    }\n\n    if (this._writableState) {\n      this._writableState.destroyed = false;\n      this._writableState.ended = false;\n      this._writableState.ending = false;\n      this._writableState.finished = false;\n      this._writableState.errorEmitted = false;\n    }\n  }\n\n  function emitErrorNT(self, err) {\n    self.emit('error', err);\n  }\n\n  module.exports = {\n    destroy: destroy,\n    undestroy: undestroy\n  };\n\n  /***/\n},\n/* 15 */\n/***/function (module, exports, __nested_webpack_require_150496__) {\n\n  \"use strict\";\n  // Copyright Joyent, Inc. and other Node contributors.\n  //\n  // Permission is hereby granted, free of charge, to any person obtaining a\n  // copy of this software and associated documentation files (the\n  // \"Software\"), to deal in the Software without restriction, including\n  // without limitation the rights to use, copy, modify, merge, publish,\n  // distribute, sublicense, and/or sell copies of the Software, and to permit\n  // persons to whom the Software is furnished to do so, subject to the\n  // following conditions:\n  //\n  // The above copyright notice and this permission notice shall be included\n  // in all copies or substantial portions of the Software.\n  //\n  // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n  // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n  // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n  // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n  // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n  // USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n  /*<replacement>*/\n\n  var Buffer = __nested_webpack_require_150496__(6).Buffer;\n  /*</replacement>*/\n\n  var isEncoding = Buffer.isEncoding || function (encoding) {\n    encoding = '' + encoding;\n    switch (encoding && encoding.toLowerCase()) {\n      case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n        return true;\n      default:\n        return false;\n    }\n  };\n\n  function _normalizeEncoding(enc) {\n    if (!enc) return 'utf8';\n    var retried;\n    while (true) {\n      switch (enc) {\n        case 'utf8':\n        case 'utf-8':\n          return 'utf8';\n        case 'ucs2':\n        case 'ucs-2':\n        case 'utf16le':\n        case 'utf-16le':\n          return 'utf16le';\n        case 'latin1':\n        case 'binary':\n          return 'latin1';\n        case 'base64':\n        case 'ascii':\n        case 'hex':\n          return enc;\n        default:\n          if (retried) return; // undefined\n          enc = ('' + enc).toLowerCase();\n          retried = true;\n      }\n    }\n  };\n\n  // Do not cache `Buffer.isEncoding` when checking encoding names as some\n  // modules monkey-patch it to support additional encodings\n  function normalizeEncoding(enc) {\n    var nenc = _normalizeEncoding(enc);\n    if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n    return nenc || enc;\n  }\n\n  // StringDecoder provides an interface for efficiently splitting a series of\n  // buffers into a series of JS strings without breaking apart multi-byte\n  // characters.\n  exports.StringDecoder = StringDecoder;\n  function StringDecoder(encoding) {\n    this.encoding = normalizeEncoding(encoding);\n    var nb;\n    switch (this.encoding) {\n      case 'utf16le':\n        this.text = utf16Text;\n        this.end = utf16End;\n        nb = 4;\n        break;\n      case 'utf8':\n        this.fillLast = utf8FillLast;\n        nb = 4;\n        break;\n      case 'base64':\n        this.text = base64Text;\n        this.end = base64End;\n        nb = 3;\n        break;\n      default:\n        this.write = simpleWrite;\n        this.end = simpleEnd;\n        return;\n    }\n    this.lastNeed = 0;\n    this.lastTotal = 0;\n    this.lastChar = Buffer.allocUnsafe(nb);\n  }\n\n  StringDecoder.prototype.write = function (buf) {\n    if (buf.length === 0) return '';\n    var r;\n    var i;\n    if (this.lastNeed) {\n      r = this.fillLast(buf);\n      if (r === undefined) return '';\n      i = this.lastNeed;\n      this.lastNeed = 0;\n    } else {\n      i = 0;\n    }\n    if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n    return r || '';\n  };\n\n  StringDecoder.prototype.end = utf8End;\n\n  // Returns only complete characters in a Buffer\n  StringDecoder.prototype.text = utf8Text;\n\n  // Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\n  StringDecoder.prototype.fillLast = function (buf) {\n    if (this.lastNeed <= buf.length) {\n      buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n      return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n    }\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n    this.lastNeed -= buf.length;\n  };\n\n  // Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n  // continuation byte. If an invalid byte is detected, -2 is returned.\n  function utf8CheckByte(byte) {\n    if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n    return byte >> 6 === 0x02 ? -1 : -2;\n  }\n\n  // Checks at most 3 bytes at the end of a Buffer in order to detect an\n  // incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n  // needed to complete the UTF-8 character (if applicable) are returned.\n  function utf8CheckIncomplete(self, buf, i) {\n    var j = buf.length - 1;\n    if (j < i) return 0;\n    var nb = utf8CheckByte(buf[j]);\n    if (nb >= 0) {\n      if (nb > 0) self.lastNeed = nb - 1;\n      return nb;\n    }\n    if (--j < i || nb === -2) return 0;\n    nb = utf8CheckByte(buf[j]);\n    if (nb >= 0) {\n      if (nb > 0) self.lastNeed = nb - 2;\n      return nb;\n    }\n    if (--j < i || nb === -2) return 0;\n    nb = utf8CheckByte(buf[j]);\n    if (nb >= 0) {\n      if (nb > 0) {\n        if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n      }\n      return nb;\n    }\n    return 0;\n  }\n\n  // Validates as many continuation bytes for a multi-byte UTF-8 character as\n  // needed or are available. If we see a non-continuation byte where we expect\n  // one, we \"replace\" the validated continuation bytes we've seen so far with\n  // a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n  // behavior. The continuation byte check is included three times in the case\n  // where all of the continuation bytes for a character exist in the same buffer.\n  // It is also done this way as a slight performance increase instead of using a\n  // loop.\n  function utf8CheckExtraBytes(self, buf, p) {\n    if ((buf[0] & 0xC0) !== 0x80) {\n      self.lastNeed = 0;\n      return '\\uFFFD';\n    }\n    if (self.lastNeed > 1 && buf.length > 1) {\n      if ((buf[1] & 0xC0) !== 0x80) {\n        self.lastNeed = 1;\n        return '\\uFFFD';\n      }\n      if (self.lastNeed > 2 && buf.length > 2) {\n        if ((buf[2] & 0xC0) !== 0x80) {\n          self.lastNeed = 2;\n          return '\\uFFFD';\n        }\n      }\n    }\n  }\n\n  // Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\n  function utf8FillLast(buf) {\n    var p = this.lastTotal - this.lastNeed;\n    var r = utf8CheckExtraBytes(this, buf, p);\n    if (r !== undefined) return r;\n    if (this.lastNeed <= buf.length) {\n      buf.copy(this.lastChar, p, 0, this.lastNeed);\n      return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n    }\n    buf.copy(this.lastChar, p, 0, buf.length);\n    this.lastNeed -= buf.length;\n  }\n\n  // Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n  // partial character, the character's bytes are buffered until the required\n  // number of bytes are available.\n  function utf8Text(buf, i) {\n    var total = utf8CheckIncomplete(this, buf, i);\n    if (!this.lastNeed) return buf.toString('utf8', i);\n    this.lastTotal = total;\n    var end = buf.length - (total - this.lastNeed);\n    buf.copy(this.lastChar, 0, end);\n    return buf.toString('utf8', i, end);\n  }\n\n  // For UTF-8, a replacement character is added when ending on a partial\n  // character.\n  function utf8End(buf) {\n    var r = buf && buf.length ? this.write(buf) : '';\n    if (this.lastNeed) return r + '\\uFFFD';\n    return r;\n  }\n\n  // UTF-16LE typically needs two bytes per character, but even if we have an even\n  // number of bytes available, we need to check if we end on a leading/high\n  // surrogate. In that case, we need to wait for the next two bytes in order to\n  // decode the last character properly.\n  function utf16Text(buf, i) {\n    if ((buf.length - i) % 2 === 0) {\n      var r = buf.toString('utf16le', i);\n      if (r) {\n        var c = r.charCodeAt(r.length - 1);\n        if (c >= 0xD800 && c <= 0xDBFF) {\n          this.lastNeed = 2;\n          this.lastTotal = 4;\n          this.lastChar[0] = buf[buf.length - 2];\n          this.lastChar[1] = buf[buf.length - 1];\n          return r.slice(0, -1);\n        }\n      }\n      return r;\n    }\n    this.lastNeed = 1;\n    this.lastTotal = 2;\n    this.lastChar[0] = buf[buf.length - 1];\n    return buf.toString('utf16le', i, buf.length - 1);\n  }\n\n  // For UTF-16LE we do not explicitly append special replacement characters if we\n  // end on a partial character, we simply let v8 handle that.\n  function utf16End(buf) {\n    var r = buf && buf.length ? this.write(buf) : '';\n    if (this.lastNeed) {\n      var end = this.lastTotal - this.lastNeed;\n      return r + this.lastChar.toString('utf16le', 0, end);\n    }\n    return r;\n  }\n\n  function base64Text(buf, i) {\n    var n = (buf.length - i) % 3;\n    if (n === 0) return buf.toString('base64', i);\n    this.lastNeed = 3 - n;\n    this.lastTotal = 3;\n    if (n === 1) {\n      this.lastChar[0] = buf[buf.length - 1];\n    } else {\n      this.lastChar[0] = buf[buf.length - 2];\n      this.lastChar[1] = buf[buf.length - 1];\n    }\n    return buf.toString('base64', i, buf.length - n);\n  }\n\n  function base64End(buf) {\n    var r = buf && buf.length ? this.write(buf) : '';\n    if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n    return r;\n  }\n\n  // Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\n  function simpleWrite(buf) {\n    return buf.toString(this.encoding);\n  }\n\n  function simpleEnd(buf) {\n    return buf && buf.length ? this.write(buf) : '';\n  }\n\n  /***/\n},\n/* 16 */\n/***/function (module, exports, __nested_webpack_require_160585__) {\n\n  \"use strict\";\n  // Copyright Joyent, Inc. and other Node contributors.\n  //\n  // Permission is hereby granted, free of charge, to any person obtaining a\n  // copy of this software and associated documentation files (the\n  // \"Software\"), to deal in the Software without restriction, including\n  // without limitation the rights to use, copy, modify, merge, publish,\n  // distribute, sublicense, and/or sell copies of the Software, and to permit\n  // persons to whom the Software is furnished to do so, subject to the\n  // following conditions:\n  //\n  // The above copyright notice and this permission notice shall be included\n  // in all copies or substantial portions of the Software.\n  //\n  // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n  // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n  // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n  // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n  // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n  // USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n  // a transform stream is a readable/writable stream where you do\n  // something with the data.  Sometimes it's called a \"filter\",\n  // but that's not a great name for it, since that implies a thing where\n  // some bits pass through, and others are simply ignored.  (That would\n  // be a valid example of a transform, of course.)\n  //\n  // While the output is causally related to the input, it's not a\n  // necessarily symmetric or synchronous transformation.  For example,\n  // a zlib stream might take multiple plain-text writes(), and then\n  // emit a single compressed chunk some time in the future.\n  //\n  // Here's how this works:\n  //\n  // The Transform stream has all the aspects of the readable and writable\n  // stream classes.  When you write(chunk), that calls _write(chunk,cb)\n  // internally, and returns false if there's a lot of pending writes\n  // buffered up.  When you call read(), that calls _read(n) until\n  // there's enough pending readable data buffered up.\n  //\n  // In a transform stream, the written data is placed in a buffer.  When\n  // _read(n) is called, it transforms the queued up data, calling the\n  // buffered _write cb's as it consumes chunks.  If consuming a single\n  // written chunk would result in multiple output chunks, then the first\n  // outputted bit calls the readcb, and subsequent chunks just go into\n  // the read buffer, and will cause it to emit 'readable' if necessary.\n  //\n  // This way, back-pressure is actually determined by the reading side,\n  // since _read has to be called to start processing a new chunk.  However,\n  // a pathological inflate type of transform can cause excessive buffering\n  // here.  For example, imagine a stream where every byte of input is\n  // interpreted as an integer from 0-255, and then results in that many\n  // bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n  // 1kb of data being output.  In this case, you could write a very small\n  // amount of input, and end up with a very large amount of output.  In\n  // such a pathological inflating mechanism, there'd be no way to tell\n  // the system to stop doing the transform.  A single 4MB write could\n  // cause the system to run out of memory.\n  //\n  // However, even in such a pathological case, only a single written chunk\n  // would be consumed, and then the rest would wait (un-transformed) until\n  // the results of the previous transformed chunk were consumed.\n\n\n  module.exports = Transform;\n\n  var Duplex = __nested_webpack_require_160585__(0);\n\n  /*<replacement>*/\n  var util = __nested_webpack_require_160585__(4);\n  util.inherits = __nested_webpack_require_160585__(2);\n  /*</replacement>*/\n\n  util.inherits(Transform, Duplex);\n\n  function afterTransform(er, data) {\n    var ts = this._transformState;\n    ts.transforming = false;\n\n    var cb = ts.writecb;\n\n    if (!cb) {\n      return this.emit('error', new Error('write callback called multiple times'));\n    }\n\n    ts.writechunk = null;\n    ts.writecb = null;\n\n    if (data != null) // single equals check for both `null` and `undefined`\n      this.push(data);\n\n    cb(er);\n\n    var rs = this._readableState;\n    rs.reading = false;\n    if (rs.needReadable || rs.length < rs.highWaterMark) {\n      this._read(rs.highWaterMark);\n    }\n  }\n\n  function Transform(options) {\n    if (!(this instanceof Transform)) return new Transform(options);\n\n    Duplex.call(this, options);\n\n    this._transformState = {\n      afterTransform: afterTransform.bind(this),\n      needTransform: false,\n      transforming: false,\n      writecb: null,\n      writechunk: null,\n      writeencoding: null\n    };\n\n    // start out asking for a readable event once data is transformed.\n    this._readableState.needReadable = true;\n\n    // we have implemented the _read method, and done the other things\n    // that Readable wants before the first _read call, so unset the\n    // sync guard flag.\n    this._readableState.sync = false;\n\n    if (options) {\n      if (typeof options.transform === 'function') this._transform = options.transform;\n\n      if (typeof options.flush === 'function') this._flush = options.flush;\n    }\n\n    // When the writable side finishes, then flush out anything remaining.\n    this.on('prefinish', prefinish);\n  }\n\n  function prefinish() {\n    var _this = this;\n\n    if (typeof this._flush === 'function') {\n      this._flush(function (er, data) {\n        done(_this, er, data);\n      });\n    } else {\n      done(this, null, null);\n    }\n  }\n\n  Transform.prototype.push = function (chunk, encoding) {\n    this._transformState.needTransform = false;\n    return Duplex.prototype.push.call(this, chunk, encoding);\n  };\n\n  // This is the part where you do stuff!\n  // override this function in implementation classes.\n  // 'chunk' is an input chunk.\n  //\n  // Call `push(newChunk)` to pass along transformed output\n  // to the readable side.  You may call 'push' zero or more times.\n  //\n  // Call `cb(err)` when you are done with this chunk.  If you pass\n  // an error, then that'll put the hurt on the whole operation.  If you\n  // never call cb(), then you'll never get another chunk.\n  Transform.prototype._transform = function (chunk, encoding, cb) {\n    throw new Error('_transform() is not implemented');\n  };\n\n  Transform.prototype._write = function (chunk, encoding, cb) {\n    var ts = this._transformState;\n    ts.writecb = cb;\n    ts.writechunk = chunk;\n    ts.writeencoding = encoding;\n    if (!ts.transforming) {\n      var rs = this._readableState;\n      if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n    }\n  };\n\n  // Doesn't matter what the args are here.\n  // _transform does all the work.\n  // That we got here means that the readable side wants more data.\n  Transform.prototype._read = function (n) {\n    var ts = this._transformState;\n\n    if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n      ts.transforming = true;\n      this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n    } else {\n      // mark that we need a transform, so that any data that comes in\n      // will get processed, now that we've asked for it.\n      ts.needTransform = true;\n    }\n  };\n\n  Transform.prototype._destroy = function (err, cb) {\n    var _this2 = this;\n\n    Duplex.prototype._destroy.call(this, err, function (err2) {\n      cb(err2);\n      _this2.emit('close');\n    });\n  };\n\n  function done(stream, er, data) {\n    if (er) return stream.emit('error', er);\n\n    if (data != null) // single equals check for both `null` and `undefined`\n      stream.push(data);\n\n    // if there's nothing in the write buffer, then that means\n    // that nothing more will ever be provided\n    if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');\n\n    if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');\n\n    return stream.push(null);\n  }\n\n  /***/\n},\n/* 17 */\n/***/function (module, exports, __nested_webpack_require_168745__) {\n\n  //module.exports = require('./lib/index.js').default\n  window.BufferQueueNode = __nested_webpack_require_168745__(18).default;\n\n  /***/\n},\n/* 18 */\n/***/function (module, exports, __nested_webpack_require_168937__) {\n\n  \"use strict\";\n  /* WEBPACK VAR INJECTION */\n  (function (process, Buffer) {\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var _createClass = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n      };\n    }();\n\n    var _audioContext = __nested_webpack_require_168937__(21);\n\n    var _audioContext2 = _interopRequireDefault(_audioContext);\n\n    var _extend = __nested_webpack_require_168937__(22);\n\n    var _extend2 = _interopRequireDefault(_extend);\n\n    var _stream = __nested_webpack_require_168937__(23);\n\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n\n    function _classCallCheck(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    }\n\n    function _possibleConstructorReturn(self, call) {\n      if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      }return call && ((typeof call === 'undefined' ? 'undefined' : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n    }\n\n    function _inherits(subClass, superClass) {\n      if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n      }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n    }\n\n    /**\r\n     * A source node that plays queued PCM buffers.\r\n     *\r\n     * When no more data is queued, this node emits silence.\r\n     *\r\n     * The queued buffers are played at the frequency of the audio context.\r\n     *\r\n     * Multiple channels are supported, both interleaved and\r\n     * non interleaved layouts. Every single buffer queued is expected\r\n     * to contain the same amount of samples for every channel. Therefore a single\r\n     * frame may not be split across mutliple buffers.\r\n     *\r\n     * When in object mode, the input format is determined automatically.\r\n     * Supported formats are Float32Array, Int16Array and AudioBuffer.\r\n     * When not in object mode, the input format has to be specified manually by\r\n     * passing {@link BufferQueueNode#Float32Array} or {@link BufferQueueNode#Int16Array}\r\n     * to the constructor.\r\n     *\r\n     * Note that this does only implement a small part of the AudioNode interface.\r\n     * This node will disconnect automatically when its stream is closed.\r\n     *\r\n     * @extends Writable\r\n     */\n    var BufferQueueNode = function (_Writable) {\n      _inherits(BufferQueueNode, _Writable);\n\n      /**\r\n       * Create a BufferQueueNode.\r\n       * @param {Object} [options] - Options passed to the Writable constructor.\r\n       * @param {AudioBufferFormat} [options.dataType=BufferQueueNode.Float32Array] -\r\n       *    Format of input data when not in objectMode.\r\n       * @param {boolean} [options.interleaved=true] - Whether the input data is interleaved\r\n       * @param {number} [options.channels=1] - Number of channels\r\n       * @param {number} [options.bufferSize=0] - Buffer size, must be a power of two\r\n       *    between 256 and 16284. May also be 0 in which case the implementation will\r\n       *    pick a good value (recommanded).\r\n       * @param {AudioContext} [options.audioContext=require('audio-context')()] - The audio context\r\n       */\n      function BufferQueueNode(options) {\n        _classCallCheck(this, BufferQueueNode);\n\n        var _this = _possibleConstructorReturn(this, (BufferQueueNode.__proto__ || Object.getPrototypeOf(BufferQueueNode)).call(this, options));\n\n        options = (0, _extend2.default)({\n          dataType: Float32ArrayBuffer,\n          objectMode: false,\n          interleaved: true,\n          channels: 1,\n          bufferSize: 0\n        }, options);\n        if (!options.audioContext) {\n          options.audioContext = (0, _audioContext2.default)();\n        }\n        _this._dataType = options.dataType;\n        _this._objectMode = options.objectMode;\n        _this._interleaved = options.interleaved;\n        var channels = _this._channels = options.channels;\n        var bufferSize = options.bufferSize;\n        var audioContext = options.audioContext;\n        // const sampleRate = audioContext.sampleRate\n\n        // Queue that holds all future audio buffer\n        _this._queue = [];\n\n        // Create a script processor node that will inject our samples\n        var processorNode = audioContext.createScriptProcessor(bufferSize, 0, channels);\n        // Create a buffer source that will power the script processor\n        // Note: This isn't strictly required, however some browsers are buggy\n        //var inputNode = audioContext.createBufferSource()\n        //// That source should be looping over a short, silent buffer\n        //inputNode.loop = true\n        //inputNode.onended = function() {\n        //    console.log(\"=================\");\n        //}\n\n        var shuttingDown = false;\n        var shutDown = false;\n        // The buffer which holds the current audio data\n        var currentBuffer = null;\n        // Offset into the current buffer\n        var currentBufferOffset;\n        processorNode.addEventListener('audioprocess', function (e) {\n          if (shutDown) {\n            // Already shut down\n            return;\n          }\n          var out = e.outputBuffer;\n          // Offset into the output buffer\n          var outOffset = 0;\n          // Try to fill the whole output buffer\n          while (outOffset < out.length) {\n            // If we don't have a current buffer but there are some in the queue\n            if (!currentBuffer && _this._queue.length > 0) {\n              // Then get the next queued buffer from the queue\n              currentBuffer = _this._queue.shift();\n              currentBufferOffset = 0;\n            }\n            // If we still don't have any data,\n            if (!currentBuffer) {\n              // then fill the rest of the output with silence\n              for (var channel = 0; channel < channels; channel++) {\n                out.getChannelData(channel).fill(0, outOffset);\n              }\n              // and shut down if requested\n              if (shuttingDown) {\n                shutDown = true;\n                process.nextTick(function () {\n                  return _this.emit('close');\n                });\n              }\n              break;\n            }\n            // Otherwise (we have data), copy as much as possible\n            var remainingOutput = out.length - outOffset;\n            var remainingInput = currentBuffer.length - currentBufferOffset;\n            var remaining = Math.min(remainingOutput, remainingInput);\n            // Do the actual copying\n            currentBuffer.copyTo(out, outOffset, currentBufferOffset, remaining);\n            // Increase offsets\n            currentBufferOffset += remaining;\n            outOffset += remaining;\n            // Check if there is still data remaining in the current buffer\n            if (currentBufferOffset >= currentBuffer.length) {\n              currentBuffer = null;\n            }\n          }\n        });\n        // Connect the input node to the script processor\n        // inputNode.connect(processorNode)\n        // inputNode.start()\n\n        // Store node for later connecting\n        _this._node = processorNode;\n\n        _this.on('finish', function () {\n          shuttingDown = true;\n        });\n        _this.on('close', function () {\n          processorNode.disconnect();\n        });\n        return _this;\n      }\n\n      /**\r\n       * Connect this node to another node.\r\n       * @see https://developer.mozilla.org/en-US/docs/Web/API/AudioNode/connect(AudioNode)\r\n       */\n\n      _createClass(BufferQueueNode, [{\n        key: 'connect',\n        value: function connect() {\n          return this._node.connect.apply(this._node, arguments);\n        }\n\n        /**\r\n         * Disconnect this node from another node.\r\n         * @see https://developer.mozilla.org/en-US/docs/Web/API/AudioNode/disconnect\r\n         */\n\n      }, {\n        key: 'disconnect',\n        value: function disconnect() {\n          return this._node.disconnect.apply(this._node, arguments);\n        }\n      }, {\n        key: '_write',\n        value: function _write(chunk, encoding, callback) {\n          if (this._objectMode) {\n            if (chunk instanceof Float32Array) {\n              chunk = new Float32ArrayBuffer(this._channels, this._interleaved, chunk);\n            } else if (chunk instanceof Int16Array) {\n              chunk = new Int16ArrayBuffer(this._channels, this._interleaved, chunk);\n            } else {\n              chunk = new AudioBufferBuffer(chunk);\n            }\n          } else {\n            chunk = new this._dataType(this._channels, this._interleaved, chunk);\n          }\n          this._queue.push(chunk);\n          callback(null);\n        }\n      }]);\n\n      return BufferQueueNode;\n    }(_stream.Writable);\n\n    /**\r\n     * @interface AudioBufferFormat\r\n     */\n\n    /**\r\n     * Copy samples from this buffer to the target AudioBuffer.\r\n     *\r\n     * @function\r\n     * @name AudioBufferFormat#copyTo\r\n     * @param {AudioBuffer} to - The target audio buffer\r\n     * @param {number} toOffset - Offset into the target audio buffer\r\n     * @param {number} fromOffset - Offset into this buffer\r\n     * @param {number} length - Amount of sample-frames to copy\r\n     */\n\n    /** @implements AudioBufferFormat */\n\n    var AudioBufferBuffer = function () {\n      function AudioBufferBuffer(it) {\n        _classCallCheck(this, AudioBufferBuffer);\n\n        this._it = it;\n      }\n\n      _createClass(AudioBufferBuffer, [{\n        key: 'copyTo',\n        value: function copyTo(to, toOffset, fromOffset, length) {\n          for (var channel = 0; channel < this._it.numberOfChannels; channel++) {\n            var source = this._it.getChannelData(channel);\n            to.copyToChannel(source.subarray(fromOffset, fromOffset + length), channel, toOffset);\n          }\n        }\n      }, {\n        key: 'length',\n        get: function get() {\n          return this._it.length;\n        }\n      }]);\n\n      return AudioBufferBuffer;\n    }();\n\n    var TypedArrayBuffer = function () {\n      function TypedArrayBuffer(channels, interleaved, it) {\n        _classCallCheck(this, TypedArrayBuffer);\n\n        this._channels = channels;\n        this._interleaved = interleaved;\n        this._it = it;\n      }\n\n      _createClass(TypedArrayBuffer, [{\n        key: '_get',\n\n        /**\r\n         * Return the sample at the specified offset\r\n         * @param {number} i - The offset\r\n         * @returns {number} The sample\r\n         */\n        value: function _get(i) {\n          return this._it[i];\n        }\n\n        /**\r\n         * Copy some samples to the specified array.\r\n         * @param {Float32Array} to - The target array\r\n         * @param {number} toOffset - Offset into the target array\r\n         * @param {number} fromOffset - Offset into this array\r\n         * @param {number} length - Amount of samples to copy\r\n         */\n\n      }, {\n        key: '_bulkCopy',\n        value: function _bulkCopy(to, toOffset, fromOffset, length) {\n          to.set(this._it.subarray(fromOffset, fromOffset + length), toOffset);\n        }\n      }, {\n        key: 'copyTo',\n        value: function copyTo(to, toOffset, fromOffset, length) {\n          for (var channel = 0; channel < this._channels; channel++) {\n            var channelData = to.getChannelData(channel);\n            if (this._interleaved && this._channels > 1) {\n              // For interleaved data we have to copy every sample on its own\n              for (var i = 0; i < length; i++) {\n                var actualFromOffset = (fromOffset + i) * this._channels + channel;\n                channelData[toOffset + i] = this._get(actualFromOffset);\n              }\n            } else {\n              // Otherwise we can do a bulk copy\n              var _actualFromOffset = this.length * channel + fromOffset;\n              this._bulkCopy(channelData, toOffset, _actualFromOffset, length);\n            }\n          }\n        }\n      }, {\n        key: 'length',\n        get: function get() {\n          return this._it.length / this._channels;\n        }\n      }]);\n\n      return TypedArrayBuffer;\n    }();\n\n    /** @implements AudioBufferFormat */\n\n    var Float32ArrayBuffer = function (_TypedArrayBuffer) {\n      _inherits(Float32ArrayBuffer, _TypedArrayBuffer);\n\n      function Float32ArrayBuffer(channels, interleaved, it) {\n        _classCallCheck(this, Float32ArrayBuffer);\n\n        if (it instanceof Buffer) {\n          it = new Float32Array(it.buffer, it.byteOffset, it.byteLength / 4);\n        } else if (!(it instanceof Float32Array)) {\n          throw new Error('Unsupported buffer type: ' + it);\n        }\n        return _possibleConstructorReturn(this, (Float32ArrayBuffer.__proto__ || Object.getPrototypeOf(Float32ArrayBuffer)).call(this, channels, interleaved, it));\n      }\n\n      return Float32ArrayBuffer;\n    }(TypedArrayBuffer);\n\n    /** @implements AudioBufferFormat */\n\n    var Int16ArrayBuffer = function (_TypedArrayBuffer2) {\n      _inherits(Int16ArrayBuffer, _TypedArrayBuffer2);\n\n      function Int16ArrayBuffer(channels, interleaved, it) {\n        _classCallCheck(this, Int16ArrayBuffer);\n\n        if (it instanceof Buffer) {\n          it = new Int16Array(it.buffer, it.byteOffset, it.byteLength / 2);\n        } else if (!(it instanceof Int16Array)) {\n          throw new Error('Unsupported buffer type: ' + it);\n        }\n        return _possibleConstructorReturn(this, (Int16ArrayBuffer.__proto__ || Object.getPrototypeOf(Int16ArrayBuffer)).call(this, channels, interleaved, it));\n      }\n\n      /** @see TypedArrayBuffer#_get */\n\n      _createClass(Int16ArrayBuffer, [{\n        key: '_get',\n        value: function _get(i) {\n          var val = this._it[i];\n          return val / ((1 << 15) - (val > 0 ? 1 : 0));\n        }\n\n        /** @see TypedArrayBuffer#_bulkCopy */\n\n      }, {\n        key: '_bulkCopy',\n        value: function _bulkCopy(to, toOffset, fromOffset, length) {\n          for (var i = 0; i < length; i++) {\n            to[toOffset + i] = this._get(fromOffset + i);\n          }\n        }\n      }]);\n\n      return Int16ArrayBuffer;\n    }(TypedArrayBuffer);\n\n    BufferQueueNode.AudioBuffer = AudioBufferBuffer;\n    BufferQueueNode.Float32Array = Float32ArrayBuffer;\n    BufferQueueNode.Int16Array = Int16ArrayBuffer;\n    exports.default = BufferQueueNode;\n    /* WEBPACK VAR INJECTION */\n  }).call(exports, __nested_webpack_require_168937__(3), __nested_webpack_require_168937__(7).Buffer);\n\n  /***/\n},\n/* 19 */\n/***/function (module, exports, __webpack_require__) {\n\n  \"use strict\";\n\n  exports.byteLength = byteLength;\n  exports.toByteArray = toByteArray;\n  exports.fromByteArray = fromByteArray;\n\n  var lookup = [];\n  var revLookup = [];\n  var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\n\n  var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n  for (var i = 0, len = code.length; i < len; ++i) {\n    lookup[i] = code[i];\n    revLookup[code.charCodeAt(i)] = i;\n  }\n\n  // Support decoding URL-safe base64 strings, as Node.js does.\n  // See: https://en.wikipedia.org/wiki/Base64#URL_applications\n  revLookup['-'.charCodeAt(0)] = 62;\n  revLookup['_'.charCodeAt(0)] = 63;\n\n  function getLens(b64) {\n    var len = b64.length;\n\n    if (len % 4 > 0) {\n      throw new Error('Invalid string. Length must be a multiple of 4');\n    }\n\n    // Trim off extra bytes after placeholder bytes are found\n    // See: https://github.com/beatgammit/base64-js/issues/42\n    var validLen = b64.indexOf('=');\n    if (validLen === -1) validLen = len;\n\n    var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;\n\n    return [validLen, placeHoldersLen];\n  }\n\n  // base64 is 4/3 + up to two characters of the original data\n  function byteLength(b64) {\n    var lens = getLens(b64);\n    var validLen = lens[0];\n    var placeHoldersLen = lens[1];\n    return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n  }\n\n  function _byteLength(b64, validLen, placeHoldersLen) {\n    return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n  }\n\n  function toByteArray(b64) {\n    var tmp;\n    var lens = getLens(b64);\n    var validLen = lens[0];\n    var placeHoldersLen = lens[1];\n\n    var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));\n\n    var curByte = 0;\n\n    // if there are placeholders, only get up to the last complete 4 chars\n    var len = placeHoldersLen > 0 ? validLen - 4 : validLen;\n\n    for (var i = 0; i < len; i += 4) {\n      tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];\n      arr[curByte++] = tmp >> 16 & 0xFF;\n      arr[curByte++] = tmp >> 8 & 0xFF;\n      arr[curByte++] = tmp & 0xFF;\n    }\n\n    if (placeHoldersLen === 2) {\n      tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;\n      arr[curByte++] = tmp & 0xFF;\n    }\n\n    if (placeHoldersLen === 1) {\n      tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;\n      arr[curByte++] = tmp >> 8 & 0xFF;\n      arr[curByte++] = tmp & 0xFF;\n    }\n\n    return arr;\n  }\n\n  function tripletToBase64(num) {\n    return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];\n  }\n\n  function encodeChunk(uint8, start, end) {\n    var tmp;\n    var output = [];\n    for (var i = start; i < end; i += 3) {\n      tmp = (uint8[i] << 16 & 0xFF0000) + (uint8[i + 1] << 8 & 0xFF00) + (uint8[i + 2] & 0xFF);\n      output.push(tripletToBase64(tmp));\n    }\n    return output.join('');\n  }\n\n  function fromByteArray(uint8) {\n    var tmp;\n    var len = uint8.length;\n    var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n    var parts = [];\n    var maxChunkLength = 16383; // must be multiple of 3\n\n    // go through the array every three bytes, we'll deal with trailing stuff later\n    for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n      parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));\n    }\n\n    // pad the end with zeros, but make sure to not forget the extra bytes\n    if (extraBytes === 1) {\n      tmp = uint8[len - 1];\n      parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 0x3F] + '==');\n    } else if (extraBytes === 2) {\n      tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n      parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 0x3F] + lookup[tmp << 2 & 0x3F] + '=');\n    }\n\n    return parts.join('');\n  }\n\n  /***/\n},\n/* 20 */\n/***/function (module, exports) {\n\n  exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n    var e, m;\n    var eLen = nBytes * 8 - mLen - 1;\n    var eMax = (1 << eLen) - 1;\n    var eBias = eMax >> 1;\n    var nBits = -7;\n    var i = isLE ? nBytes - 1 : 0;\n    var d = isLE ? -1 : 1;\n    var s = buffer[offset + i];\n\n    i += d;\n\n    e = s & (1 << -nBits) - 1;\n    s >>= -nBits;\n    nBits += eLen;\n    for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n    m = e & (1 << -nBits) - 1;\n    e >>= -nBits;\n    nBits += mLen;\n    for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n    if (e === 0) {\n      e = 1 - eBias;\n    } else if (e === eMax) {\n      return m ? NaN : (s ? -1 : 1) * Infinity;\n    } else {\n      m = m + Math.pow(2, mLen);\n      e = e - eBias;\n    }\n    return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n  };\n\n  exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n    var e, m, c;\n    var eLen = nBytes * 8 - mLen - 1;\n    var eMax = (1 << eLen) - 1;\n    var eBias = eMax >> 1;\n    var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n    var i = isLE ? 0 : nBytes - 1;\n    var d = isLE ? 1 : -1;\n    var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n\n    value = Math.abs(value);\n\n    if (isNaN(value) || value === Infinity) {\n      m = isNaN(value) ? 1 : 0;\n      e = eMax;\n    } else {\n      e = Math.floor(Math.log(value) / Math.LN2);\n      if (value * (c = Math.pow(2, -e)) < 1) {\n        e--;\n        c *= 2;\n      }\n      if (e + eBias >= 1) {\n        value += rt / c;\n      } else {\n        value += rt * Math.pow(2, 1 - eBias);\n      }\n      if (value * c >= 2) {\n        e++;\n        c /= 2;\n      }\n\n      if (e + eBias >= eMax) {\n        m = 0;\n        e = eMax;\n      } else if (e + eBias >= 1) {\n        m = (value * c - 1) * Math.pow(2, mLen);\n        e = e + eBias;\n      } else {\n        m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n        e = 0;\n      }\n    }\n\n    for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n    e = e << mLen | m;\n    eLen += mLen;\n    for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n    buffer[offset + i - d] |= s * 128;\n  };\n\n  /***/\n},\n/* 21 */\n/***/function (module, exports, __webpack_require__) {\n\n  \"use strict\";\n\n  var cache = {};\n\n  module.exports = function getContext(options) {\n    if (typeof window === 'undefined') return null;\n\n    var OfflineContext = window.OfflineAudioContext || window.webkitOfflineAudioContext;\n    var Context = window.AudioContext || window.webkitAudioContext;\n\n    if (!Context) return null;\n\n    if (typeof options === 'number') {\n      options = { sampleRate: options };\n    }\n\n    var sampleRate = options && options.sampleRate;\n\n    if (options && options.offline) {\n      if (!OfflineContext) return null;\n\n      return new OfflineContext(options.channels || 2, options.length, sampleRate || 44100);\n    }\n\n    //cache by sampleRate, rather strong guess\n    var ctx = cache[sampleRate];\n\n    if (ctx) return ctx;\n\n    //several versions of firefox have issues with the\n    //constructor argument\n    //see: https://bugzilla.mozilla.org/show_bug.cgi?id=1361475\n    try {\n      ctx = new Context(options);\n    } catch (err) {\n      ctx = new Context();\n    }\n    cache[ctx.sampleRate] = cache[sampleRate] = ctx;\n\n    return ctx;\n  };\n\n  /***/\n},\n/* 22 */\n/***/function (module, exports, __webpack_require__) {\n\n  \"use strict\";\n\n  var hasOwn = Object.prototype.hasOwnProperty;\n  var toStr = Object.prototype.toString;\n  var defineProperty = Object.defineProperty;\n  var gOPD = Object.getOwnPropertyDescriptor;\n\n  var isArray = function isArray(arr) {\n    if (typeof Array.isArray === 'function') {\n      return Array.isArray(arr);\n    }\n\n    return toStr.call(arr) === '[object Array]';\n  };\n\n  var isPlainObject = function isPlainObject(obj) {\n    if (!obj || toStr.call(obj) !== '[object Object]') {\n      return false;\n    }\n\n    var hasOwnConstructor = hasOwn.call(obj, 'constructor');\n    var hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n    // Not own constructor property must be Object\n    if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n      return false;\n    }\n\n    // Own properties are enumerated firstly, so to speed up,\n    // if last one is own, then all properties are own.\n    var key;\n    for (key in obj) {/**/}\n\n    return typeof key === 'undefined' || hasOwn.call(obj, key);\n  };\n\n  // If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\n  var setProperty = function setProperty(target, options) {\n    if (defineProperty && options.name === '__proto__') {\n      defineProperty(target, options.name, {\n        enumerable: true,\n        configurable: true,\n        value: options.newValue,\n        writable: true\n      });\n    } else {\n      target[options.name] = options.newValue;\n    }\n  };\n\n  // Return undefined instead of __proto__ if '__proto__' is not an own property\n  var getProperty = function getProperty(obj, name) {\n    if (name === '__proto__') {\n      if (!hasOwn.call(obj, name)) {\n        return void 0;\n      } else if (gOPD) {\n        // In early versions of node, obj['__proto__'] is buggy when obj has\n        // __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n        return gOPD(obj, name).value;\n      }\n    }\n\n    return obj[name];\n  };\n\n  module.exports = function extend() {\n    var options, name, src, copy, copyIsArray, clone;\n    var target = arguments[0];\n    var i = 1;\n    var length = arguments.length;\n    var deep = false;\n\n    // Handle a deep copy situation\n    if (typeof target === 'boolean') {\n      deep = target;\n      target = arguments[1] || {};\n      // skip the boolean and the target\n      i = 2;\n    }\n    if (target == null || (typeof target === 'undefined' ? 'undefined' : _typeof(target)) !== 'object' && typeof target !== 'function') {\n      target = {};\n    }\n\n    for (; i < length; ++i) {\n      options = arguments[i];\n      // Only deal with non-null/undefined values\n      if (options != null) {\n        // Extend the base object\n        for (name in options) {\n          src = getProperty(target, name);\n          copy = getProperty(options, name);\n\n          // Prevent never-ending loop\n          if (target !== copy) {\n            // Recurse if we're merging plain objects or arrays\n            if (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n              if (copyIsArray) {\n                copyIsArray = false;\n                clone = src && isArray(src) ? src : [];\n              } else {\n                clone = src && isPlainObject(src) ? src : {};\n              }\n\n              // Never move original objects, clone them\n              setProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n              // Don't bring in undefined values\n            } else if (typeof copy !== 'undefined') {\n              setProperty(target, { name: name, newValue: copy });\n            }\n          }\n        }\n      }\n    }\n\n    // Return the modified object\n    return target;\n  };\n\n  /***/\n},\n/* 23 */\n/***/function (module, exports, __nested_webpack_require_195703__) {\n\n  // Copyright Joyent, Inc. and other Node contributors.\n  //\n  // Permission is hereby granted, free of charge, to any person obtaining a\n  // copy of this software and associated documentation files (the\n  // \"Software\"), to deal in the Software without restriction, including\n  // without limitation the rights to use, copy, modify, merge, publish,\n  // distribute, sublicense, and/or sell copies of the Software, and to permit\n  // persons to whom the Software is furnished to do so, subject to the\n  // following conditions:\n  //\n  // The above copyright notice and this permission notice shall be included\n  // in all copies or substantial portions of the Software.\n  //\n  // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n  // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n  // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n  // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n  // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n  // USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n  module.exports = Stream;\n\n  var EE = __nested_webpack_require_195703__(8).EventEmitter;\n  var inherits = __nested_webpack_require_195703__(2);\n\n  inherits(Stream, EE);\n  Stream.Readable = __nested_webpack_require_195703__(9);\n  Stream.Writable = __nested_webpack_require_195703__(31);\n  Stream.Duplex = __nested_webpack_require_195703__(32);\n  Stream.Transform = __nested_webpack_require_195703__(33);\n  Stream.PassThrough = __nested_webpack_require_195703__(34);\n\n  // Backwards-compat with node 0.4.x\n  Stream.Stream = Stream;\n\n  // old-style streams.  Note that the pipe method (the only relevant\n  // part of this class) is overridden in the Readable class.\n\n  function Stream() {\n    EE.call(this);\n  }\n\n  Stream.prototype.pipe = function (dest, options) {\n    var source = this;\n\n    function ondata(chunk) {\n      if (dest.writable) {\n        if (false === dest.write(chunk) && source.pause) {\n          source.pause();\n        }\n      }\n    }\n\n    source.on('data', ondata);\n\n    function ondrain() {\n      if (source.readable && source.resume) {\n        source.resume();\n      }\n    }\n\n    dest.on('drain', ondrain);\n\n    // If the 'end' option is not supplied, dest.end() will be called when\n    // source gets the 'end' or 'close' events.  Only dest.end() once.\n    if (!dest._isStdio && (!options || options.end !== false)) {\n      source.on('end', onend);\n      source.on('close', onclose);\n    }\n\n    var didOnEnd = false;\n    function onend() {\n      if (didOnEnd) return;\n      didOnEnd = true;\n\n      dest.end();\n    }\n\n    function onclose() {\n      if (didOnEnd) return;\n      didOnEnd = true;\n\n      if (typeof dest.destroy === 'function') dest.destroy();\n    }\n\n    // don't leave dangling pipes when there are errors.\n    function onerror(er) {\n      cleanup();\n      if (EE.listenerCount(this, 'error') === 0) {\n        throw er; // Unhandled stream error in pipe.\n      }\n    }\n\n    source.on('error', onerror);\n    dest.on('error', onerror);\n\n    // remove all the event listeners that were added.\n    function cleanup() {\n      source.removeListener('data', ondata);\n      dest.removeListener('drain', ondrain);\n\n      source.removeListener('end', onend);\n      source.removeListener('close', onclose);\n\n      source.removeListener('error', onerror);\n      dest.removeListener('error', onerror);\n\n      source.removeListener('end', cleanup);\n      source.removeListener('close', cleanup);\n\n      dest.removeListener('close', cleanup);\n    }\n\n    source.on('end', cleanup);\n    source.on('close', cleanup);\n\n    dest.on('close', cleanup);\n\n    dest.emit('pipe', source);\n\n    // Allow for unix-like usage: A.pipe(B).pipe(C)\n    return dest;\n  };\n\n  /***/\n},\n/* 24 */\n/***/function (module, exports) {\n\n  /* (ignored) */\n\n  /***/},\n/* 25 */\n/***/function (module, exports, __nested_webpack_require_199602__) {\n\n  \"use strict\";\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  var Buffer = __nested_webpack_require_199602__(6).Buffer;\n  var util = __nested_webpack_require_199602__(26);\n\n  function copyBuffer(src, target, offset) {\n    src.copy(target, offset);\n  }\n\n  module.exports = function () {\n    function BufferList() {\n      _classCallCheck(this, BufferList);\n\n      this.head = null;\n      this.tail = null;\n      this.length = 0;\n    }\n\n    BufferList.prototype.push = function push(v) {\n      var entry = { data: v, next: null };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    };\n\n    BufferList.prototype.unshift = function unshift(v) {\n      var entry = { data: v, next: this.head };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    };\n\n    BufferList.prototype.shift = function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    };\n\n    BufferList.prototype.clear = function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    };\n\n    BufferList.prototype.join = function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n      while (p = p.next) {\n        ret += s + p.data;\n      }return ret;\n    };\n\n    BufferList.prototype.concat = function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      if (this.length === 1) return this.head.data;\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n      return ret;\n    };\n\n    return BufferList;\n  }();\n\n  if (util && util.inspect && util.inspect.custom) {\n    module.exports.prototype[util.inspect.custom] = function () {\n      var obj = util.inspect({ length: this.length });\n      return this.constructor.name + ' ' + obj;\n    };\n  }\n\n  /***/\n},\n/* 26 */\n/***/function (module, exports) {\n\n  /* (ignored) */\n\n  /***/},\n/* 27 */\n/***/function (module, exports, __nested_webpack_require_201968__) {\n\n  /* WEBPACK VAR INJECTION */(function (global) {\n    var scope = typeof global !== \"undefined\" && global || typeof self !== \"undefined\" && self || window;\n    var apply = Function.prototype.apply;\n\n    // DOM APIs, for completeness\n\n    exports.setTimeout = function () {\n      return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n    };\n    exports.setInterval = function () {\n      return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n    };\n    exports.clearTimeout = exports.clearInterval = function (timeout) {\n      if (timeout) {\n        timeout.close();\n      }\n    };\n\n    function Timeout(id, clearFn) {\n      this._id = id;\n      this._clearFn = clearFn;\n    }\n    Timeout.prototype.unref = Timeout.prototype.ref = function () {};\n    Timeout.prototype.close = function () {\n      this._clearFn.call(scope, this._id);\n    };\n\n    // Does not start the time, just sets up the members needed.\n    exports.enroll = function (item, msecs) {\n      clearTimeout(item._idleTimeoutId);\n      item._idleTimeout = msecs;\n    };\n\n    exports.unenroll = function (item) {\n      clearTimeout(item._idleTimeoutId);\n      item._idleTimeout = -1;\n    };\n\n    exports._unrefActive = exports.active = function (item) {\n      clearTimeout(item._idleTimeoutId);\n\n      var msecs = item._idleTimeout;\n      if (msecs >= 0) {\n        item._idleTimeoutId = setTimeout(function onTimeout() {\n          if (item._onTimeout) item._onTimeout();\n        }, msecs);\n      }\n    };\n\n    // setimmediate attaches itself to the global object\n    __nested_webpack_require_201968__(28);\n    // On some exotic environments, it's not clear which object `setimmediate` was\n    // able to install onto.  Search each possibility in the same order as the\n    // `setimmediate` library.\n    exports.setImmediate = typeof self !== \"undefined\" && self.setImmediate || typeof global !== \"undefined\" && global.setImmediate || this && this.setImmediate;\n    exports.clearImmediate = typeof self !== \"undefined\" && self.clearImmediate || typeof global !== \"undefined\" && global.clearImmediate || this && this.clearImmediate;\n\n    /* WEBPACK VAR INJECTION */\n  }).call(exports, __nested_webpack_require_201968__(1));\n\n  /***/\n},\n/* 28 */\n/***/function (module, exports, __nested_webpack_require_204246__) {\n\n  /* WEBPACK VAR INJECTION */(function (global, process) {\n    (function (global, undefined) {\n      \"use strict\";\n\n      if (global.setImmediate) {\n        return;\n      }\n\n      var nextHandle = 1; // Spec says greater than zero\n      var tasksByHandle = {};\n      var currentlyRunningATask = false;\n      var doc = global.document;\n      var registerImmediate;\n\n      function setImmediate(callback) {\n        // Callback can either be a function or a string\n        if (typeof callback !== \"function\") {\n          callback = new Function(\"\" + callback);\n        }\n        // Copy function arguments\n        var args = new Array(arguments.length - 1);\n        for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n        }\n        // Store and register the task\n        var task = { callback: callback, args: args };\n        tasksByHandle[nextHandle] = task;\n        registerImmediate(nextHandle);\n        return nextHandle++;\n      }\n\n      function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n      }\n\n      function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n          case 0:\n            callback();\n            break;\n          case 1:\n            callback(args[0]);\n            break;\n          case 2:\n            callback(args[0], args[1]);\n            break;\n          case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n          default:\n            callback.apply(undefined, args);\n            break;\n        }\n      }\n\n      function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n          // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n          // \"too much recursion\" error.\n          setTimeout(runIfPresent, 0, handle);\n        } else {\n          var task = tasksByHandle[handle];\n          if (task) {\n            currentlyRunningATask = true;\n            try {\n              run(task);\n            } finally {\n              clearImmediate(handle);\n              currentlyRunningATask = false;\n            }\n          }\n        }\n      }\n\n      function installNextTickImplementation() {\n        registerImmediate = function registerImmediate(handle) {\n          process.nextTick(function () {\n            runIfPresent(handle);\n          });\n        };\n      }\n\n      function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n          var postMessageIsAsynchronous = true;\n          var oldOnMessage = global.onmessage;\n          global.onmessage = function () {\n            postMessageIsAsynchronous = false;\n          };\n          global.postMessage(\"\", \"*\");\n          global.onmessage = oldOnMessage;\n          return postMessageIsAsynchronous;\n        }\n      }\n\n      function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function onGlobalMessage(event) {\n          if (event.source === global && typeof event.data === \"string\" && event.data.indexOf(messagePrefix) === 0) {\n            runIfPresent(+event.data.slice(messagePrefix.length));\n          }\n        };\n\n        if (global.addEventListener) {\n          global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n          global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function registerImmediate(handle) {\n          global.postMessage(messagePrefix + handle, \"*\");\n        };\n      }\n\n      function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function (event) {\n          var handle = event.data;\n          runIfPresent(handle);\n        };\n\n        registerImmediate = function registerImmediate(handle) {\n          channel.port2.postMessage(handle);\n        };\n      }\n\n      function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function registerImmediate(handle) {\n          // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n          // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n          var script = doc.createElement(\"script\");\n          script.onreadystatechange = function () {\n            runIfPresent(handle);\n            script.onreadystatechange = null;\n            html.removeChild(script);\n            script = null;\n          };\n          html.appendChild(script);\n        };\n      }\n\n      function installSetTimeoutImplementation() {\n        registerImmediate = function registerImmediate(handle) {\n          setTimeout(runIfPresent, 0, handle);\n        };\n      }\n\n      // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n      var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n      attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n      // Don't get fooled by e.g. browserify environments.\n      if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n      } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n      } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n      } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n      } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n      }\n\n      attachTo.setImmediate = setImmediate;\n      attachTo.clearImmediate = clearImmediate;\n    })(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self);\n\n    /* WEBPACK VAR INJECTION */\n  }).call(exports, __nested_webpack_require_204246__(1), __nested_webpack_require_204246__(3));\n\n  /***/\n},\n/* 29 */\n/***/function (module, exports, __nested_webpack_require_211058__) {\n\n  /* WEBPACK VAR INJECTION */(function (global) {\n    /**\r\n     * Module exports.\r\n     */\n\n    module.exports = deprecate;\n\n    /**\r\n     * Mark that a method should not be used.\r\n     * Returns a modified function which warns once by default.\r\n     *\r\n     * If `localStorage.noDeprecation = true` is set, then it is a no-op.\r\n     *\r\n     * If `localStorage.throwDeprecation = true` is set, then deprecated functions\r\n     * will throw an Error when invoked.\r\n     *\r\n     * If `localStorage.traceDeprecation = true` is set, then deprecated functions\r\n     * will invoke `console.trace()` instead of `console.error()`.\r\n     *\r\n     * @param {Function} fn - the function to deprecate\r\n     * @param {String} msg - the string to print to the console when `fn` is invoked\r\n     * @returns {Function} a new \"deprecated\" version of `fn`\r\n     * @api public\r\n     */\n\n    function deprecate(fn, msg) {\n      if (config('noDeprecation')) {\n        return fn;\n      }\n\n      var warned = false;\n      function deprecated() {\n        if (!warned) {\n          if (config('throwDeprecation')) {\n            throw new Error(msg);\n          } else if (config('traceDeprecation')) {\n            console.trace(msg);\n          } else {\n            console.warn(msg);\n          }\n          warned = true;\n        }\n        return fn.apply(this, arguments);\n      }\n\n      return deprecated;\n    }\n\n    /**\r\n     * Checks `localStorage` for boolean values for the given `name`.\r\n     *\r\n     * @param {String} name\r\n     * @returns {Boolean}\r\n     * @api private\r\n     */\n\n    function config(name) {\n      // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n      try {\n        if (!global.localStorage) return false;\n      } catch (_) {\n        return false;\n      }\n      var val = global.localStorage[name];\n      if (null == val) return false;\n      return String(val).toLowerCase() === 'true';\n    }\n\n    /* WEBPACK VAR INJECTION */\n  }).call(exports, __nested_webpack_require_211058__(1));\n\n  /***/\n},\n/* 30 */\n/***/function (module, exports, __nested_webpack_require_213133__) {\n\n  \"use strict\";\n  // Copyright Joyent, Inc. and other Node contributors.\n  //\n  // Permission is hereby granted, free of charge, to any person obtaining a\n  // copy of this software and associated documentation files (the\n  // \"Software\"), to deal in the Software without restriction, including\n  // without limitation the rights to use, copy, modify, merge, publish,\n  // distribute, sublicense, and/or sell copies of the Software, and to permit\n  // persons to whom the Software is furnished to do so, subject to the\n  // following conditions:\n  //\n  // The above copyright notice and this permission notice shall be included\n  // in all copies or substantial portions of the Software.\n  //\n  // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n  // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n  // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n  // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n  // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n  // USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n  // a passthrough stream.\n  // basically just the most minimal sort of Transform stream.\n  // Every written chunk gets output as-is.\n\n\n  module.exports = PassThrough;\n\n  var Transform = __nested_webpack_require_213133__(16);\n\n  /*<replacement>*/\n  var util = __nested_webpack_require_213133__(4);\n  util.inherits = __nested_webpack_require_213133__(2);\n  /*</replacement>*/\n\n  util.inherits(PassThrough, Transform);\n\n  function PassThrough(options) {\n    if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n    Transform.call(this, options);\n  }\n\n  PassThrough.prototype._transform = function (chunk, encoding, cb) {\n    cb(null, chunk);\n  };\n\n  /***/\n},\n/* 31 */\n/***/function (module, exports, __nested_webpack_require_215020__) {\n\n  module.exports = __nested_webpack_require_215020__(10);\n\n  /***/\n},\n/* 32 */\n/***/function (module, exports, __nested_webpack_require_215141__) {\n\n  module.exports = __nested_webpack_require_215141__(0);\n\n  /***/\n},\n/* 33 */\n/***/function (module, exports, __nested_webpack_require_215261__) {\n\n  module.exports = __nested_webpack_require_215261__(9).Transform;\n\n  /***/\n},\n/* 34 */\n/***/function (module, exports, __nested_webpack_require_215391__) {\n\n  module.exports = __nested_webpack_require_215391__(9).PassThrough;\n\n  /***/\n}]\n/******/);\n\n//# sourceURL=webpack://zibox2-sdk/./src/lib/audionode.js?")},"./src/main.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", ({\n    value: true\n}));\n\nvar _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); // import Communicator from \'./communicator\';\n\n\nvar _socketClient = __webpack_require__(/*! ./socketClient */ "./src/socketClient.js");\n\nvar _socketClient2 = _interopRequireDefault(_socketClient);\n\nvar _utils = __webpack_require__(/*! ./utils/utils */ "./src/utils/utils.js");\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _logger = __webpack_require__(/*! ./utils/logger */ "./src/utils/logger.js");\n\nvar _logger2 = _interopRequireDefault(_logger);\n\nvar _MediaStreamRecorder = __webpack_require__(/*! ../public/javascripts/MediaStreamRecorder */ "./public/javascripts/MediaStreamRecorder.js");\n\nvar _MediaStreamRecorder2 = _interopRequireDefault(_MediaStreamRecorder);\n\nvar _axios = __webpack_require__(/*! axios */ "./node_modules/axios/index.js");\n\nvar _axios2 = _interopRequireDefault(_axios);\n\nvar _code = __webpack_require__(/*! ./utils/code */ "./src/utils/code.js");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nvar mediaRecorder = void 0;\n\nvar Zibox2 = function () {\n    function Zibox2() {\n        _classCallCheck(this, Zibox2);\n\n        // this.communicator = new Communicator(this);\n\n        this.ctx = new AudioContext();\n        this.src = this.ctx.createBufferSource();\n        this.audio = document.createElement("audio");\n        //this.recStatus = null;\n        this.recStatus = false; // 여기 수정\n        this.recFileName = null;\n        this.creatingMediaStream = false;\n        this.agent = navigator.userAgent.toLowerCase();\n        this.chromeUser = this.agent.indexOf("chrome") != -1;\n        this.micSelect = document.createElement("select");\n        this.micSelect.addEventListener(_code.DeviceEvent.CHANGE, function (e) {\n            _logger2.default.log("[마이크 선택값 변경]", e.target.value);\n            _logger2.default.log("[마이크 선택값 변경]", e.target.value);\n            Zibox2.instance.changeMicDevice();\n        });\n        this.constraints = null;\n        this.spkSelect = document.createElement("select");\n        this.spkSelect.addEventListener(_code.DeviceEvent.CHANGE, function (e) {\n            _logger2.default.log("[스피커 선택값 변경]", e.target.value);\n            Zibox2.instance.changeSpkDevice();\n        });\n        this.selectors = [this.micSelect, this.spkSelect];\n        // Player.instance = new Player(this);\n        Zibox2.instance = this;\n        _logger2.default.log("Zibox2 인스턴스 생성 완료");\n        _logger2.default.log("Zibox2 장치 초기화 시작");\n        this.deviceInit();\n        _logger2.default.log("Zibox2 장치 변경 체크 시작");\n        this.checkDeviceChange();\n    }\n    /**\r\n     *\r\n     * @param {String} inputFileName http전송 할 파일명\r\n     * @param {String} httpOutputUrl http업로드 받을 Url\r\n     */\n\n\n    _createClass(Zibox2, [{\n        key: "httpUpload",\n        value: async function httpUpload(inputFileName, httpOutputUrl) {\n            _logger2.default.log("[Zibox2 - httpUpload()]", inputFileName, httpOutputUrl);\n            var url = "https://192.168.1.41:8888/httpFileSend";\n            var data = JSON.stringify({\n                inputFileName: inputFileName,\n                httpOutputUrl: httpOutputUrl\n            });\n            var headers = {\n                "Content-type": "application/json"\n            };\n            var response = await _axios2.default.post(url, data, {\n                headers: headers\n            });\n            _logger2.default.log("axios 리스폰즈:", response);\n        }\n\n        /**\r\n         *\r\n         * @param {String} host Ftp 주소\r\n         * @param {String} port Ftp 포트\r\n         * @param {String} user User ID\r\n         * @param {String} pass User Pass\r\n         * @param {String} inputFileName 업로드 할 파일명\r\n         * @param {String} outputFileName 업로드 시 저장할 파일명\r\n         */\n        //파라미터 받아오는것부터 할 것.\n\n    }, {\n        key: "ftpUpload",\n        value: async function ftpUpload(host, port, user, pass, inputFileName, outputFileName) {\n            var url = "https://192.168.1.41:8888/ftpUpload";\n            var data = JSON.stringify({\n                host: host,\n                port: port,\n                user: user,\n                pass: pass,\n                inputFileName: inputFileName,\n                outputFileName: outputFileName\n            });\n            var headers = {\n                "Content-type": "application/json"\n            };\n            var response = await _axios2.default.post(url, data, {\n                headers: headers\n            });\n            _logger2.default.log("리스폰즈 : ", response);\n        }\n    }, {\n        key: "sendData",\n        value: function sendData(eventName, data) {\n            _logger2.default.log("[main -sendData]", eventName, data);\n        }\n    }, {\n        key: "recordingStart",\n        value: async function recordingStart(recFileName) {\n            _logger2.default.log("recordingStart()");\n            recFileName ? this.recFileName = recFileName : this.recFileName = _utils2.default.getCurrentDate();\n            _logger2.default.log("this.recFileName: " + this.recFileName);\n            _logger2.default.log("this.checkRecStatus(): " + this.checkRecStatus());\n            if (this.checkRecStatus()) {\n                _logger2.default.log("녹취시작시 mediaRecorder", mediaRecorder);\n                await this.recordingStop();\n            }\n            _logger2.default.log("this.creatingMediaStream: " + this.creatingMediaStream);\n            if (this.creatingMediaStream) {\n                //녹취 시작 프로세싱 중에 녹취 요청될 경우 녹취 중복 생성 방지\n                console.warn("생성중인 MediaStream이 있습니다.");\n                return false;\n            }\n            this.constraints = await _utils2.default.getConstraints();\n            _logger2.default.log("this.constreaint:", this.constraints);\n            if (!this.constraints) {\n                _logger2.default.log("Zibox2 연결 상태를 확인해 주세요.", this.constraints);\n                return false;\n            }\n            var deviceList = await navigator.mediaDevices.enumerateDevices();\n            _logger2.default.log("디바이스 리스트", deviceList);\n\n            // 여기 시작\n            var result = await this.captureUserMedia(this.constraints, this.onMediaSuccess, this.onMediaError);\n            // 여기 녹취8\n            _logger2.default.log("@@@@@@@@@@@@@@@@[Zibox2SDK - ()] result: ", result);\n            this.setRecStatus(true);\n\n            return result;\n            // 여기 끝\n\n            // return new Promise((resolve) => {\n            //     window.recordChannel.startRecord(\n            //         recFileName,\n            //         this.constraints ? this.constraints.deviceId : -1,\n            //         (res) => {\n            //             this.setRecStatus(res);\n            //             resolve(res);\n            //         }\n            //     );\n            // });\n        }\n    }, {\n        key: "recordingStop",\n        value: async function recordingStop() {\n            try {\n                // 여기 녹취11\n                // 여기 시작\n                this.setRecStatus(false);\n                if (!mediaRecorder) return false;\n                var result = mediaRecorder.stop();\n                mediaRecorder.stream.stop();\n                _logger2.default.log("recordingStop Result:", result);\n                return result;\n                // 여기 끝\n\n                // return new Promise((resolve) => {\n                //     window.recordChannel.stopRecord((res) => {\n                //         this.setRecStatus(!res);\n                //         resolve(res);\n                //     });\n                // });\n            } catch (err) {\n                console.error("recordingStop Error:", err);\n            }\n        }\n    }, {\n        key: "recPause",\n        value: function recPause() {\n            _logger2.default.log("[recPause - \\uC0C1\\uD0DC\\uCCB4\\uD06C]:" + mediaRecorder.state);\n            if (!mediaRecorder) return false;\n            _logger2.default.log("recPause result :", mediaRecorder.pause());\n            return mediaRecorder.pause();\n        }\n    }, {\n        key: "recResume",\n        value: function recResume() {\n            try {\n                _logger2.default.log("[recResume - \\uC0C1\\uD0DC\\uCCB4\\uD06C]:" + mediaRecorder.state);\n                _logger2.default.log("recResume result :", mediaRecorder.resume());\n                mediaRecorder.resume();\n            } catch (err) {\n                console.err("[recResume Error]:", err);\n            }\n        }\n    }, {\n        key: "playbackStart",\n        value: async function playbackStart(fileName) {\n            _logger2.default.log("[Zibox2 - playbackStart()]", fileName, "재생중 여부:", this.ctx.state, this.ctx.currentTime, this.src);\n            var url = "https://192.168.1.41:8888/playbackStart";\n            var headers = {\n                "Content-type": "application/json"\n            };\n            var responseType = "arraybuffer";\n            var data = JSON.stringify({ fileName: fileName });\n            var response = await _axios2.default.post(url, data, {\n                headers: headers,\n                responseType: responseType\n            });\n            if (!response.data.byteLength) console.error("playbackStart - Error[버퍼 확인 요망]");\n            _logger2.default.log("playbackStart - axios 리스폰즈:", response, _typeof(response.data), response.data.byteLength);\n            this.playArrayBuffer(response.data);\n        }\n    }, {\n        key: "playArrayBuffer",\n        value: function playArrayBuffer(arrayBuffer) {\n            _logger2.default.log("playArrayBuffer -전달받은 값:", arrayBuffer, this.src);\n            var blob = new Blob([arrayBuffer], { type: "audio/wav" });\n            Zibox2.instance.audio.src = window.URL.createObjectURL(blob);\n            Zibox2.instance.audio.play();\n            // this.src.buffer = null;\n            // let myAudioBuffer;\n            // this.ctx = new AudioContext();\n            // this.src = this.ctx.createBufferSource();\n            // this.ctx.decodeAudioData(arrayBuffer, (buffer) => {\n            //   myAudioBuffer = buffer;\n            //   this.src.buffer = myAudioBuffer;\n            //   this.src.connect(this.ctx.destination);\n            //   this.src.start(0);\n            // });\n        }\n    }, {\n        key: "playbackStop",\n        value: function playbackStop() {\n            _logger2.default.log("playbackStop -현재상태:", this.ctx.state, this.ctx.currentTime, this.src);\n            this.src.stop();\n        }\n    }, {\n        key: "playbackPauseResume",\n        value: async function playbackPauseResume() {\n            try {\n                _logger2.default.log("playbackPauseResume -\\uD604\\uC7AC\\uC0C1\\uD0DC: " + this.ctx.state + " " + this.ctx.currentTime + " " + this.src);\n                this.ctx.state === "suspended" ? await this.ctx.resume() : await this.ctx.suspend();\n                _logger2.default.log("playbackPauseResume -\\uC774\\uD6C4\\uC0C1\\uD0DC: " + this.ctx.state + " " + this.ctx.currentTime + " " + this.src);\n            } catch (err) {\n                _logger2.default.error("[playbackPauseResume Error]-" + err);\n            }\n        }\n    }, {\n        key: "pausePlaying",\n        value: async function pausePlaying() {\n            _logger2.default.log("pausePlaying -\\uD604\\uC7AC\\uC0C1\\uD0DC: " + this.ctx.state + " " + this.ctx.currentTime + " " + this.src);\n            await this.ctx.suspend();\n            _logger2.default.log("pausePlaying -\\uC774\\uD6C4\\uC0C1\\uD0DC: " + this.ctx.state + " " + this.ctx.currentTime + " " + this.src);\n        }\n    }, {\n        key: "resumePlaying",\n        value: async function resumePlaying() {\n            _logger2.default.log("resumePlaying -\\uD604\\uC7AC\\uC0C1\\uD0DC:, " + this.ctx.state + ", " + this.ctx.currentTime + ", " + this.src);\n            await this.ctx.resume();\n            _logger2.default.log("resumePlaying -\\uC774\\uD6C4\\uC0C1\\uD0DC:, " + this.ctx.state + ", " + this.ctx.currentTime + ", " + this.src);\n        }\n    }, {\n        key: "recSave",\n        value: async function recSave() {\n            var fileName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _utils2.default.getCurrentDate();\n\n            var result = await mediaRecorder.save("", fileName);\n            _logger2.default.log("recSave Result:", result);\n        }\n    }, {\n        key: "recUpload",\n        value: function recUpload() {\n            var filename = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _utils2.default.getCurrentDate() + "_upload.wav";\n        }\n    }, {\n        key: "checkRecStatus",\n        value: function checkRecStatus() {\n            return this.recStatus;\n        }\n    }, {\n        key: "setRecStatus",\n        value: function setRecStatus(recStatus) {\n            this.recStatus = recStatus;\n            return this.checkRecStatus();\n        }\n    }, {\n        key: "monitorAcceptable",\n        value: function monitorAcceptable(data) {}\n    }, {\n        key: "monStart",\n        value: function monStart() {\n            var key = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n            if (key) {}\n        }\n    }, {\n        key: "monStop",\n        value: function monStop() {}\n    }, {\n        key: "captureUserMedia",\n        value: async function captureUserMedia(mediaConstraints, successCallback, errorCallback) {\n            _logger2.default.log("captureUserMedia()");\n            _logger2.default.log("mediaConstraints", mediaConstraints);\n            try {\n                // this.constraints, this.onMediaSuccess, this.onMediaError\n                this.creatingMediaStream = true;\n                var result = await navigator.mediaDevices.getUserMedia(mediaConstraints).then(successCallback).catch(errorCallback);\n                this.creatingMediaStream = false;\n                return result;\n            } catch (err) {\n                console.error("[UserMedia Error]", err);\n            }\n        }\n    }, {\n        key: "onMediaError",\n        value: function onMediaError(err) {\n            console.error("[onMediaError]:" + err);\n            _logger2.default.log(err);\n            switch (err.message) {\n                case _code.Zibox2Error.MIC_CON_ERROR2:\n                    {\n                        alert(_code.Zibox2ErrorMsg.MIC_CON_ERROR2);\n                        break;\n                    }\n                case _code.Zibox2Error.MIC_CON_ERROR3:\n                    {\n                        alert(_code.Zibox2ErrorMsg.MIC_CON_ERROR3);\n                        break;\n                    }\n                case "":\n                    {\n                        if (err.name === _code.Zibox2Error.MIC_CON_ERROR4) {\n                            alert(_code.Zibox2ErrorMsg.MIC_CON_ERROR4);\n                        }\n                        break;\n                    }\n                default:\n                    {\n                        console.error("[onMedia Error]", err.message);\n                        console.error("[onMedia Error]", err.name);\n                        console.error("[onMedia Error]", err);\n                        break;\n                    }\n            }\n            return false;\n        }\n\n        // 여기가 녹음하는데인듯\n\n    }, {\n        key: "onMediaSuccess",\n        value: async function onMediaSuccess(stream) {\n            // 여기 녹취 1\n            //현재 녹음중인 상태를 내가 들을 수 있음\n            _logger2.default.log("[MediaStream 생성 성공 Event]:", stream);\n            // Zibox2.instance.audio = Zibox2.instance.mergeProps(Zibox2.instance.audio, {\n            //     controls: true,\n            //     muted: false,\n            // });\n            // Zibox2.instance.audio.srcObject = stream;\n            // Zibox2.instance.audio.play();\n            mediaRecorder = new _MediaStreamRecorder2.default(stream);\n            _logger2.default.log("미디어스트림레코더 체크:", mediaRecorder);\n            mediaRecorder.stream = stream;\n            mediaRecorder.recorderType = mediaRecorder.StereoAudioRecorder;\n            // don\'t force any mimeType; use above "recorderType" instead.\n            // mediaRecorder.mimeType = MimeType.AUDIO_WEBM; // audio/ogg or audio/wav or audio/webm\n            mediaRecorder.mimeType = _code.MimeType.AUDIO_WAV;\n            // if (recorderType === \'WebAudio API (PCM)\') {\n            //     mediaRecorder.recorderType = StereoAudioRecorder;\n            //     mediaRecorder.mimeType = MimeType.AUDIO_PCM;\n            // }\n\n            _logger2.default.log("mediaRecorder stream/recorderType/mimeType 성공"); // 여기\n            mediaRecorder.audioChannels = 1; // audioChannels : 1 => mono, 2 => stereo, 용량 2배 차이\n            mediaRecorder.sampleRate = 48000; //고정값 보통 16000일수도\n            _logger2.default.log("mediaRecorder audioChannels/sampleRate 성공");\n\n            mediaRecorder.ondataavailable = async function (blob) {\n                // 여기 녹취10\n                _logger2.default.log("[blob]", blob);\n                blob.arrayBuffer().then(function (packet) {\n                    var recStatus = Zibox2.instance.checkRecStatus();\n                    _logger2.default.log("패킷 전송 직전 녹취 상태:", recStatus);\n                    _logger2.default.log("패킷:", packet);\n                });\n                var a = document.createElement("a");\n                a.target = "_blank";\n                a.innerHTML = "Open Recorded Audio No. "; // 여기 수정\n                // "Open Recorded Audio No. " +\n                // index++ +\n                // " (Size: " +\n                // bytesToSize(blob.size) +\n                // ") Time Length: " +\n                // getTimeLength(timeInterval);\n                a.href = URL.createObjectURL(blob);\n                // audiosContainer.appendChild(a);\n                // audiosContainer.appendChild(document.createElement(\'hr\'));\n            };\n\n            // let timeInterval = document.querySelector("#time-interval").value;\n            // if (timeInterval) timeInterval = parseInt(timeInterval);\n            // else timeInterval = 1000;\n            var timeInterval = 1000; // 여기 수정\n\n            // 여기 녹취2 MediaStreamRecorder.js로\n            // get blob after specific time interval\n            mediaRecorder.start(timeInterval);\n            return true;\n        }\n    }, {\n        key: "mergeProps",\n        value: function mergeProps(mergein, mergeto) {\n            for (var t in mergeto) {\n                if (typeof mergeto[t] !== "function") {\n                    mergein[t] = mergeto[t];\n                }\n            }\n            return mergein;\n        }\n    }, {\n        key: "deviceInit",\n        value: async function deviceInit() {\n            _logger2.default.log("[InitDevice]");\n            if (!navigator.mediaDevices || !navigator.mediaDevices.enumerateDevices) {\n                _logger2.default.log("장치 확인이 지원되지 않는 브라우저입니다.", this.agent);\n                return;\n            }\n            this.micSelect.setAttribute("id", "zibox2-mic-setter");\n            this.spkSelect.setAttribute("id", "zibox2-spk-setter");\n\n            this.constraints = await _utils2.default.getConstraints();\n            navigator.getUserMedia({ audio: true }, function (e) {\n                _logger2.default.log("[e]", e);\n            }, function (err) {\n                switch (err.message) {\n                    case _code.Zibox2Error.MIC_CON_ERROR1:\n                        {\n                            alert(_code.Zibox2ErrorMsg.MIC_CON_ERROR1);\n                            break;\n                        }\n                    default:\n                        {\n                            console.error("[Error]", err.message, err.name);\n                            break;\n                        }\n                }\n            });\n\n            _logger2.default.log("Zibox2 장치 초기화 완료");\n        }\n    }, {\n        key: "isDevice",\n        value: async function isDevice() {\n            try {\n                var result = await _utils2.default.getConstraints();\n                _logger2.default.log("[isDevice Result]:", result);\n                if (!result) return 0;\n                return 1;\n            } catch (err) {\n                _logger2.default.error("[isDevice Error]: " + err);\n            }\n        }\n    }, {\n        key: "getDevices",\n        value: async function getDevices() {\n            var element = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Zibox2.instance.element;\n\n            _logger2.default.log("getDevices()");\n            _logger2.default.log("셀렉터 리스트", this.selectors);\n            //재 호출 시 기존 목록 삭제\n            var values = this.selectors.map(function (select) {\n                return select.value;\n            });\n            this.selectors.forEach(function (select) {\n                while (select.firstChild) {\n                    select.removeChild(select.firstChild);\n                }\n            });\n\n            var deviceInfos = await navigator.mediaDevices.enumerateDevices();\n            var micDevices = [];\n            var speakerDevices = [];\n\n            for (var i = 0; i !== deviceInfos.length; ++i) {\n                var deviceInfo = deviceInfos[i];\n\n                if (deviceInfo.kind === _code.DeviceKind.AUDIO_INPUT) {\n                    // 마이크\n                    micDevices.push(deviceInfo.label || "microphone " + (this.micSelect.length + 1));\n                } else if (deviceInfo.kind === _code.DeviceKind.AUDIO_OUTPUT) {\n                    // 스피커\n                    speakerDevices.push(deviceInfo.label || "speaker " + (this.spkSelect.length + 1));\n                } else {\n                    if (deviceInfo.kind !== _code.DeviceKind.VIDEO_INPUT) _logger2.default.log("[Some other kind of source/device: ", deviceInfo);\n                }\n            }\n            return { micDevices: micDevices, speakerDevices: speakerDevices };\n            // this.micSelect.onchange = this.getDevices();\n        }\n    }, {\n        key: "changeMicDevice",\n        value: async function changeMicDevice() {\n            _logger2.default.log("[마이크 장치 변경 - before]", this.constraints);\n            _logger2.default.log("[마이크 장치 변경 - changeMicDevice]", this.micSelect.value);\n            var micDeviceId = this.micSelect.value;\n            var constraints = {\n                audio: {\n                    deviceId: micDeviceId ? { exact: micDeviceId } : undefined\n                }\n            };\n            this.constraints = constraints;\n            _logger2.default.log("[마이크 장치 변경 - After]", this.constraints);\n        }\n    }, {\n        key: "changeSpkDevice",\n        value: async function changeSpkDevice() {\n            _logger2.default.log("[스피커 장치 변경 - changeSpkDevice]", this.spkSelect.value);\n            var audioDestination = this.spkSelect.value;\n            this.attachSinkId(Zibox2.instance.audio, audioDestination);\n        }\n    }, {\n        key: "attachSinkId",\n        value: async function attachSinkId(element, sinkId) {\n            var _this = this;\n\n            _logger2.default.log("[attachSinkId -]", element, sinkId);\n            if (typeof element.sinkId !== "undefined") {\n                Zibox2.instance.audio.setSinkId(sinkId).then(function () {\n                    _logger2.default.log("Success, audio output device attached: " + sinkId);\n                }).catch(function (error) {\n                    var errorMessage = error;\n                    if (error.name === _code.Zibox2Error.SECURITY_ERROR1) {\n                        errorMessage = _code.Zibox2ErrorMsg.SECURITY_ERROR1 + ": " + error;\n                    }\n                    console.error(errorMessage);\n                    //Jump back to first output device in the list as it\'s the default.\n                    _this.spkSelect.selectedIndex = 0;\n                });\n            } else {\n                console.warn("Browser does not support output device selection.");\n                _logger2.default.log(element, sinkId);\n            }\n        }\n    }, {\n        key: "checkDeviceChange",\n        value: async function checkDeviceChange() {\n            navigator.mediaDevices.addEventListener(_code.DeviceEvent.DEVICE_CHANGE, async function (e) {\n                //    navigator.mediaDevices.ondevicechange = function(event) {\n                _logger2.default.log("[미디어 장치 변경 감지]", e);\n                // alert(\'장치 변경이 감지되었습니다. 미디어 장치 연결이 원활하지 않을 시 녹취가 진행되지 않을 수 있습니다.\');\n                var devices = await Zibox2.instance.getDevices();\n                var event = new CustomEvent("ziboxDeviceChanged", {\n                    detail: devices\n                });\n                document.dispatchEvent(event);\n            });\n            _logger2.default.log("Zibox2 장치 변경 체크 완료");\n        }\n    }]);\n\n    return Zibox2;\n}();\n\nexports.default = Zibox2;\n\n//# sourceURL=webpack://zibox2-sdk/./src/main.js?')},"./src/player.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n__webpack_require__(/*! ./lib/audionode */ \"./src/lib/audionode.js\");\n\nvar BUFFERING_SEC = 0.3; // in second\n\nvar Player = function () {\n  function Player(model) {\n    _classCallCheck(this, Player);\n\n    this.model = model;\n    this.socketRrl = '';\n    this.isChrome = false;\n\n    var agent = navigator.userAgent.toLowerCase();\n\n    if (agent.indexOf('chrome') != -1) {\n      // chrome일 경우\n      this.audioContext = null; // 오디오 처리 객체\n      this.audioContextType = 0;\n      this.audioQueueNode = null; // 큐 처리 객체\n      this.audioStack = []; // 스택 처리 객체\n      this.isInit = false; // 초기 버퍼 시작 체크\n      this.isChrome = true; // 크로미늄 여부\n      console.log('[크롬 브라우저]');\n    } else {\n      console.log('[크롬 브라우저가 아닙니다.]');\n    }\n\n    this.initialize();\n  }\n\n  /**\r\n   * @description audio Stack 초기화 진행\r\n   */\n\n\n  _createClass(Player, [{\n    key: 'clearNode',\n    value: function clearNode() {\n      this.isInit = false;\n      this.audioStack = [];\n    }\n\n    /**\r\n     * @description audionode 끊고 초기화 진행\r\n     */\n\n  }, {\n    key: 'destroyNode',\n    value: function destroyNode() {\n      if (this.node) {\n        this.audioQueueNode.disconnect();\n        this.audioQueueNode.destroy();\n        this.audioQueueNode = null;\n      }\n\n      if (this.audioContext) {\n        this.audioContext.close();\n        this.audioContext = null;\n      }\n    }\n\n    /**\r\n     * @description 초기화\r\n     */\n\n  }, {\n    key: 'initialize',\n    value: function initialize() {\n      if (this.isChrome) {\n        console.log('[Player - initialize]');\n        this.createAudioContext();\n      }\n    }\n\n    /**\r\n     * @description audiocontext 생성\r\n     */\n\n  }, {\n    key: 'createAudioContext',\n    value: function createAudioContext() {\n      this.audioContext = new AudioContext();\n      this.audioQueueNode = new BufferQueueNode({\n        audioContext: this.audioContext,\n        objectMode: true,\n        channels: 2\n      });\n\n      this.setAudioContextType(3);\n    }\n\n    /**\r\n     * @description 패킷 재생\r\n     * @param {ArrayBuffer} message\r\n     * @param {boolean} isMp3\r\n     */\n\n  }, {\n    key: 'play',\n    value: function play(message) {\n      var _this = this;\n\n      var isMp3 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      console.log('[play Function]', message);\n      var uint8Packet = new Uint8Array(message);\n      this.audioStack.push(uint8Packet);\n      while (this.audioStack.length > 0) {\n        var buffer = this.audioStack.shift();\n        var uint8Array = new Uint8Array(buffer.length);\n        uint8Array.set(buffer);\n        this.audioContext.decodeAudioData(uint8Array.buffer, function (buffer) {\n          //크롬 정책 변경으로 인해 AudioContext.resume() 해줘야 동작함.\n          _this.audioContext.resume();\n          // // left right을 두개를 채널 데이터를 하나의 모노 데이터로 만들어서 재생(한쪽 채널에 다 재생되는 현상)\n          // let channel0 = buffer.getChannelData(0);\n          // let channel1 = buffer.getChannelData(1);\n          // let monoBuffer = this.context.createBuffer(1, channel0.length, this.context.sampleRate);\n          // let channel = monoBuffer.getChannelData(0);\n\n          // for (let i = 0; i < channel.length; i++) {\n          //   channel[i] = 0.5 * (channel0[i] + channel1[i]);\n          // }\n\n          var delay = 0;\n          if (!_this.isInit) {\n            delay = BUFFERING_SEC;\n            _this.isInit = true;\n          }\n\n          setTimeout(function () {\n            _this.audioQueueNode.write(buffer);\n          }, delay * 1000);\n        }, function (err) {\n          console.log('[Audio Decoded Fail!!!]', err);\n        });\n      }\n    }\n\n    /**\r\n     * @description audiocontext 설정\r\n     * @param {number} type 0 - 기본값 / 1 - left,right 균형 잡기 / 2 - 스테레오 설정 / 3 - 모노 설정\r\n     */\n\n  }, {\n    key: 'setAudioContextType',\n    value: function setAudioContextType() {\n      var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      this.audioContextType = type;\n\n      switch (type) {\n        case 0:\n          // default\n          this.audioQueueNode.connect(this.audioContext.destination);\n\n          break;\n        case 1:\n          // left/right 균형 잡기\n          this.gainNode = this.audioContext.createGain();\n          this.panNode = this.audioContext.createStereoPanner();\n\n          this.gainNode.connect(this.audioContext.destination);\n          this.panNode.connect(this.gainNode);\n          this.audioQueueNode.connect(this.panNode);\n\n          break;\n        case 2:\n          // 스테레오 설정\n          this.gainNodeL = this.audioContext.createGain();\n          this.gainNodeR = this.audioContext.createGain();\n          this.splitterNode = this.audioContext.createChannelSplitter(2);\n          this.mergeNode = this.audioContext.createChannelMerger(2);\n\n          this.mergeNode.connect(this.audioContext.destination);\n          this.gainNodeL.connect(this.mergeNode, 0, 0);\n          this.gainNodeR.connect(this.mergeNode, 0, 1);\n          this.splitterNode.connect(this.gainNodeL, 0, 0); // 왼쪽 채널\n          this.splitterNode.connect(this.gainNodeR, 1, 0); // 오른쪽 채널\n          this.audioQueueNode.connect(this.splitterNode);\n\n          break;\n        case 3:\n          // 모노 설정\n          this.gainNodeL = this.audioContext.createGain();\n          this.gainNodeR = this.audioContext.createGain();\n          this.splitterNode = this.audioContext.createChannelSplitter(2);\n          this.mergeNode = this.audioContext.createChannelMerger(1);\n\n          this.mergeNode.connect(this.audioContext.destination);\n          this.gainNodeL.connect(this.mergeNode, 0);\n          this.gainNodeR.connect(this.mergeNode, 0);\n          this.splitterNode.connect(this.gainNodeL, 0, 0); // 왼쪽 채널\n          this.splitterNode.connect(this.gainNodeR, 1, 0); // 오른쪽 채널\n          this.audioQueueNode.connect(this.splitterNode);\n          break;\n        default:\n          break;\n      }\n    }\n  }]);\n\n  return Player;\n}();\n\nPlayer.instance = null;\n\nexports.default = Player;\n\n//# sourceURL=webpack://zibox2-sdk/./src/player.js?")},"./src/socketClient.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _socket = __webpack_require__(/*! socket.io-client */ \"./node_modules/socket.io-client/build/index.js\");\n\nvar _socket2 = _interopRequireDefault(_socket);\n\nvar _main = __webpack_require__(/*! ./main */ \"./src/main.js\");\n\nvar _main2 = _interopRequireDefault(_main);\n\nvar _player = __webpack_require__(/*! ./player */ \"./src/player.js\");\n\nvar _player2 = _interopRequireDefault(_player);\n\nvar _utils = __webpack_require__(/*! ./utils/utils */ \"./src/utils/utils.js\");\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _logger = __webpack_require__(/*! ./utils/logger */ \"./src/utils/logger.js\");\n\nvar _logger2 = _interopRequireDefault(_logger);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Socket = function () {\n  function Socket(host_ip) {\n    _classCallCheck(this, Socket);\n\n    this.socket = null; //소켓 인스턴스\n    this.monStatus = false; //감청 상태\n    this.connectStatus = false;\n    this.hostIp = host_ip; //소켓 주소\n    _logger2.default.log('소켓클라 컨스트럭터', host_ip);\n    _player2.default.instance = new _player2.default(this);\n  }\n\n  _createClass(Socket, [{\n    key: 'connect',\n    value: function connect() {\n      var _this = this;\n\n      this.io = (0, _socket2.default)(this.hostIp);\n      this.io.on('audioPacket', function (data) {\n        _logger2.default.log('클라 측 패킷 전달 받음 :', data.data.byteLength, data, _this.monStatus);\n\n        if (data.data.byteLength && _this.monStatus) {\n          //21-09-06 수정 필요, Zibox2의 playArrayBuffer 호출되어야함.\n          _player2.default.instance.play(data.data);\n        }\n      });\n      this.io.on(\"connect\", function () {\n        _logger2.default.log('[소켓Client 연결 완료]');\n        _this.connectStatus = true;\n      });\n      this.io.on('joined', function (data) {\n        _logger2.default.log('소켓 클라 joined!!', data);\n      });\n      this.io.on('leaved', function (data) {\n        _logger2.default.log('소켓 클라 leaved!!', data);\n      });\n      this.io.on(\"disconnect\", function () {\n        _logger2.default.log('[소켓Client 연결 끊김]');\n        _this.connectStatus = false;\n      });\n\n      this.io.on(\"initialize\", function (req) {\n        _logger2.default.log('[소켓Client 응답:', req, ']');\n      });\n    }\n  }, {\n    key: 'setMonStatus',\n    value: function setMonStatus(value) {\n      _logger2.default.log('현재 감청 상태:', this.monStatus, '전달받은 셋팅 값:', value);\n      this.monStatus = value;\n      _logger2.default.log('처리 후 감청 상태:', this.monStatus);\n      return this.monStatus;\n    }\n  }, {\n    key: 'emit',\n    value: function emit(eventName, data) {\n      if (!this.connectStatus) {\n        _logger2.default.log('Socket 연결 상태');\n        return false;\n      }\n      _logger2.default.log('#[Socket Client emit]', eventName, data);\n      this.io.emit(eventName, data);\n    }\n  }]);\n\n  return Socket;\n}();\n\nexports.default = Socket;\n\n//# sourceURL=webpack://zibox2-sdk/./src/socketClient.js?")},"./src/utils/code.js":(__unused_webpack_module,exports)=>{"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", ({\n    value: true\n}));\nvar Zibox2Status = exports.Zibox2Status = {};\nvar Zibox2Error = exports.Zibox2Error = {\n    MIC_CON_ERROR1: "Permission denied",\n    MIC_CON_ERROR2: "Requested device not found",\n    MIC_CON_ERROR3: "Failed to execute \'getUserMedia\' on \'MediaDevices\': At least one of audio and video must be requested",\n    MIC_CON_ERROR4: "OverconstrainedError", //1번쨰 마이크로 녹취 후, 1번째 마이크 언플러그 후 녹취시작 시 발생 혹은 연결할 마이크없을때 발생?\n\n    SECURITY_ERROR1: "SecurityError"\n};\nvar Zibox2ErrorMsg = exports.Zibox2ErrorMsg = {\n    MIC_CON_ERROR1: "\\uB9C8\\uC774\\uD06C \\uAD8C\\uD55C \\uC124\\uC815\\uC744 \\uD5C8\\uC6A9\\uD574 \\uC8FC\\uC138\\uC694.[Error Code:1]",\n    MIC_CON_ERROR2: "\\uB9C8\\uC774\\uD06C \\uC5F0\\uACB0\\uC744 \\uD655\\uC778\\uD574 \\uC8FC\\uC138\\uC694.[Error Code:2]",\n    MIC_CON_ERROR3: "\\uB9C8\\uC774\\uD06C \\uC7A5\\uCE58\\uB97C Zibox2\\uB85C \\uC124\\uC815\\uD574 \\uC8FC\\uC138\\uC694.[Error Code:3]",\n    MIC_CON_ERROR4: "\\uB9C8\\uC774\\uD06C \\uC7A5\\uCE58\\uB97C Zibox2\\uB85C \\uC124\\uC815\\uD574 \\uC8FC\\uC138\\uC694.[Error Code:4]",\n\n    SECURITY_ERROR1: "You need to use HTTPS for selecting audio output device"\n};\n\nvar DeviceLabel = exports.DeviceLabel = {\n    //   ZIBOX2 : "USB Audio Device",\n    ZIBOX2: "ZIBOX2", // 여기 수정\n    DEFAULT: "default",\n    COMMUNICATIONS: "communications"\n};\n\nvar DeviceKind = exports.DeviceKind = {\n    AUDIO_INPUT: "audioinput",\n    AUDIO_OUTPUT: "audiooutput",\n    VIDEO_INPUT: "videoinput"\n};\n\nvar MimeType = exports.MimeType = {\n    AUDIO_WAV: "audio/wav",\n    AUDIO_PCM: "audio/pcm",\n    AUDIO_WEBM: "audio/webm"\n};\n\nvar DeviceEvent = exports.DeviceEvent = {\n    DEVICE_CHANGE: "devicechange",\n    CHANGE: "change"\n};\n\n//# sourceURL=webpack://zibox2-sdk/./src/utils/code.js?')},"./src/utils/logger.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _utils = __webpack_require__(/*! ./utils */ \"./src/utils/utils.js\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Logger = function () {\n  function Logger() {\n    _classCallCheck(this, Logger);\n  }\n\n  _createClass(Logger, null, [{\n    key: 'log',\n    value: function log(message, object) {\n      if (true) {\n        var current = new Date();\n        var hour = (0, _utils.pad)(String(current.getHours()));\n        var min = (0, _utils.pad)(String(current.getMinutes()));\n        var sec = (0, _utils.pad)(String(current.getSeconds()));\n        var millis = (0, _utils.pad)(String(current.getMilliseconds()), 3);\n        var prefix = '[' + hour + ':' + min + ':' + sec + '.' + millis + '] ';\n\n        if (object) console.log(prefix + message, object);else console.log(prefix + message);\n      }\n      // console.log(`[utils logger]노드ENV:${process.env.NODE_ENV}`)\n    }\n  }, {\n    key: 'error',\n    value: function error(message, object) {\n      if (true) {\n        var current = new Date();\n        var hour = (0, _utils.pad)(String(current.getHours()));\n        var min = (0, _utils.pad)(String(current.getMinutes()));\n        var sec = (0, _utils.pad)(String(current.getSeconds()));\n        var millis = (0, _utils.pad)(String(current.getMilliseconds()), 3);\n        var prefix = '[' + hour + ':' + min + ':' + sec + '.' + millis + '] ';\n\n        if (object) console.error(prefix + message, object);else console.error(prefix + message);\n      }\n      // console.log(`[utils logger]노드ENV:${process.env.NODE_ENV}`)\n    }\n  }]);\n\n  return Logger;\n}();\n\nexports.default = Logger;\n\n//# sourceURL=webpack://zibox2-sdk/./src/utils/logger.js?")},"./src/utils/utils.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", ({\n    value: true\n}));\nexports.pad = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _code = __webpack_require__(/*! ./code */ "./src/utils/code.js");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nvar Utils = function () {\n    function Utils() {\n        _classCallCheck(this, Utils);\n    }\n\n    _createClass(Utils, null, [{\n        key: "getCurrentDate",\n        value: function getCurrentDate() {\n            var date = new Date();\n            var yyyy = date.getFullYear().toString();\n            var MM = date.getMonth() + 1;\n            var dd = date.getDate();\n            var hh = date.getHours();\n            var mm = date.getMinutes();\n            var ss = date.getSeconds();\n\n            MM = MM < 10 ? "0" + MM : MM.toString();\n            dd = dd < 10 ? "0" + dd : dd.toString();\n            hh = hh < 10 ? "0" + hh : hh.toString();\n            mm = mm < 10 ? "0" + mm : mm.toString();\n            ss = ss < 10 ? "0" + ss : ss.toString();\n\n            return yyyy + MM + dd + hh + mm + ss;\n        }\n    }, {\n        key: "getConstraints",\n        value: async function getConstraints() {\n            var deviceId = null;\n            var devicesInfo = await navigator.mediaDevices.enumerateDevices();\n            devicesInfo.forEach(function (device) {\n                if (device.kind === _code.DeviceKind.AUDIO_INPUT && device.label.indexOf(_code.DeviceLabel.ZIBOX2) >= 0 && device.deviceId.indexOf(_code.DeviceLabel.DEFAULT) < 0 && device.deviceId.indexOf(_code.DeviceLabel.COMMUNICATIONS) < 0) {\n                    console.log("지박스2 Device로 판단:", device.kind, device.label, device.deviceId);\n                    deviceId = device.deviceId;\n                }\n            });\n            return deviceId ? {\n                audio: {\n                    deviceId: deviceId ? { exact: deviceId } : undefined\n                }\n            } : null;\n        }\n    }, {\n        key: "pad",\n        value: function pad(data) {\n            var defaultLength = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n\n            if (data.length < defaultLength) {\n                return "0" + data;\n            }\n            return data;\n        }\n    }]);\n\n    return Utils;\n}();\n\nexports.default = Utils;\nvar pad = exports.pad = function pad(data) {\n    var defaultLength = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n\n    if (data.length < defaultLength) {\n        return "0" + data;\n    }\n    return data;\n};\n\n//# sourceURL=webpack://zibox2-sdk/./src/utils/utils.js?')},"./node_modules/backo2/index.js":module=>{eval("\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/backo2/index.js?")},"./node_modules/base64-arraybuffer/lib/base64-arraybuffer.js":(__unused_webpack_module,exports)=>{eval('/*\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n(function(chars){\n  "use strict";\n\n  exports.encode = function(arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer),\n    i, len = bytes.length, base64 = "";\n\n    for (i = 0; i < len; i+=3) {\n      base64 += chars[bytes[i] >> 2];\n      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n      base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if ((len % 3) === 2) {\n      base64 = base64.substring(0, base64.length - 1) + "=";\n    } else if (len % 3 === 1) {\n      base64 = base64.substring(0, base64.length - 2) + "==";\n    }\n\n    return base64;\n  };\n\n  exports.decode =  function(base64) {\n    var bufferLength = base64.length * 0.75,\n    len = base64.length, i, p = 0,\n    encoded1, encoded2, encoded3, encoded4;\n\n    if (base64[base64.length - 1] === "=") {\n      bufferLength--;\n      if (base64[base64.length - 2] === "=") {\n        bufferLength--;\n      }\n    }\n\n    var arraybuffer = new ArrayBuffer(bufferLength),\n    bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i+=4) {\n      encoded1 = chars.indexOf(base64[i]);\n      encoded2 = chars.indexOf(base64[i+1]);\n      encoded3 = chars.indexOf(base64[i+2]);\n      encoded4 = chars.indexOf(base64[i+3]);\n\n      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n\n    return arraybuffer;\n  };\n})("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/");\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/base64-arraybuffer/lib/base64-arraybuffer.js?')},"./node_modules/component-emitter/index.js":module=>{eval("\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (true) {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n\r\n  // Remove event specific arrays for event types that no\r\n  // one is subscribed for to avoid memory leak.\r\n  if (callbacks.length === 0) {\r\n    delete this._callbacks['$' + event];\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  var args = new Array(arguments.length - 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  for (var i = 1; i < arguments.length; i++) {\r\n    args[i - 1] = arguments[i];\r\n  }\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/component-emitter/index.js?")},"./node_modules/engine.io-client/lib/globalThis.browser.js":module=>{eval('module.exports = (() => {\n  if (typeof self !== "undefined") {\n    return self;\n  } else if (typeof window !== "undefined") {\n    return window;\n  } else {\n    return Function("return this")();\n  }\n})();\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/engine.io-client/lib/globalThis.browser.js?')},"./node_modules/engine.io-client/lib/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{eval('const Socket = __webpack_require__(/*! ./socket */ "./node_modules/engine.io-client/lib/socket.js");\n\nmodule.exports = (uri, opts) => new Socket(uri, opts);\n\n/**\n * Expose deps for legacy compatibility\n * and standalone browser access.\n */\n\nmodule.exports.Socket = Socket;\nmodule.exports.protocol = Socket.protocol; // this is an int\nmodule.exports.Transport = __webpack_require__(/*! ./transport */ "./node_modules/engine.io-client/lib/transport.js");\nmodule.exports.transports = __webpack_require__(/*! ./transports/index */ "./node_modules/engine.io-client/lib/transports/index.js");\nmodule.exports.parser = __webpack_require__(/*! engine.io-parser */ "./node_modules/engine.io-parser/lib/index.js");\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/engine.io-client/lib/index.js?')},"./node_modules/engine.io-client/lib/socket.js":(module,__unused_webpack_exports,__webpack_require__)=>{eval('const transports = __webpack_require__(/*! ./transports/index */ "./node_modules/engine.io-client/lib/transports/index.js");\nconst Emitter = __webpack_require__(/*! component-emitter */ "./node_modules/component-emitter/index.js");\nconst debug = __webpack_require__(/*! debug */ "./node_modules/engine.io-client/node_modules/debug/src/browser.js")("engine.io-client:socket");\nconst parser = __webpack_require__(/*! engine.io-parser */ "./node_modules/engine.io-parser/lib/index.js");\nconst parseuri = __webpack_require__(/*! parseuri */ "./node_modules/parseuri/index.js");\nconst parseqs = __webpack_require__(/*! parseqs */ "./node_modules/parseqs/index.js");\n\nclass Socket extends Emitter {\n  /**\n   * Socket constructor.\n   *\n   * @param {String|Object} uri or options\n   * @param {Object} options\n   * @api public\n   */\n  constructor(uri, opts = {}) {\n    super();\n\n    if (uri && "object" === typeof uri) {\n      opts = uri;\n      uri = null;\n    }\n\n    if (uri) {\n      uri = parseuri(uri);\n      opts.hostname = uri.host;\n      opts.secure = uri.protocol === "https" || uri.protocol === "wss";\n      opts.port = uri.port;\n      if (uri.query) opts.query = uri.query;\n    } else if (opts.host) {\n      opts.hostname = parseuri(opts.host).host;\n    }\n\n    this.secure =\n      null != opts.secure\n        ? opts.secure\n        : typeof location !== "undefined" && "https:" === location.protocol;\n\n    if (opts.hostname && !opts.port) {\n      // if no port is specified manually, use the protocol default\n      opts.port = this.secure ? "443" : "80";\n    }\n\n    this.hostname =\n      opts.hostname ||\n      (typeof location !== "undefined" ? location.hostname : "localhost");\n    this.port =\n      opts.port ||\n      (typeof location !== "undefined" && location.port\n        ? location.port\n        : this.secure\n        ? 443\n        : 80);\n\n    this.transports = opts.transports || ["polling", "websocket"];\n    this.readyState = "";\n    this.writeBuffer = [];\n    this.prevBufferLen = 0;\n\n    this.opts = Object.assign(\n      {\n        path: "/engine.io",\n        agent: false,\n        withCredentials: false,\n        upgrade: true,\n        jsonp: true,\n        timestampParam: "t",\n        rememberUpgrade: false,\n        rejectUnauthorized: true,\n        perMessageDeflate: {\n          threshold: 1024\n        },\n        transportOptions: {},\n        closeOnBeforeunload: true\n      },\n      opts\n    );\n\n    this.opts.path = this.opts.path.replace(/\\/$/, "") + "/";\n\n    if (typeof this.opts.query === "string") {\n      this.opts.query = parseqs.decode(this.opts.query);\n    }\n\n    // set on handshake\n    this.id = null;\n    this.upgrades = null;\n    this.pingInterval = null;\n    this.pingTimeout = null;\n\n    // set on heartbeat\n    this.pingTimeoutTimer = null;\n\n    if (typeof addEventListener === "function") {\n      if (this.opts.closeOnBeforeunload) {\n        // Firefox closes the connection when the "beforeunload" event is emitted but not Chrome. This event listener\n        // ensures every browser behaves the same (no "disconnect" event at the Socket.IO level when the page is\n        // closed/reloaded)\n        addEventListener(\n          "beforeunload",\n          () => {\n            if (this.transport) {\n              // silently close the transport\n              this.transport.removeAllListeners();\n              this.transport.close();\n            }\n          },\n          false\n        );\n      }\n      if (this.hostname !== "localhost") {\n        this.offlineEventListener = () => {\n          this.onClose("transport close");\n        };\n        addEventListener("offline", this.offlineEventListener, false);\n      }\n    }\n\n    this.open();\n  }\n\n  /**\n   * Creates transport of the given type.\n   *\n   * @param {String} transport name\n   * @return {Transport}\n   * @api private\n   */\n  createTransport(name) {\n    debug(\'creating transport "%s"\', name);\n    const query = clone(this.opts.query);\n\n    // append engine.io protocol identifier\n    query.EIO = parser.protocol;\n\n    // transport name\n    query.transport = name;\n\n    // session id if we already have one\n    if (this.id) query.sid = this.id;\n\n    const opts = Object.assign(\n      {},\n      this.opts.transportOptions[name],\n      this.opts,\n      {\n        query,\n        socket: this,\n        hostname: this.hostname,\n        secure: this.secure,\n        port: this.port\n      }\n    );\n\n    debug("options: %j", opts);\n\n    return new transports[name](opts);\n  }\n\n  /**\n   * Initializes transport to use and starts probe.\n   *\n   * @api private\n   */\n  open() {\n    let transport;\n    if (\n      this.opts.rememberUpgrade &&\n      Socket.priorWebsocketSuccess &&\n      this.transports.indexOf("websocket") !== -1\n    ) {\n      transport = "websocket";\n    } else if (0 === this.transports.length) {\n      // Emit error on next tick so it can be listened to\n      setTimeout(() => {\n        this.emit("error", "No transports available");\n      }, 0);\n      return;\n    } else {\n      transport = this.transports[0];\n    }\n    this.readyState = "opening";\n\n    // Retry with the next transport if the transport is disabled (jsonp: false)\n    try {\n      transport = this.createTransport(transport);\n    } catch (e) {\n      debug("error while creating transport: %s", e);\n      this.transports.shift();\n      this.open();\n      return;\n    }\n\n    transport.open();\n    this.setTransport(transport);\n  }\n\n  /**\n   * Sets the current transport. Disables the existing one (if any).\n   *\n   * @api private\n   */\n  setTransport(transport) {\n    debug("setting transport %s", transport.name);\n\n    if (this.transport) {\n      debug("clearing existing transport %s", this.transport.name);\n      this.transport.removeAllListeners();\n    }\n\n    // set up transport\n    this.transport = transport;\n\n    // set up transport listeners\n    transport\n      .on("drain", this.onDrain.bind(this))\n      .on("packet", this.onPacket.bind(this))\n      .on("error", this.onError.bind(this))\n      .on("close", () => {\n        this.onClose("transport close");\n      });\n  }\n\n  /**\n   * Probes a transport.\n   *\n   * @param {String} transport name\n   * @api private\n   */\n  probe(name) {\n    debug(\'probing transport "%s"\', name);\n    let transport = this.createTransport(name, { probe: 1 });\n    let failed = false;\n\n    Socket.priorWebsocketSuccess = false;\n\n    const onTransportOpen = () => {\n      if (failed) return;\n\n      debug(\'probe transport "%s" opened\', name);\n      transport.send([{ type: "ping", data: "probe" }]);\n      transport.once("packet", msg => {\n        if (failed) return;\n        if ("pong" === msg.type && "probe" === msg.data) {\n          debug(\'probe transport "%s" pong\', name);\n          this.upgrading = true;\n          this.emit("upgrading", transport);\n          if (!transport) return;\n          Socket.priorWebsocketSuccess = "websocket" === transport.name;\n\n          debug(\'pausing current transport "%s"\', this.transport.name);\n          this.transport.pause(() => {\n            if (failed) return;\n            if ("closed" === this.readyState) return;\n            debug("changing transport and sending upgrade packet");\n\n            cleanup();\n\n            this.setTransport(transport);\n            transport.send([{ type: "upgrade" }]);\n            this.emit("upgrade", transport);\n            transport = null;\n            this.upgrading = false;\n            this.flush();\n          });\n        } else {\n          debug(\'probe transport "%s" failed\', name);\n          const err = new Error("probe error");\n          err.transport = transport.name;\n          this.emit("upgradeError", err);\n        }\n      });\n    };\n\n    function freezeTransport() {\n      if (failed) return;\n\n      // Any callback called by transport should be ignored since now\n      failed = true;\n\n      cleanup();\n\n      transport.close();\n      transport = null;\n    }\n\n    // Handle any error that happens while probing\n    const onerror = err => {\n      const error = new Error("probe error: " + err);\n      error.transport = transport.name;\n\n      freezeTransport();\n\n      debug(\'probe transport "%s" failed because of error: %s\', name, err);\n\n      this.emit("upgradeError", error);\n    };\n\n    function onTransportClose() {\n      onerror("transport closed");\n    }\n\n    // When the socket is closed while we\'re probing\n    function onclose() {\n      onerror("socket closed");\n    }\n\n    // When the socket is upgraded while we\'re probing\n    function onupgrade(to) {\n      if (transport && to.name !== transport.name) {\n        debug(\'"%s" works - aborting "%s"\', to.name, transport.name);\n        freezeTransport();\n      }\n    }\n\n    // Remove all listeners on the transport and on self\n    const cleanup = () => {\n      transport.removeListener("open", onTransportOpen);\n      transport.removeListener("error", onerror);\n      transport.removeListener("close", onTransportClose);\n      this.removeListener("close", onclose);\n      this.removeListener("upgrading", onupgrade);\n    };\n\n    transport.once("open", onTransportOpen);\n    transport.once("error", onerror);\n    transport.once("close", onTransportClose);\n\n    this.once("close", onclose);\n    this.once("upgrading", onupgrade);\n\n    transport.open();\n  }\n\n  /**\n   * Called when connection is deemed open.\n   *\n   * @api public\n   */\n  onOpen() {\n    debug("socket open");\n    this.readyState = "open";\n    Socket.priorWebsocketSuccess = "websocket" === this.transport.name;\n    this.emit("open");\n    this.flush();\n\n    // we check for `readyState` in case an `open`\n    // listener already closed the socket\n    if (\n      "open" === this.readyState &&\n      this.opts.upgrade &&\n      this.transport.pause\n    ) {\n      debug("starting upgrade probes");\n      let i = 0;\n      const l = this.upgrades.length;\n      for (; i < l; i++) {\n        this.probe(this.upgrades[i]);\n      }\n    }\n  }\n\n  /**\n   * Handles a packet.\n   *\n   * @api private\n   */\n  onPacket(packet) {\n    if (\n      "opening" === this.readyState ||\n      "open" === this.readyState ||\n      "closing" === this.readyState\n    ) {\n      debug(\'socket receive: type "%s", data "%s"\', packet.type, packet.data);\n\n      this.emit("packet", packet);\n\n      // Socket is live - any packet counts\n      this.emit("heartbeat");\n\n      switch (packet.type) {\n        case "open":\n          this.onHandshake(JSON.parse(packet.data));\n          break;\n\n        case "ping":\n          this.resetPingTimeout();\n          this.sendPacket("pong");\n          this.emit("ping");\n          this.emit("pong");\n          break;\n\n        case "error":\n          const err = new Error("server error");\n          err.code = packet.data;\n          this.onError(err);\n          break;\n\n        case "message":\n          this.emit("data", packet.data);\n          this.emit("message", packet.data);\n          break;\n      }\n    } else {\n      debug(\'packet received with socket readyState "%s"\', this.readyState);\n    }\n  }\n\n  /**\n   * Called upon handshake completion.\n   *\n   * @param {Object} handshake obj\n   * @api private\n   */\n  onHandshake(data) {\n    this.emit("handshake", data);\n    this.id = data.sid;\n    this.transport.query.sid = data.sid;\n    this.upgrades = this.filterUpgrades(data.upgrades);\n    this.pingInterval = data.pingInterval;\n    this.pingTimeout = data.pingTimeout;\n    this.onOpen();\n    // In case open handler closes socket\n    if ("closed" === this.readyState) return;\n    this.resetPingTimeout();\n  }\n\n  /**\n   * Sets and resets ping timeout timer based on server pings.\n   *\n   * @api private\n   */\n  resetPingTimeout() {\n    clearTimeout(this.pingTimeoutTimer);\n    this.pingTimeoutTimer = setTimeout(() => {\n      this.onClose("ping timeout");\n    }, this.pingInterval + this.pingTimeout);\n    if (this.opts.autoUnref) {\n      this.pingTimeoutTimer.unref();\n    }\n  }\n\n  /**\n   * Called on `drain` event\n   *\n   * @api private\n   */\n  onDrain() {\n    this.writeBuffer.splice(0, this.prevBufferLen);\n\n    // setting prevBufferLen = 0 is very important\n    // for example, when upgrading, upgrade packet is sent over,\n    // and a nonzero prevBufferLen could cause problems on `drain`\n    this.prevBufferLen = 0;\n\n    if (0 === this.writeBuffer.length) {\n      this.emit("drain");\n    } else {\n      this.flush();\n    }\n  }\n\n  /**\n   * Flush write buffers.\n   *\n   * @api private\n   */\n  flush() {\n    if (\n      "closed" !== this.readyState &&\n      this.transport.writable &&\n      !this.upgrading &&\n      this.writeBuffer.length\n    ) {\n      debug("flushing %d packets in socket", this.writeBuffer.length);\n      this.transport.send(this.writeBuffer);\n      // keep track of current length of writeBuffer\n      // splice writeBuffer and callbackBuffer on `drain`\n      this.prevBufferLen = this.writeBuffer.length;\n      this.emit("flush");\n    }\n  }\n\n  /**\n   * Sends a message.\n   *\n   * @param {String} message.\n   * @param {Function} callback function.\n   * @param {Object} options.\n   * @return {Socket} for chaining.\n   * @api public\n   */\n  write(msg, options, fn) {\n    this.sendPacket("message", msg, options, fn);\n    return this;\n  }\n\n  send(msg, options, fn) {\n    this.sendPacket("message", msg, options, fn);\n    return this;\n  }\n\n  /**\n   * Sends a packet.\n   *\n   * @param {String} packet type.\n   * @param {String} data.\n   * @param {Object} options.\n   * @param {Function} callback function.\n   * @api private\n   */\n  sendPacket(type, data, options, fn) {\n    if ("function" === typeof data) {\n      fn = data;\n      data = undefined;\n    }\n\n    if ("function" === typeof options) {\n      fn = options;\n      options = null;\n    }\n\n    if ("closing" === this.readyState || "closed" === this.readyState) {\n      return;\n    }\n\n    options = options || {};\n    options.compress = false !== options.compress;\n\n    const packet = {\n      type: type,\n      data: data,\n      options: options\n    };\n    this.emit("packetCreate", packet);\n    this.writeBuffer.push(packet);\n    if (fn) this.once("flush", fn);\n    this.flush();\n  }\n\n  /**\n   * Closes the connection.\n   *\n   * @api private\n   */\n  close() {\n    const close = () => {\n      this.onClose("forced close");\n      debug("socket closing - telling transport to close");\n      this.transport.close();\n    };\n\n    const cleanupAndClose = () => {\n      this.removeListener("upgrade", cleanupAndClose);\n      this.removeListener("upgradeError", cleanupAndClose);\n      close();\n    };\n\n    const waitForUpgrade = () => {\n      // wait for upgrade to finish since we can\'t send packets while pausing a transport\n      this.once("upgrade", cleanupAndClose);\n      this.once("upgradeError", cleanupAndClose);\n    };\n\n    if ("opening" === this.readyState || "open" === this.readyState) {\n      this.readyState = "closing";\n\n      if (this.writeBuffer.length) {\n        this.once("drain", () => {\n          if (this.upgrading) {\n            waitForUpgrade();\n          } else {\n            close();\n          }\n        });\n      } else if (this.upgrading) {\n        waitForUpgrade();\n      } else {\n        close();\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * Called upon transport error\n   *\n   * @api private\n   */\n  onError(err) {\n    debug("socket error %j", err);\n    Socket.priorWebsocketSuccess = false;\n    this.emit("error", err);\n    this.onClose("transport error", err);\n  }\n\n  /**\n   * Called upon transport close.\n   *\n   * @api private\n   */\n  onClose(reason, desc) {\n    if (\n      "opening" === this.readyState ||\n      "open" === this.readyState ||\n      "closing" === this.readyState\n    ) {\n      debug(\'socket close with reason: "%s"\', reason);\n\n      // clear timers\n      clearTimeout(this.pingIntervalTimer);\n      clearTimeout(this.pingTimeoutTimer);\n\n      // stop event from firing again for transport\n      this.transport.removeAllListeners("close");\n\n      // ensure transport won\'t stay open\n      this.transport.close();\n\n      // ignore further transport communication\n      this.transport.removeAllListeners();\n\n      if (typeof removeEventListener === "function") {\n        removeEventListener("offline", this.offlineEventListener, false);\n      }\n\n      // set ready state\n      this.readyState = "closed";\n\n      // clear session id\n      this.id = null;\n\n      // emit close event\n      this.emit("close", reason, desc);\n\n      // clean buffers after, so users can still\n      // grab the buffers on `close` event\n      this.writeBuffer = [];\n      this.prevBufferLen = 0;\n    }\n  }\n\n  /**\n   * Filters upgrades, returning only those matching client transports.\n   *\n   * @param {Array} server upgrades\n   * @api private\n   *\n   */\n  filterUpgrades(upgrades) {\n    const filteredUpgrades = [];\n    let i = 0;\n    const j = upgrades.length;\n    for (; i < j; i++) {\n      if (~this.transports.indexOf(upgrades[i]))\n        filteredUpgrades.push(upgrades[i]);\n    }\n    return filteredUpgrades;\n  }\n}\n\nSocket.priorWebsocketSuccess = false;\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nSocket.protocol = parser.protocol; // this is an int\n\nfunction clone(obj) {\n  const o = {};\n  for (let i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      o[i] = obj[i];\n    }\n  }\n  return o;\n}\n\nmodule.exports = Socket;\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/engine.io-client/lib/socket.js?')},"./node_modules/engine.io-client/lib/transport.js":(module,__unused_webpack_exports,__webpack_require__)=>{eval('const parser = __webpack_require__(/*! engine.io-parser */ "./node_modules/engine.io-parser/lib/index.js");\nconst Emitter = __webpack_require__(/*! component-emitter */ "./node_modules/component-emitter/index.js");\nconst debug = __webpack_require__(/*! debug */ "./node_modules/engine.io-client/node_modules/debug/src/browser.js")("engine.io-client:transport");\n\nclass Transport extends Emitter {\n  /**\n   * Transport abstract constructor.\n   *\n   * @param {Object} options.\n   * @api private\n   */\n  constructor(opts) {\n    super();\n\n    this.opts = opts;\n    this.query = opts.query;\n    this.readyState = "";\n    this.socket = opts.socket;\n  }\n\n  /**\n   * Emits an error.\n   *\n   * @param {String} str\n   * @return {Transport} for chaining\n   * @api public\n   */\n  onError(msg, desc) {\n    const err = new Error(msg);\n    err.type = "TransportError";\n    err.description = desc;\n    this.emit("error", err);\n    return this;\n  }\n\n  /**\n   * Opens the transport.\n   *\n   * @api public\n   */\n  open() {\n    if ("closed" === this.readyState || "" === this.readyState) {\n      this.readyState = "opening";\n      this.doOpen();\n    }\n\n    return this;\n  }\n\n  /**\n   * Closes the transport.\n   *\n   * @api private\n   */\n  close() {\n    if ("opening" === this.readyState || "open" === this.readyState) {\n      this.doClose();\n      this.onClose();\n    }\n\n    return this;\n  }\n\n  /**\n   * Sends multiple packets.\n   *\n   * @param {Array} packets\n   * @api private\n   */\n  send(packets) {\n    if ("open" === this.readyState) {\n      this.write(packets);\n    } else {\n      // this might happen if the transport was silently closed in the beforeunload event handler\n      debug("transport is not open, discarding packets");\n    }\n  }\n\n  /**\n   * Called upon open\n   *\n   * @api private\n   */\n  onOpen() {\n    this.readyState = "open";\n    this.writable = true;\n    this.emit("open");\n  }\n\n  /**\n   * Called with data.\n   *\n   * @param {String} data\n   * @api private\n   */\n  onData(data) {\n    const packet = parser.decodePacket(data, this.socket.binaryType);\n    this.onPacket(packet);\n  }\n\n  /**\n   * Called with a decoded packet.\n   */\n  onPacket(packet) {\n    this.emit("packet", packet);\n  }\n\n  /**\n   * Called upon close.\n   *\n   * @api private\n   */\n  onClose() {\n    this.readyState = "closed";\n    this.emit("close");\n  }\n}\n\nmodule.exports = Transport;\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/engine.io-client/lib/transport.js?')},"./node_modules/engine.io-client/lib/transports/index.js":(__unused_webpack_module,exports,__webpack_require__)=>{eval('const XMLHttpRequest = __webpack_require__(/*! ../../contrib/xmlhttprequest-ssl/XMLHttpRequest */ "./node_modules/engine.io-client/lib/xmlhttprequest.js");\nconst XHR = __webpack_require__(/*! ./polling-xhr */ "./node_modules/engine.io-client/lib/transports/polling-xhr.js");\nconst JSONP = __webpack_require__(/*! ./polling-jsonp */ "./node_modules/engine.io-client/lib/transports/polling-jsonp.js");\nconst websocket = __webpack_require__(/*! ./websocket */ "./node_modules/engine.io-client/lib/transports/websocket.js");\n\nexports.polling = polling;\nexports.websocket = websocket;\n\n/**\n * Polling transport polymorphic constructor.\n * Decides on xhr vs jsonp based on feature detection.\n *\n * @api private\n */\n\nfunction polling(opts) {\n  let xhr;\n  let xd = false;\n  let xs = false;\n  const jsonp = false !== opts.jsonp;\n\n  if (typeof location !== "undefined") {\n    const isSSL = "https:" === location.protocol;\n    let port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    xd = opts.hostname !== location.hostname || port !== opts.port;\n    xs = opts.secure !== isSSL;\n  }\n\n  opts.xdomain = xd;\n  opts.xscheme = xs;\n  xhr = new XMLHttpRequest(opts);\n\n  if ("open" in xhr && !opts.forceJSONP) {\n    return new XHR(opts);\n  } else {\n    if (!jsonp) throw new Error("JSONP disabled");\n    return new JSONP(opts);\n  }\n}\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/engine.io-client/lib/transports/index.js?')},"./node_modules/engine.io-client/lib/transports/polling-jsonp.js":(module,__unused_webpack_exports,__webpack_require__)=>{eval('const Polling = __webpack_require__(/*! ./polling */ "./node_modules/engine.io-client/lib/transports/polling.js");\nconst globalThis = __webpack_require__(/*! ../globalThis */ "./node_modules/engine.io-client/lib/globalThis.browser.js");\n\nconst rNewline = /\\n/g;\nconst rEscapedNewline = /\\\\n/g;\n\n/**\n * Global JSONP callbacks.\n */\n\nlet callbacks;\n\nclass JSONPPolling extends Polling {\n  /**\n   * JSONP Polling constructor.\n   *\n   * @param {Object} opts.\n   * @api public\n   */\n  constructor(opts) {\n    super(opts);\n\n    this.query = this.query || {};\n\n    // define global callbacks array if not present\n    // we do this here (lazily) to avoid unneeded global pollution\n    if (!callbacks) {\n      // we need to consider multiple engines in the same page\n      callbacks = globalThis.___eio = globalThis.___eio || [];\n    }\n\n    // callback identifier\n    this.index = callbacks.length;\n\n    // add callback to jsonp global\n    callbacks.push(this.onData.bind(this));\n\n    // append to query string\n    this.query.j = this.index;\n  }\n\n  /**\n   * JSONP only supports binary as base64 encoded strings\n   */\n  get supportsBinary() {\n    return false;\n  }\n\n  /**\n   * Closes the socket.\n   *\n   * @api private\n   */\n  doClose() {\n    if (this.script) {\n      // prevent spurious errors from being emitted when the window is unloaded\n      this.script.onerror = () => {};\n      this.script.parentNode.removeChild(this.script);\n      this.script = null;\n    }\n\n    if (this.form) {\n      this.form.parentNode.removeChild(this.form);\n      this.form = null;\n      this.iframe = null;\n    }\n\n    super.doClose();\n  }\n\n  /**\n   * Starts a poll cycle.\n   *\n   * @api private\n   */\n  doPoll() {\n    const script = document.createElement("script");\n\n    if (this.script) {\n      this.script.parentNode.removeChild(this.script);\n      this.script = null;\n    }\n\n    script.async = true;\n    script.src = this.uri();\n    script.onerror = e => {\n      this.onError("jsonp poll error", e);\n    };\n\n    const insertAt = document.getElementsByTagName("script")[0];\n    if (insertAt) {\n      insertAt.parentNode.insertBefore(script, insertAt);\n    } else {\n      (document.head || document.body).appendChild(script);\n    }\n    this.script = script;\n\n    const isUAgecko =\n      "undefined" !== typeof navigator && /gecko/i.test(navigator.userAgent);\n\n    if (isUAgecko) {\n      setTimeout(function() {\n        const iframe = document.createElement("iframe");\n        document.body.appendChild(iframe);\n        document.body.removeChild(iframe);\n      }, 100);\n    }\n  }\n\n  /**\n   * Writes with a hidden iframe.\n   *\n   * @param {String} data to send\n   * @param {Function} called upon flush.\n   * @api private\n   */\n  doWrite(data, fn) {\n    let iframe;\n\n    if (!this.form) {\n      const form = document.createElement("form");\n      const area = document.createElement("textarea");\n      const id = (this.iframeId = "eio_iframe_" + this.index);\n\n      form.className = "socketio";\n      form.style.position = "absolute";\n      form.style.top = "-1000px";\n      form.style.left = "-1000px";\n      form.target = id;\n      form.method = "POST";\n      form.setAttribute("accept-charset", "utf-8");\n      area.name = "d";\n      form.appendChild(area);\n      document.body.appendChild(form);\n\n      this.form = form;\n      this.area = area;\n    }\n\n    this.form.action = this.uri();\n\n    function complete() {\n      initIframe();\n      fn();\n    }\n\n    const initIframe = () => {\n      if (this.iframe) {\n        try {\n          this.form.removeChild(this.iframe);\n        } catch (e) {\n          this.onError("jsonp polling iframe removal error", e);\n        }\n      }\n\n      try {\n        // ie6 dynamic iframes with target="" support (thanks Chris Lambacher)\n        const html = \'<iframe src="javascript:0" name="\' + this.iframeId + \'">\';\n        iframe = document.createElement(html);\n      } catch (e) {\n        iframe = document.createElement("iframe");\n        iframe.name = this.iframeId;\n        iframe.src = "javascript:0";\n      }\n\n      iframe.id = this.iframeId;\n\n      this.form.appendChild(iframe);\n      this.iframe = iframe;\n    };\n\n    initIframe();\n\n    // escape \\n to prevent it from being converted into \\r\\n by some UAs\n    // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n    data = data.replace(rEscapedNewline, "\\\\\\n");\n    this.area.value = data.replace(rNewline, "\\\\n");\n\n    try {\n      this.form.submit();\n    } catch (e) {}\n\n    if (this.iframe.attachEvent) {\n      this.iframe.onreadystatechange = () => {\n        if (this.iframe.readyState === "complete") {\n          complete();\n        }\n      };\n    } else {\n      this.iframe.onload = complete;\n    }\n  }\n}\n\nmodule.exports = JSONPPolling;\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/engine.io-client/lib/transports/polling-jsonp.js?')},"./node_modules/engine.io-client/lib/transports/polling-xhr.js":(module,__unused_webpack_exports,__webpack_require__)=>{eval('/* global attachEvent */\n\nconst XMLHttpRequest = __webpack_require__(/*! ../../contrib/xmlhttprequest-ssl/XMLHttpRequest */ "./node_modules/engine.io-client/lib/xmlhttprequest.js");\nconst Polling = __webpack_require__(/*! ./polling */ "./node_modules/engine.io-client/lib/transports/polling.js");\nconst Emitter = __webpack_require__(/*! component-emitter */ "./node_modules/component-emitter/index.js");\nconst { pick } = __webpack_require__(/*! ../util */ "./node_modules/engine.io-client/lib/util.js");\nconst globalThis = __webpack_require__(/*! ../globalThis */ "./node_modules/engine.io-client/lib/globalThis.browser.js");\n\nconst debug = __webpack_require__(/*! debug */ "./node_modules/engine.io-client/node_modules/debug/src/browser.js")("engine.io-client:polling-xhr");\n\n/**\n * Empty function\n */\n\nfunction empty() {}\n\nconst hasXHR2 = (function() {\n  const xhr = new XMLHttpRequest({ xdomain: false });\n  return null != xhr.responseType;\n})();\n\nclass XHR extends Polling {\n  /**\n   * XHR Polling constructor.\n   *\n   * @param {Object} opts\n   * @api public\n   */\n  constructor(opts) {\n    super(opts);\n\n    if (typeof location !== "undefined") {\n      const isSSL = "https:" === location.protocol;\n      let port = location.port;\n\n      // some user agents have empty `location.port`\n      if (!port) {\n        port = isSSL ? 443 : 80;\n      }\n\n      this.xd =\n        (typeof location !== "undefined" &&\n          opts.hostname !== location.hostname) ||\n        port !== opts.port;\n      this.xs = opts.secure !== isSSL;\n    }\n    /**\n     * XHR supports binary\n     */\n    const forceBase64 = opts && opts.forceBase64;\n    this.supportsBinary = hasXHR2 && !forceBase64;\n  }\n\n  /**\n   * Creates a request.\n   *\n   * @param {String} method\n   * @api private\n   */\n  request(opts = {}) {\n    Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n    return new Request(this.uri(), opts);\n  }\n\n  /**\n   * Sends data.\n   *\n   * @param {String} data to send.\n   * @param {Function} called upon flush.\n   * @api private\n   */\n  doWrite(data, fn) {\n    const req = this.request({\n      method: "POST",\n      data: data\n    });\n    req.on("success", fn);\n    req.on("error", err => {\n      this.onError("xhr post error", err);\n    });\n  }\n\n  /**\n   * Starts a poll cycle.\n   *\n   * @api private\n   */\n  doPoll() {\n    debug("xhr poll");\n    const req = this.request();\n    req.on("data", this.onData.bind(this));\n    req.on("error", err => {\n      this.onError("xhr poll error", err);\n    });\n    this.pollXhr = req;\n  }\n}\n\nclass Request extends Emitter {\n  /**\n   * Request constructor\n   *\n   * @param {Object} options\n   * @api public\n   */\n  constructor(uri, opts) {\n    super();\n    this.opts = opts;\n\n    this.method = opts.method || "GET";\n    this.uri = uri;\n    this.async = false !== opts.async;\n    this.data = undefined !== opts.data ? opts.data : null;\n\n    this.create();\n  }\n\n  /**\n   * Creates the XHR object and sends the request.\n   *\n   * @api private\n   */\n  create() {\n    const opts = pick(\n      this.opts,\n      "agent",\n      "enablesXDR",\n      "pfx",\n      "key",\n      "passphrase",\n      "cert",\n      "ca",\n      "ciphers",\n      "rejectUnauthorized",\n      "autoUnref"\n    );\n    opts.xdomain = !!this.opts.xd;\n    opts.xscheme = !!this.opts.xs;\n\n    const xhr = (this.xhr = new XMLHttpRequest(opts));\n\n    try {\n      debug("xhr open %s: %s", this.method, this.uri);\n      xhr.open(this.method, this.uri, this.async);\n      try {\n        if (this.opts.extraHeaders) {\n          xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n          for (let i in this.opts.extraHeaders) {\n            if (this.opts.extraHeaders.hasOwnProperty(i)) {\n              xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n            }\n          }\n        }\n      } catch (e) {}\n\n      if ("POST" === this.method) {\n        try {\n          xhr.setRequestHeader("Content-type", "text/plain;charset=UTF-8");\n        } catch (e) {}\n      }\n\n      try {\n        xhr.setRequestHeader("Accept", "*/*");\n      } catch (e) {}\n\n      // ie6 check\n      if ("withCredentials" in xhr) {\n        xhr.withCredentials = this.opts.withCredentials;\n      }\n\n      if (this.opts.requestTimeout) {\n        xhr.timeout = this.opts.requestTimeout;\n      }\n\n      if (this.hasXDR()) {\n        xhr.onload = () => {\n          this.onLoad();\n        };\n        xhr.onerror = () => {\n          this.onError(xhr.responseText);\n        };\n      } else {\n        xhr.onreadystatechange = () => {\n          if (4 !== xhr.readyState) return;\n          if (200 === xhr.status || 1223 === xhr.status) {\n            this.onLoad();\n          } else {\n            // make sure the `error` event handler that\'s user-set\n            // does not throw in the same tick and gets caught here\n            setTimeout(() => {\n              this.onError(typeof xhr.status === "number" ? xhr.status : 0);\n            }, 0);\n          }\n        };\n      }\n\n      debug("xhr data %s", this.data);\n      xhr.send(this.data);\n    } catch (e) {\n      // Need to defer since .create() is called directly from the constructor\n      // and thus the \'error\' event can only be only bound *after* this exception\n      // occurs.  Therefore, also, we cannot throw here at all.\n      setTimeout(() => {\n        this.onError(e);\n      }, 0);\n      return;\n    }\n\n    if (typeof document !== "undefined") {\n      this.index = Request.requestsCount++;\n      Request.requests[this.index] = this;\n    }\n  }\n\n  /**\n   * Called upon successful response.\n   *\n   * @api private\n   */\n  onSuccess() {\n    this.emit("success");\n    this.cleanup();\n  }\n\n  /**\n   * Called if we have data.\n   *\n   * @api private\n   */\n  onData(data) {\n    this.emit("data", data);\n    this.onSuccess();\n  }\n\n  /**\n   * Called upon error.\n   *\n   * @api private\n   */\n  onError(err) {\n    this.emit("error", err);\n    this.cleanup(true);\n  }\n\n  /**\n   * Cleans up house.\n   *\n   * @api private\n   */\n  cleanup(fromError) {\n    if ("undefined" === typeof this.xhr || null === this.xhr) {\n      return;\n    }\n    // xmlhttprequest\n    if (this.hasXDR()) {\n      this.xhr.onload = this.xhr.onerror = empty;\n    } else {\n      this.xhr.onreadystatechange = empty;\n    }\n\n    if (fromError) {\n      try {\n        this.xhr.abort();\n      } catch (e) {}\n    }\n\n    if (typeof document !== "undefined") {\n      delete Request.requests[this.index];\n    }\n\n    this.xhr = null;\n  }\n\n  /**\n   * Called upon load.\n   *\n   * @api private\n   */\n  onLoad() {\n    const data = this.xhr.responseText;\n    if (data !== null) {\n      this.onData(data);\n    }\n  }\n\n  /**\n   * Check if it has XDomainRequest.\n   *\n   * @api private\n   */\n  hasXDR() {\n    return typeof XDomainRequest !== "undefined" && !this.xs && this.enablesXDR;\n  }\n\n  /**\n   * Aborts the request.\n   *\n   * @api public\n   */\n  abort() {\n    this.cleanup();\n  }\n}\n\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\nRequest.requestsCount = 0;\nRequest.requests = {};\n\nif (typeof document !== "undefined") {\n  if (typeof attachEvent === "function") {\n    attachEvent("onunload", unloadHandler);\n  } else if (typeof addEventListener === "function") {\n    const terminationEvent = "onpagehide" in globalThis ? "pagehide" : "unload";\n    addEventListener(terminationEvent, unloadHandler, false);\n  }\n}\n\nfunction unloadHandler() {\n  for (let i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}\n\nmodule.exports = XHR;\nmodule.exports.Request = Request;\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/engine.io-client/lib/transports/polling-xhr.js?')},"./node_modules/engine.io-client/lib/transports/polling.js":(module,__unused_webpack_exports,__webpack_require__)=>{eval('const Transport = __webpack_require__(/*! ../transport */ "./node_modules/engine.io-client/lib/transport.js");\nconst parseqs = __webpack_require__(/*! parseqs */ "./node_modules/parseqs/index.js");\nconst parser = __webpack_require__(/*! engine.io-parser */ "./node_modules/engine.io-parser/lib/index.js");\nconst yeast = __webpack_require__(/*! yeast */ "./node_modules/yeast/index.js");\n\nconst debug = __webpack_require__(/*! debug */ "./node_modules/engine.io-client/node_modules/debug/src/browser.js")("engine.io-client:polling");\n\nclass Polling extends Transport {\n  /**\n   * Transport name.\n   */\n  get name() {\n    return "polling";\n  }\n\n  /**\n   * Opens the socket (triggers polling). We write a PING message to determine\n   * when the transport is open.\n   *\n   * @api private\n   */\n  doOpen() {\n    this.poll();\n  }\n\n  /**\n   * Pauses polling.\n   *\n   * @param {Function} callback upon buffers are flushed and transport is paused\n   * @api private\n   */\n  pause(onPause) {\n    this.readyState = "pausing";\n\n    const pause = () => {\n      debug("paused");\n      this.readyState = "paused";\n      onPause();\n    };\n\n    if (this.polling || !this.writable) {\n      let total = 0;\n\n      if (this.polling) {\n        debug("we are currently polling - waiting to pause");\n        total++;\n        this.once("pollComplete", function() {\n          debug("pre-pause polling complete");\n          --total || pause();\n        });\n      }\n\n      if (!this.writable) {\n        debug("we are currently writing - waiting to pause");\n        total++;\n        this.once("drain", function() {\n          debug("pre-pause writing complete");\n          --total || pause();\n        });\n      }\n    } else {\n      pause();\n    }\n  }\n\n  /**\n   * Starts polling cycle.\n   *\n   * @api public\n   */\n  poll() {\n    debug("polling");\n    this.polling = true;\n    this.doPoll();\n    this.emit("poll");\n  }\n\n  /**\n   * Overloads onData to detect payloads.\n   *\n   * @api private\n   */\n  onData(data) {\n    debug("polling got data %s", data);\n    const callback = packet => {\n      // if its the first message we consider the transport open\n      if ("opening" === this.readyState && packet.type === "open") {\n        this.onOpen();\n      }\n\n      // if its a close packet, we close the ongoing requests\n      if ("close" === packet.type) {\n        this.onClose();\n        return false;\n      }\n\n      // otherwise bypass onData and handle the message\n      this.onPacket(packet);\n    };\n\n    // decode payload\n    parser.decodePayload(data, this.socket.binaryType).forEach(callback);\n\n    // if an event did not trigger closing\n    if ("closed" !== this.readyState) {\n      // if we got data we\'re not polling\n      this.polling = false;\n      this.emit("pollComplete");\n\n      if ("open" === this.readyState) {\n        this.poll();\n      } else {\n        debug(\'ignoring poll - transport state "%s"\', this.readyState);\n      }\n    }\n  }\n\n  /**\n   * For polling, send a close packet.\n   *\n   * @api private\n   */\n  doClose() {\n    const close = () => {\n      debug("writing close packet");\n      this.write([{ type: "close" }]);\n    };\n\n    if ("open" === this.readyState) {\n      debug("transport open - closing");\n      close();\n    } else {\n      // in case we\'re trying to close while\n      // handshaking is in progress (GH-164)\n      debug("transport not open - deferring close");\n      this.once("open", close);\n    }\n  }\n\n  /**\n   * Writes a packets payload.\n   *\n   * @param {Array} data packets\n   * @param {Function} drain callback\n   * @api private\n   */\n  write(packets) {\n    this.writable = false;\n\n    parser.encodePayload(packets, data => {\n      this.doWrite(data, () => {\n        this.writable = true;\n        this.emit("drain");\n      });\n    });\n  }\n\n  /**\n   * Generates uri for connection.\n   *\n   * @api private\n   */\n  uri() {\n    let query = this.query || {};\n    const schema = this.opts.secure ? "https" : "http";\n    let port = "";\n\n    // cache busting is forced\n    if (false !== this.opts.timestampRequests) {\n      query[this.opts.timestampParam] = yeast();\n    }\n\n    if (!this.supportsBinary && !query.sid) {\n      query.b64 = 1;\n    }\n\n    query = parseqs.encode(query);\n\n    // avoid port if default for schema\n    if (\n      this.opts.port &&\n      (("https" === schema && Number(this.opts.port) !== 443) ||\n        ("http" === schema && Number(this.opts.port) !== 80))\n    ) {\n      port = ":" + this.opts.port;\n    }\n\n    // prepend ? to query\n    if (query.length) {\n      query = "?" + query;\n    }\n\n    const ipv6 = this.opts.hostname.indexOf(":") !== -1;\n    return (\n      schema +\n      "://" +\n      (ipv6 ? "[" + this.opts.hostname + "]" : this.opts.hostname) +\n      port +\n      this.opts.path +\n      query\n    );\n  }\n}\n\nmodule.exports = Polling;\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/engine.io-client/lib/transports/polling.js?')},"./node_modules/engine.io-client/lib/transports/websocket-constructor.browser.js":(module,__unused_webpack_exports,__webpack_require__)=>{eval('const globalThis = __webpack_require__(/*! ../globalThis */ "./node_modules/engine.io-client/lib/globalThis.browser.js");\nconst nextTick = (() => {\n  const isPromiseAvailable =\n    typeof Promise === "function" && typeof Promise.resolve === "function";\n  if (isPromiseAvailable) {\n    return cb => Promise.resolve().then(cb);\n  } else {\n    return cb => setTimeout(cb, 0);\n  }\n})();\n\nmodule.exports = {\n  WebSocket: globalThis.WebSocket || globalThis.MozWebSocket,\n  usingBrowserWebSocket: true,\n  defaultBinaryType: "arraybuffer",\n  nextTick\n};\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/engine.io-client/lib/transports/websocket-constructor.browser.js?')},"./node_modules/engine.io-client/lib/transports/websocket.js":(module,__unused_webpack_exports,__webpack_require__)=>{eval('const Transport = __webpack_require__(/*! ../transport */ "./node_modules/engine.io-client/lib/transport.js");\nconst parser = __webpack_require__(/*! engine.io-parser */ "./node_modules/engine.io-parser/lib/index.js");\nconst parseqs = __webpack_require__(/*! parseqs */ "./node_modules/parseqs/index.js");\nconst yeast = __webpack_require__(/*! yeast */ "./node_modules/yeast/index.js");\nconst { pick } = __webpack_require__(/*! ../util */ "./node_modules/engine.io-client/lib/util.js");\nconst {\n  WebSocket,\n  usingBrowserWebSocket,\n  defaultBinaryType,\n  nextTick\n} = __webpack_require__(/*! ./websocket-constructor */ "./node_modules/engine.io-client/lib/transports/websocket-constructor.browser.js");\n\nconst debug = __webpack_require__(/*! debug */ "./node_modules/engine.io-client/node_modules/debug/src/browser.js")("engine.io-client:websocket");\n\n// detect ReactNative environment\nconst isReactNative =\n  typeof navigator !== "undefined" &&\n  typeof navigator.product === "string" &&\n  navigator.product.toLowerCase() === "reactnative";\n\nclass WS extends Transport {\n  /**\n   * WebSocket transport constructor.\n   *\n   * @api {Object} connection options\n   * @api public\n   */\n  constructor(opts) {\n    super(opts);\n\n    this.supportsBinary = !opts.forceBase64;\n  }\n\n  /**\n   * Transport name.\n   *\n   * @api public\n   */\n  get name() {\n    return "websocket";\n  }\n\n  /**\n   * Opens socket.\n   *\n   * @api private\n   */\n  doOpen() {\n    if (!this.check()) {\n      // let probe timeout\n      return;\n    }\n\n    const uri = this.uri();\n    const protocols = this.opts.protocols;\n\n    // React Native only supports the \'headers\' option, and will print a warning if anything else is passed\n    const opts = isReactNative\n      ? {}\n      : pick(\n          this.opts,\n          "agent",\n          "perMessageDeflate",\n          "pfx",\n          "key",\n          "passphrase",\n          "cert",\n          "ca",\n          "ciphers",\n          "rejectUnauthorized",\n          "localAddress",\n          "protocolVersion",\n          "origin",\n          "maxPayload",\n          "family",\n          "checkServerIdentity"\n        );\n\n    if (this.opts.extraHeaders) {\n      opts.headers = this.opts.extraHeaders;\n    }\n\n    try {\n      this.ws =\n        usingBrowserWebSocket && !isReactNative\n          ? protocols\n            ? new WebSocket(uri, protocols)\n            : new WebSocket(uri)\n          : new WebSocket(uri, protocols, opts);\n    } catch (err) {\n      return this.emit("error", err);\n    }\n\n    this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n\n    this.addEventListeners();\n  }\n\n  /**\n   * Adds event listeners to the socket\n   *\n   * @api private\n   */\n  addEventListeners() {\n    this.ws.onopen = () => {\n      if (this.opts.autoUnref) {\n        this.ws._socket.unref();\n      }\n      this.onOpen();\n    };\n    this.ws.onclose = this.onClose.bind(this);\n    this.ws.onmessage = ev => this.onData(ev.data);\n    this.ws.onerror = e => this.onError("websocket error", e);\n  }\n\n  /**\n   * Writes data to socket.\n   *\n   * @param {Array} array of packets.\n   * @api private\n   */\n  write(packets) {\n    this.writable = false;\n\n    // encodePacket efficient as it uses WS framing\n    // no need for encodePayload\n    for (let i = 0; i < packets.length; i++) {\n      const packet = packets[i];\n      const lastPacket = i === packets.length - 1;\n\n      parser.encodePacket(packet, this.supportsBinary, data => {\n        // always create a new object (GH-437)\n        const opts = {};\n        if (!usingBrowserWebSocket) {\n          if (packet.options) {\n            opts.compress = packet.options.compress;\n          }\n\n          if (this.opts.perMessageDeflate) {\n            const len =\n              "string" === typeof data ? Buffer.byteLength(data) : data.length;\n            if (len < this.opts.perMessageDeflate.threshold) {\n              opts.compress = false;\n            }\n          }\n        }\n\n        // Sometimes the websocket has already been closed but the browser didn\'t\n        // have a chance of informing us about it yet, in that case send will\n        // throw an error\n        try {\n          if (usingBrowserWebSocket) {\n            // TypeError is thrown when passing the second argument on Safari\n            this.ws.send(data);\n          } else {\n            this.ws.send(data, opts);\n          }\n        } catch (e) {\n          debug("websocket closed before onclose event");\n        }\n\n        if (lastPacket) {\n          // fake drain\n          // defer to next tick to allow Socket to clear writeBuffer\n          nextTick(() => {\n            this.writable = true;\n            this.emit("drain");\n          });\n        }\n      });\n    }\n  }\n\n  /**\n   * Called upon close\n   *\n   * @api private\n   */\n  onClose() {\n    Transport.prototype.onClose.call(this);\n  }\n\n  /**\n   * Closes socket.\n   *\n   * @api private\n   */\n  doClose() {\n    if (typeof this.ws !== "undefined") {\n      this.ws.close();\n      this.ws = null;\n    }\n  }\n\n  /**\n   * Generates uri for connection.\n   *\n   * @api private\n   */\n  uri() {\n    let query = this.query || {};\n    const schema = this.opts.secure ? "wss" : "ws";\n    let port = "";\n\n    // avoid port if default for schema\n    if (\n      this.opts.port &&\n      (("wss" === schema && Number(this.opts.port) !== 443) ||\n        ("ws" === schema && Number(this.opts.port) !== 80))\n    ) {\n      port = ":" + this.opts.port;\n    }\n\n    // append timestamp to URI\n    if (this.opts.timestampRequests) {\n      query[this.opts.timestampParam] = yeast();\n    }\n\n    // communicate binary support capabilities\n    if (!this.supportsBinary) {\n      query.b64 = 1;\n    }\n\n    query = parseqs.encode(query);\n\n    // prepend ? to query\n    if (query.length) {\n      query = "?" + query;\n    }\n\n    const ipv6 = this.opts.hostname.indexOf(":") !== -1;\n    return (\n      schema +\n      "://" +\n      (ipv6 ? "[" + this.opts.hostname + "]" : this.opts.hostname) +\n      port +\n      this.opts.path +\n      query\n    );\n  }\n\n  /**\n   * Feature detection for WebSocket.\n   *\n   * @return {Boolean} whether this transport is available.\n   * @api public\n   */\n  check() {\n    return (\n      !!WebSocket &&\n      !("__initialize" in WebSocket && this.name === WS.prototype.name)\n    );\n  }\n}\n\nmodule.exports = WS;\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/engine.io-client/lib/transports/websocket.js?')},"./node_modules/engine.io-client/lib/util.js":module=>{eval("module.exports.pick = (obj, ...attr) => {\n  return attr.reduce((acc, k) => {\n    if (obj.hasOwnProperty(k)) {\n      acc[k] = obj[k];\n    }\n    return acc;\n  }, {});\n};\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/engine.io-client/lib/util.js?")},"./node_modules/engine.io-client/lib/xmlhttprequest.js":(module,__unused_webpack_exports,__webpack_require__)=>{eval('// browser shim for xmlhttprequest module\n\nconst hasCORS = __webpack_require__(/*! has-cors */ "./node_modules/has-cors/index.js");\nconst globalThis = __webpack_require__(/*! ./globalThis */ "./node_modules/engine.io-client/lib/globalThis.browser.js");\n\nmodule.exports = function(opts) {\n  const xdomain = opts.xdomain;\n\n  // scheme must be same when usign XDomainRequest\n  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n  const xscheme = opts.xscheme;\n\n  // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\n  // https://github.com/Automattic/engine.io-client/pull/217\n  const enablesXDR = opts.enablesXDR;\n\n  // XMLHttpRequest can be disabled on IE\n  try {\n    if ("undefined" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n      return new XMLHttpRequest();\n    }\n  } catch (e) {}\n\n  // Use XDomainRequest for IE8 if enablesXDR is true\n  // because loading bar keeps flashing when using jsonp-polling\n  // https://github.com/yujiosaka/socke.io-ie8-loading-example\n  try {\n    if ("undefined" !== typeof XDomainRequest && !xscheme && enablesXDR) {\n      return new XDomainRequest();\n    }\n  } catch (e) {}\n\n  if (!xdomain) {\n    try {\n      return new globalThis[["Active"].concat("Object").join("X")](\n        "Microsoft.XMLHTTP"\n      );\n    } catch (e) {}\n  }\n};\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/engine.io-client/lib/xmlhttprequest.js?')},"./node_modules/engine.io-client/node_modules/debug/src/browser.js":(module,exports,__webpack_require__)=>{eval("/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = __webpack_require__(/*! ./common */ \"./node_modules/engine.io-client/node_modules/debug/src/common.js\")(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/engine.io-client/node_modules/debug/src/browser.js?")},"./node_modules/engine.io-client/node_modules/debug/src/common.js":(module,__unused_webpack_exports,__webpack_require__)=>{eval("\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = __webpack_require__(/*! ms */ \"./node_modules/engine.io-client/node_modules/ms/index.js\");\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/engine.io-client/node_modules/debug/src/common.js?")},"./node_modules/engine.io-client/node_modules/ms/index.js":module=>{eval("/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/engine.io-client/node_modules/ms/index.js?")},"./node_modules/engine.io-parser/lib/commons.js":module=>{eval('const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES["open"] = "0";\nPACKET_TYPES["close"] = "1";\nPACKET_TYPES["ping"] = "2";\nPACKET_TYPES["pong"] = "3";\nPACKET_TYPES["message"] = "4";\nPACKET_TYPES["upgrade"] = "5";\nPACKET_TYPES["noop"] = "6";\n\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n  PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\n\nconst ERROR_PACKET = { type: "error", data: "parser error" };\n\nmodule.exports = {\n  PACKET_TYPES,\n  PACKET_TYPES_REVERSE,\n  ERROR_PACKET\n};\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/engine.io-parser/lib/commons.js?')},"./node_modules/engine.io-parser/lib/decodePacket.browser.js":(module,__unused_webpack_exports,__webpack_require__)=>{eval('const { PACKET_TYPES_REVERSE, ERROR_PACKET } = __webpack_require__(/*! ./commons */ "./node_modules/engine.io-parser/lib/commons.js");\n\nconst withNativeArrayBuffer = typeof ArrayBuffer === "function";\n\nlet base64decoder;\nif (withNativeArrayBuffer) {\n  base64decoder = __webpack_require__(/*! base64-arraybuffer */ "./node_modules/base64-arraybuffer/lib/base64-arraybuffer.js");\n}\n\nconst decodePacket = (encodedPacket, binaryType) => {\n  if (typeof encodedPacket !== "string") {\n    return {\n      type: "message",\n      data: mapBinary(encodedPacket, binaryType)\n    };\n  }\n  const type = encodedPacket.charAt(0);\n  if (type === "b") {\n    return {\n      type: "message",\n      data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n    };\n  }\n  const packetType = PACKET_TYPES_REVERSE[type];\n  if (!packetType) {\n    return ERROR_PACKET;\n  }\n  return encodedPacket.length > 1\n    ? {\n        type: PACKET_TYPES_REVERSE[type],\n        data: encodedPacket.substring(1)\n      }\n    : {\n        type: PACKET_TYPES_REVERSE[type]\n      };\n};\n\nconst decodeBase64Packet = (data, binaryType) => {\n  if (base64decoder) {\n    const decoded = base64decoder.decode(data);\n    return mapBinary(decoded, binaryType);\n  } else {\n    return { base64: true, data }; // fallback for old browsers\n  }\n};\n\nconst mapBinary = (data, binaryType) => {\n  switch (binaryType) {\n    case "blob":\n      return data instanceof ArrayBuffer ? new Blob([data]) : data;\n    case "arraybuffer":\n    default:\n      return data; // assuming the data is already an ArrayBuffer\n  }\n};\n\nmodule.exports = decodePacket;\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/engine.io-parser/lib/decodePacket.browser.js?')},"./node_modules/engine.io-parser/lib/encodePacket.browser.js":(module,__unused_webpack_exports,__webpack_require__)=>{eval('const { PACKET_TYPES } = __webpack_require__(/*! ./commons */ "./node_modules/engine.io-parser/lib/commons.js");\n\nconst withNativeBlob =\n  typeof Blob === "function" ||\n  (typeof Blob !== "undefined" &&\n    Object.prototype.toString.call(Blob) === "[object BlobConstructor]");\nconst withNativeArrayBuffer = typeof ArrayBuffer === "function";\n\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n  return typeof ArrayBuffer.isView === "function"\n    ? ArrayBuffer.isView(obj)\n    : obj && obj.buffer instanceof ArrayBuffer;\n};\n\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n  if (withNativeBlob && data instanceof Blob) {\n    if (supportsBinary) {\n      return callback(data);\n    } else {\n      return encodeBlobAsBase64(data, callback);\n    }\n  } else if (\n    withNativeArrayBuffer &&\n    (data instanceof ArrayBuffer || isView(data))\n  ) {\n    if (supportsBinary) {\n      return callback(data instanceof ArrayBuffer ? data : data.buffer);\n    } else {\n      return encodeBlobAsBase64(new Blob([data]), callback);\n    }\n  }\n  // plain string\n  return callback(PACKET_TYPES[type] + (data || ""));\n};\n\nconst encodeBlobAsBase64 = (data, callback) => {\n  const fileReader = new FileReader();\n  fileReader.onload = function() {\n    const content = fileReader.result.split(",")[1];\n    callback("b" + content);\n  };\n  return fileReader.readAsDataURL(data);\n};\n\nmodule.exports = encodePacket;\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/engine.io-parser/lib/encodePacket.browser.js?')},"./node_modules/engine.io-parser/lib/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{eval('const encodePacket = __webpack_require__(/*! ./encodePacket */ "./node_modules/engine.io-parser/lib/encodePacket.browser.js");\nconst decodePacket = __webpack_require__(/*! ./decodePacket */ "./node_modules/engine.io-parser/lib/decodePacket.browser.js");\n\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\n\nconst encodePayload = (packets, callback) => {\n  // some packets may be added to the array while encoding, so the initial length must be saved\n  const length = packets.length;\n  const encodedPackets = new Array(length);\n  let count = 0;\n\n  packets.forEach((packet, i) => {\n    // force base64 encoding for binary packets\n    encodePacket(packet, false, encodedPacket => {\n      encodedPackets[i] = encodedPacket;\n      if (++count === length) {\n        callback(encodedPackets.join(SEPARATOR));\n      }\n    });\n  });\n};\n\nconst decodePayload = (encodedPayload, binaryType) => {\n  const encodedPackets = encodedPayload.split(SEPARATOR);\n  const packets = [];\n  for (let i = 0; i < encodedPackets.length; i++) {\n    const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n    packets.push(decodedPacket);\n    if (decodedPacket.type === "error") {\n      break;\n    }\n  }\n  return packets;\n};\n\nmodule.exports = {\n  protocol: 4,\n  encodePacket,\n  encodePayload,\n  decodePacket,\n  decodePayload\n};\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/engine.io-parser/lib/index.js?')},"./node_modules/has-cors/index.js":module=>{eval("\n/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\n\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n    'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/has-cors/index.js?")},"./node_modules/parseqs/index.js":(__unused_webpack_module,exports)=>{eval("/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\n\nexports.encode = function (obj) {\n  var str = '';\n\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      if (str.length) str += '&';\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n    }\n  }\n\n  return str;\n};\n\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\n\nexports.decode = function(qs){\n  var qry = {};\n  var pairs = qs.split('&');\n  for (var i = 0, l = pairs.length; i < l; i++) {\n    var pair = pairs[i].split('=');\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n  }\n  return qry;\n};\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/parseqs/index.js?")},"./node_modules/parseuri/index.js":module=>{eval("/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\n\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nvar parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\n\nmodule.exports = function parseuri(str) {\n    var src = str,\n        b = str.indexOf('['),\n        e = str.indexOf(']');\n\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n\n    var m = re.exec(str || ''),\n        uri = {},\n        i = 14;\n\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n\n    return uri;\n};\n\nfunction pathNames(obj, path) {\n    var regx = /\\/{2,9}/g,\n        names = path.replace(regx, \"/\").split(\"/\");\n\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.substr(path.length - 1, 1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n\n    return names;\n}\n\nfunction queryKey(uri, query) {\n    var data = {};\n\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n\n    return data;\n}\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/parseuri/index.js?")},"./node_modules/socket.io-client/build/index.js":(module,exports,__webpack_require__)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.io = exports.Socket = exports.Manager = exports.protocol = void 0;\nconst url_1 = __webpack_require__(/*! ./url */ "./node_modules/socket.io-client/build/url.js");\nconst manager_1 = __webpack_require__(/*! ./manager */ "./node_modules/socket.io-client/build/manager.js");\nconst debug = __webpack_require__(/*! debug */ "./node_modules/socket.io-client/node_modules/debug/src/browser.js")("socket.io-client");\n/**\n * Module exports.\n */\nmodule.exports = exports = lookup;\n/**\n * Managers cache.\n */\nconst cache = (exports.managers = {});\nfunction lookup(uri, opts) {\n    if (typeof uri === "object") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url_1.url(uri, opts.path || "/socket.io");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id]["nsps"];\n    const newConnection = opts.forceNew ||\n        opts["force new connection"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        debug("ignoring socket cache for %s", source);\n        io = new manager_1.Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            debug("new io instance for %s", source);\n            cache[id] = new manager_1.Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\nexports.io = lookup;\n/**\n * Protocol version.\n *\n * @public\n */\nvar socket_io_parser_1 = __webpack_require__(/*! socket.io-parser */ "./node_modules/socket.io-parser/dist/index.js");\nObject.defineProperty(exports, "protocol", ({ enumerable: true, get: function () { return socket_io_parser_1.protocol; } }));\n/**\n * `connect`.\n *\n * @param {String} uri\n * @public\n */\nexports.connect = lookup;\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nvar manager_2 = __webpack_require__(/*! ./manager */ "./node_modules/socket.io-client/build/manager.js");\nObject.defineProperty(exports, "Manager", ({ enumerable: true, get: function () { return manager_2.Manager; } }));\nvar socket_1 = __webpack_require__(/*! ./socket */ "./node_modules/socket.io-client/build/socket.js");\nObject.defineProperty(exports, "Socket", ({ enumerable: true, get: function () { return socket_1.Socket; } }));\nexports.default = lookup;\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/socket.io-client/build/index.js?')},"./node_modules/socket.io-client/build/manager.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.Manager = void 0;\nconst eio = __webpack_require__(/*! engine.io-client */ "./node_modules/engine.io-client/lib/index.js");\nconst socket_1 = __webpack_require__(/*! ./socket */ "./node_modules/socket.io-client/build/socket.js");\nconst parser = __webpack_require__(/*! socket.io-parser */ "./node_modules/socket.io-parser/dist/index.js");\nconst on_1 = __webpack_require__(/*! ./on */ "./node_modules/socket.io-client/build/on.js");\nconst Backoff = __webpack_require__(/*! backo2 */ "./node_modules/backo2/index.js");\nconst typed_events_1 = __webpack_require__(/*! ./typed-events */ "./node_modules/socket.io-client/build/typed-events.js");\nconst debug = __webpack_require__(/*! debug */ "./node_modules/socket.io-client/node_modules/debug/src/browser.js")("socket.io-client:manager");\nclass Manager extends typed_events_1.StrictEventEmitter {\n    constructor(uri, opts) {\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && "object" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || "/socket.io";\n        this.opts = opts;\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor(opts.randomizationFactor || 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = "closed";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it\'s the first time we\'re connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        debug("readyState %s", this._readyState);\n        if (~this._readyState.indexOf("open"))\n            return this;\n        debug("opening %s", this.uri);\n        this.engine = eio(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = "opening";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on_1.on(socket, "open", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on_1.on(socket, "error", (err) => {\n            debug("error");\n            self.cleanup();\n            self._readyState = "closed";\n            this.emitReserved("error", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            debug("connect attempt will timeout after %d", timeout);\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the \'open\' event\n            }\n            // set timer\n            const timer = setTimeout(() => {\n                debug("connect attempt timed out after %d", timeout);\n                openSubDestroy();\n                socket.close();\n                socket.emit("error", new Error("timeout"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        debug("open");\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = "open";\n        this.emitReserved("open");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on_1.on(socket, "ping", this.onping.bind(this)), on_1.on(socket, "data", this.ondata.bind(this)), on_1.on(socket, "error", this.onerror.bind(this)), on_1.on(socket, "close", this.onclose.bind(this)), on_1.on(this.decoder, "decoded", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved("ping");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        this.decoder.add(data);\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        this.emitReserved("packet", packet);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        debug("error", err);\n        this.emitReserved("error", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new socket_1.Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                debug("socket %s is still active, skipping close", nsp);\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        debug("writing packet %j", packet);\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        debug("cleanup");\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        debug("disconnect");\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        if ("opening" === this._readyState) {\n            // `onclose` will not fire because\n            // an open event never happened\n            this.cleanup();\n        }\n        this.backoff.reset();\n        this._readyState = "closed";\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason) {\n        debug("onclose");\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = "closed";\n        this.emitReserved("close", reason);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            debug("reconnect failed");\n            this.backoff.reset();\n            this.emitReserved("reconnect_failed");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            debug("will wait %dms before reconnect attempt", delay);\n            this._reconnecting = true;\n            const timer = setTimeout(() => {\n                if (self.skipReconnect)\n                    return;\n                debug("attempting reconnect");\n                this.emitReserved("reconnect_attempt", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        debug("reconnect attempt error");\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved("reconnect_error", err);\n                    }\n                    else {\n                        debug("reconnect success");\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved("reconnect", attempt);\n    }\n}\nexports.Manager = Manager;\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/socket.io-client/build/manager.js?')},"./node_modules/socket.io-client/build/on.js":(__unused_webpack_module,exports)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.on = void 0;\nfunction on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\nexports.on = on;\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/socket.io-client/build/on.js?')},"./node_modules/socket.io-client/build/socket.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.Socket = void 0;\nconst socket_io_parser_1 = __webpack_require__(/*! socket.io-parser */ "./node_modules/socket.io-parser/dist/index.js");\nconst on_1 = __webpack_require__(/*! ./on */ "./node_modules/socket.io-client/build/on.js");\nconst typed_events_1 = __webpack_require__(/*! ./typed-events */ "./node_modules/socket.io-client/build/typed-events.js");\nconst debug = __webpack_require__(/*! debug */ "./node_modules/socket.io-client/node_modules/debug/src/browser.js")("socket.io-client:socket");\n/**\n * Internal events.\n * These events can\'t be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\nclass Socket extends typed_events_1.StrictEventEmitter {\n    /**\n     * `Socket` constructor.\n     *\n     * @public\n     */\n    constructor(io, nsp, opts) {\n        super();\n        this.receiveBuffer = [];\n        this.sendBuffer = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        this.ids = 0;\n        this.acks = {};\n        this.receiveBuffer = [];\n        this.sendBuffer = [];\n        this.connected = false;\n        this.disconnected = true;\n        this.flags = {};\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on_1.on(io, "open", this.onopen.bind(this)),\n            on_1.on(io, "packet", this.onpacket.bind(this)),\n            on_1.on(io, "error", this.onerror.bind(this)),\n            on_1.on(io, "close", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * "Opens" the socket.\n     *\n     * @public\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io["_reconnecting"])\n            this.io.open(); // ensure open\n        if ("open" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for connect()\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * @return self\n     * @public\n     */\n    send(...args) {\n        args.unshift("message");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it\'s emitted normally.\n     *\n     * @return self\n     * @public\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error(\'"\' + ev + \'" is a reserved event name\');\n        }\n        args.unshift(ev);\n        const packet = {\n            type: socket_io_parser_1.PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if ("function" === typeof args[args.length - 1]) {\n            debug("emitting packet with ack id %d", this.ids);\n            this.acks[this.ids] = args.pop();\n            packet.id = this.ids++;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n            debug("discard packet as the transport is not currently writable");\n        }\n        else if (this.connected) {\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        debug("transport is open - connecting");\n        if (typeof this.auth == "function") {\n            this.auth((data) => {\n                this.packet({ type: socket_io_parser_1.PacketType.CONNECT, data });\n            });\n        }\n        else {\n            this.packet({ type: socket_io_parser_1.PacketType.CONNECT, data: this.auth });\n        }\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved("connect_error", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @private\n     */\n    onclose(reason) {\n        debug("close (%s)", reason);\n        this.connected = false;\n        this.disconnected = true;\n        delete this.id;\n        this.emitReserved("disconnect", reason);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case socket_io_parser_1.PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    const id = packet.data.sid;\n                    this.onconnect(id);\n                }\n                else {\n                    this.emitReserved("connect_error", new Error("It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)"));\n                }\n                break;\n            case socket_io_parser_1.PacketType.EVENT:\n                this.onevent(packet);\n                break;\n            case socket_io_parser_1.PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case socket_io_parser_1.PacketType.ACK:\n                this.onack(packet);\n                break;\n            case socket_io_parser_1.PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case socket_io_parser_1.PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case socket_io_parser_1.PacketType.CONNECT_ERROR:\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved("connect_error", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        debug("emitting event %j", args);\n        if (null != packet.id) {\n            debug("attaching ack callback to event");\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            debug("sending ack %j", args);\n            self.packet({\n                type: socket_io_parser_1.PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if ("function" === typeof ack) {\n            debug("calling ack %s with %j", packet.id, packet.data);\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n            debug("bad ack %s", packet.id);\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id) {\n        debug("socket connected with id %s", id);\n        this.id = id;\n        this.connected = true;\n        this.disconnected = false;\n        this.emitBuffered();\n        this.emitReserved("connect");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => this.packet(packet));\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        debug("server disconnect (%s)", this.nsp);\n        this.destroy();\n        this.onclose("io server disconnect");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don\'t get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io["_destroy"](this);\n    }\n    /**\n     * Disconnects the socket manually.\n     *\n     * @return self\n     * @public\n     */\n    disconnect() {\n        if (this.connected) {\n            debug("performing disconnect (%s)", this.nsp);\n            this.packet({ type: socket_io_parser_1.PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose("io client disconnect");\n        }\n        return this;\n    }\n    /**\n     * Alias for disconnect()\n     *\n     * @return self\n     * @public\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     * @public\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @returns self\n     * @public\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     * @public\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     * @public\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     * @public\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n}\nexports.Socket = Socket;\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/socket.io-client/build/socket.js?')},"./node_modules/socket.io-client/build/typed-events.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.StrictEventEmitter = void 0;\nconst Emitter = __webpack_require__(/*! component-emitter */ "./node_modules/component-emitter/index.js");\n/**\n * Strictly typed version of an `EventEmitter`. A `TypedEventEmitter` takes type\n * parameters for mappings of event names to event data types, and strictly\n * types method calls to the `EventEmitter` according to these event maps.\n *\n * @typeParam ListenEvents - `EventsMap` of user-defined events that can be\n * listened to with `on` or `once`\n * @typeParam EmitEvents - `EventsMap` of user-defined events that can be\n * emitted with `emit`\n * @typeParam ReservedEvents - `EventsMap` of reserved events, that can be\n * emitted by socket.io with `emitReserved`, and can be listened to with\n * `listen`.\n */\nclass StrictEventEmitter extends Emitter {\n    /**\n     * Adds the `listener` function as an event listener for `ev`.\n     *\n     * @param ev Name of the event\n     * @param listener Callback function\n     */\n    on(ev, listener) {\n        super.on(ev, listener);\n        return this;\n    }\n    /**\n     * Adds a one-time `listener` function as an event listener for `ev`.\n     *\n     * @param ev Name of the event\n     * @param listener Callback function\n     */\n    once(ev, listener) {\n        super.once(ev, listener);\n        return this;\n    }\n    /**\n     * Emits an event.\n     *\n     * @param ev Name of the event\n     * @param args Values to send to listeners of this event\n     */\n    emit(ev, ...args) {\n        super.emit(ev, ...args);\n        return this;\n    }\n    /**\n     * Emits a reserved event.\n     *\n     * This method is `protected`, so that only a class extending\n     * `StrictEventEmitter` can emit its own reserved events.\n     *\n     * @param ev Reserved event name\n     * @param args Arguments to emit along with the event\n     */\n    emitReserved(ev, ...args) {\n        super.emit(ev, ...args);\n        return this;\n    }\n    /**\n     * Returns the listeners listening to an event.\n     *\n     * @param event Event name\n     * @returns Array of listeners subscribed to `event`\n     */\n    listeners(event) {\n        return super.listeners(event);\n    }\n}\nexports.StrictEventEmitter = StrictEventEmitter;\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/socket.io-client/build/typed-events.js?')},"./node_modules/socket.io-client/build/url.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.url = void 0;\nconst parseuri = __webpack_require__(/*! parseuri */ "./node_modules/parseuri/index.js");\nconst debug = __webpack_require__(/*! debug */ "./node_modules/socket.io-client/node_modules/debug/src/browser.js")("socket.io-client:url");\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nfunction url(uri, path = "", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== "undefined" && location);\n    if (null == uri)\n        uri = loc.protocol + "//" + loc.host;\n    // relative path support\n    if (typeof uri === "string") {\n        if ("/" === uri.charAt(0)) {\n            if ("/" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            debug("protocol-less url %s", uri);\n            if ("undefined" !== typeof loc) {\n                uri = loc.protocol + "//" + uri;\n            }\n            else {\n                uri = "https://" + uri;\n            }\n        }\n        // parse\n        debug("parse %s", uri);\n        obj = parseuri(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = "80";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = "443";\n        }\n    }\n    obj.path = obj.path || "/";\n    const ipv6 = obj.host.indexOf(":") !== -1;\n    const host = ipv6 ? "[" + obj.host + "]" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + "://" + host + ":" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            "://" +\n            host +\n            (loc && loc.port === obj.port ? "" : ":" + obj.port);\n    return obj;\n}\nexports.url = url;\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/socket.io-client/build/url.js?')},"./node_modules/socket.io-client/node_modules/debug/src/browser.js":(module,exports,__webpack_require__)=>{eval("/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = __webpack_require__(/*! ./common */ \"./node_modules/socket.io-client/node_modules/debug/src/common.js\")(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/socket.io-client/node_modules/debug/src/browser.js?")},"./node_modules/socket.io-client/node_modules/debug/src/common.js":(module,__unused_webpack_exports,__webpack_require__)=>{eval("\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = __webpack_require__(/*! ms */ \"./node_modules/socket.io-client/node_modules/ms/index.js\");\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/socket.io-client/node_modules/debug/src/common.js?")},"./node_modules/socket.io-client/node_modules/ms/index.js":module=>{eval("/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/socket.io-client/node_modules/ms/index.js?")},"./node_modules/socket.io-parser/dist/binary.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.reconstructPacket = exports.deconstructPacket = void 0;\nconst is_binary_1 = __webpack_require__(/*! ./is-binary */ "./node_modules/socket.io-parser/dist/is-binary.js");\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nfunction deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary \'attachments\'\n    return { packet: pack, buffers: buffers };\n}\nexports.deconstructPacket = deconstructPacket;\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (is_binary_1.isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === "object" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (data.hasOwnProperty(key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nfunction reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    packet.attachments = undefined; // no longer useful\n    return packet;\n}\nexports.reconstructPacket = reconstructPacket;\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder) {\n        return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === "object") {\n        for (const key in data) {\n            if (data.hasOwnProperty(key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/socket.io-parser/dist/binary.js?')},"./node_modules/socket.io-parser/dist/index.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.Decoder = exports.Encoder = exports.PacketType = exports.protocol = void 0;\nconst Emitter = __webpack_require__(/*! component-emitter */ "./node_modules/component-emitter/index.js");\nconst binary_1 = __webpack_require__(/*! ./binary */ "./node_modules/socket.io-parser/dist/binary.js");\nconst is_binary_1 = __webpack_require__(/*! ./is-binary */ "./node_modules/socket.io-parser/dist/is-binary.js");\nconst debug = __webpack_require__(/*! debug */ "./node_modules/socket.io-parser/node_modules/debug/src/browser.js")("socket.io-parser");\n/**\n * Protocol version.\n *\n * @public\n */\nexports.protocol = 5;\nvar PacketType;\n(function (PacketType) {\n    PacketType[PacketType["CONNECT"] = 0] = "CONNECT";\n    PacketType[PacketType["DISCONNECT"] = 1] = "DISCONNECT";\n    PacketType[PacketType["EVENT"] = 2] = "EVENT";\n    PacketType[PacketType["ACK"] = 3] = "ACK";\n    PacketType[PacketType["CONNECT_ERROR"] = 4] = "CONNECT_ERROR";\n    PacketType[PacketType["BINARY_EVENT"] = 5] = "BINARY_EVENT";\n    PacketType[PacketType["BINARY_ACK"] = 6] = "BINARY_ACK";\n})(PacketType = exports.PacketType || (exports.PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nclass Encoder {\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        debug("encoding packet %j", obj);\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (is_binary_1.hasBinary(obj)) {\n                obj.type =\n                    obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK;\n                return this.encodeAsBinary(obj);\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = "" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + "-";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && "/" !== obj.nsp) {\n            str += obj.nsp + ",";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data);\n        }\n        debug("encoded %j as %s", obj, str);\n        return str;\n    }\n    /**\n     * Encode packet as \'buffer sequence\' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = binary_1.deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\nexports.Encoder = Encoder;\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nclass Decoder extends Emitter {\n    constructor() {\n        super();\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === "string") {\n            packet = this.decodeString(obj);\n            if (packet.type === PacketType.BINARY_EVENT ||\n                packet.type === PacketType.BINARY_ACK) {\n                // binary packet\'s json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emit("decoded", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emit("decoded", packet);\n            }\n        }\n        else if (is_binary_1.isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error("got binary data when not reconstructing a packet");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emit("decoded", packet);\n                }\n            }\n        }\n        else {\n            throw new Error("Unknown type: " + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error("unknown packet type " + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== "-" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== "-") {\n                throw new Error("Illegal attachments");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if ("/" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if ("," === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = "/";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if ("" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error("invalid payload");\n            }\n        }\n        debug("decoded %s as %j", str, p);\n        return p;\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === "object";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === "string" || typeof payload === "object";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser\'s resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n        }\n    }\n}\nexports.Decoder = Decoder;\nfunction tryParse(str) {\n    try {\n        return JSON.parse(str);\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * A manager of a binary event\'s \'buffer sequence\'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = binary_1.reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/socket.io-parser/dist/index.js?')},"./node_modules/socket.io-parser/dist/is-binary.js":(__unused_webpack_module,exports)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.hasBinary = exports.isBinary = void 0;\nconst withNativeArrayBuffer = typeof ArrayBuffer === "function";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === "function"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === "function" ||\n    (typeof Blob !== "undefined" &&\n        toString.call(Blob) === "[object BlobConstructor]");\nconst withNativeFile = typeof File === "function" ||\n    (typeof File !== "undefined" &&\n        toString.call(File) === "[object FileConstructor]");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nfunction isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexports.isBinary = isBinary;\nfunction hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== "object") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === "function" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\nexports.hasBinary = hasBinary;\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/socket.io-parser/dist/is-binary.js?')},"./node_modules/socket.io-parser/node_modules/debug/src/browser.js":(module,exports,__webpack_require__)=>{eval("/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = __webpack_require__(/*! ./common */ \"./node_modules/socket.io-parser/node_modules/debug/src/common.js\")(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/socket.io-parser/node_modules/debug/src/browser.js?")},"./node_modules/socket.io-parser/node_modules/debug/src/common.js":(module,__unused_webpack_exports,__webpack_require__)=>{eval("\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = __webpack_require__(/*! ms */ \"./node_modules/socket.io-parser/node_modules/ms/index.js\");\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/socket.io-parser/node_modules/debug/src/common.js?")},"./node_modules/socket.io-parser/node_modules/ms/index.js":module=>{eval("/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/socket.io-parser/node_modules/ms/index.js?")},"./node_modules/yeast/index.js":module=>{"use strict";eval("\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n  , length = 64\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n  var now = encode(+new Date());\n\n  if (now !== prev) return seed = 0, prev = now;\n  return now +'.'+ encode(seed++);\n}\n\n//\n// Map each character to its index.\n//\nfor (; i < length; i++) map[alphabet[i]] = i;\n\n//\n// Expose the `yeast`, `encode` and `decode` functions.\n//\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;\n\n\n//# sourceURL=webpack://zibox2-sdk/./node_modules/yeast/index.js?")}},__webpack_module_cache__={},inProgress,dataWebpackPrefix;function __webpack_require__(e){var n=__webpack_module_cache__[e];if(void 0!==n){if(void 0!==n.error)throw n.error;return n.exports}var t=__webpack_module_cache__[e]={exports:{}};try{var r={id:e,module:t,factory:__webpack_modules__[e],require:__webpack_require__};__webpack_require__.i.forEach((function(e){e(r)})),t=r.module,r.factory.call(t.exports,t,t.exports,r.require)}catch(e){throw t.error=e,e}return t.exports}__webpack_require__.m=__webpack_modules__,__webpack_require__.c=__webpack_module_cache__,__webpack_require__.i=[],__webpack_require__.hu=e=>e+"."+__webpack_require__.h()+".hot-update.js",__webpack_require__.hmrF=()=>"main."+__webpack_require__.h()+".hot-update.json",__webpack_require__.h=()=>"ed00f8174430980be9e0",__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),__webpack_require__.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),inProgress={},dataWebpackPrefix="zibox2-sdk:",__webpack_require__.l=(e,n,t,r)=>{if(inProgress[e])inProgress[e].push(n);else{var a,i;if(void 0!==t)for(var o=document.getElementsByTagName("script"),s=0;s<o.length;s++){var c=o[s];if(c.getAttribute("src")==e||c.getAttribute("data-webpack")==dataWebpackPrefix+t){a=c;break}}a||(i=!0,(a=document.createElement("script")).charset="utf-8",a.timeout=120,__webpack_require__.nc&&a.setAttribute("nonce",__webpack_require__.nc),a.setAttribute("data-webpack",dataWebpackPrefix+t),a.src=e),inProgress[e]=[n];var l=(n,t)=>{a.onerror=a.onload=null,clearTimeout(u);var r=inProgress[e];if(delete inProgress[e],a.parentNode&&a.parentNode.removeChild(a),r&&r.forEach((e=>e(t))),n)return n(t)},u=setTimeout(l.bind(null,void 0,{type:"timeout",target:a}),12e4);a.onerror=l.bind(null,a.onerror),a.onload=l.bind(null,a.onload),i&&document.head.appendChild(a)}},(()=>{var e,n,t,r,a={},i=__webpack_require__.c,o=[],s=[],c="idle";function l(e){c=e;for(var n=0;n<s.length;n++)s[n].call(null,e)}function u(e){if(0===n.length)return e();var t=n;return n=[],Promise.all(t).then((function(){return u(e)}))}function d(e){if("idle"!==c)throw new Error("check() is only allowed in idle status");return l("check"),__webpack_require__.hmrM().then((function(r){if(!r)return l(h()?"ready":"idle"),null;l("prepare");var a=[];return n=[],t=[],Promise.all(Object.keys(__webpack_require__.hmrC).reduce((function(e,n){return __webpack_require__.hmrC[n](r.c,r.r,r.m,e,t,a),e}),[])).then((function(){return u((function(){return e?p(e):(l("ready"),a)}))}))}))}function f(e){return"ready"!==c?Promise.resolve().then((function(){throw new Error("apply() is only allowed in ready status")})):p(e)}function p(e){e=e||{},h();var n=t.map((function(n){return n(e)}));t=void 0;var a,i=n.map((function(e){return e.error})).filter(Boolean);if(i.length>0)return l("abort"),Promise.resolve().then((function(){throw i[0]}));l("dispose"),n.forEach((function(e){e.dispose&&e.dispose()})),l("apply");var o=function(e){a||(a=e)},s=[];return n.forEach((function(e){if(e.apply){var n=e.apply(o);if(n)for(var t=0;t<n.length;t++)s.push(n[t])}})),a?(l("fail"),Promise.resolve().then((function(){throw a}))):r?p(e).then((function(e){return s.forEach((function(n){e.indexOf(n)<0&&e.push(n)})),e})):(l("idle"),Promise.resolve(s))}function h(){if(r)return t||(t=[]),Object.keys(__webpack_require__.hmrI).forEach((function(e){r.forEach((function(n){__webpack_require__.hmrI[e](n,t)}))})),r=void 0,!0}__webpack_require__.hmrD=a,__webpack_require__.i.push((function(p){var h,m,b,g,_=p.module,v=function(t,r){var a=i[r];if(!a)return t;var s=function(n){if(a.hot.active){if(i[n]){var s=i[n].parents;-1===s.indexOf(r)&&s.push(r)}else o=[r],e=n;-1===a.children.indexOf(n)&&a.children.push(n)}else console.warn("[HMR] unexpected require("+n+") from disposed module "+r),o=[];return t(n)},d=function(e){return{configurable:!0,enumerable:!0,get:function(){return t[e]},set:function(n){t[e]=n}}};for(var f in t)Object.prototype.hasOwnProperty.call(t,f)&&"e"!==f&&Object.defineProperty(s,f,d(f));return s.e=function(e){return function(e){switch(c){case"ready":return l("prepare"),n.push(e),u((function(){l("ready")})),e;case"prepare":return n.push(e),e;default:return e}}(t.e(e))},s}(p.require,p.id);_.hot=(h=p.id,m=_,g={_acceptedDependencies:{},_acceptedErrorHandlers:{},_declinedDependencies:{},_selfAccepted:!1,_selfDeclined:!1,_selfInvalidated:!1,_disposeHandlers:[],_main:b=e!==h,_requireSelf:function(){o=m.parents.slice(),e=b?void 0:h,__webpack_require__(h)},active:!0,accept:function(e,n,t){if(void 0===e)g._selfAccepted=!0;else if("function"==typeof e)g._selfAccepted=e;else if("object"==typeof e&&null!==e)for(var r=0;r<e.length;r++)g._acceptedDependencies[e[r]]=n||function(){},g._acceptedErrorHandlers[e[r]]=t;else g._acceptedDependencies[e]=n||function(){},g._acceptedErrorHandlers[e]=t},decline:function(e){if(void 0===e)g._selfDeclined=!0;else if("object"==typeof e&&null!==e)for(var n=0;n<e.length;n++)g._declinedDependencies[e[n]]=!0;else g._declinedDependencies[e]=!0},dispose:function(e){g._disposeHandlers.push(e)},addDisposeHandler:function(e){g._disposeHandlers.push(e)},removeDisposeHandler:function(e){var n=g._disposeHandlers.indexOf(e);n>=0&&g._disposeHandlers.splice(n,1)},invalidate:function(){switch(this._selfInvalidated=!0,c){case"idle":t=[],Object.keys(__webpack_require__.hmrI).forEach((function(e){__webpack_require__.hmrI[e](h,t)})),l("ready");break;case"ready":Object.keys(__webpack_require__.hmrI).forEach((function(e){__webpack_require__.hmrI[e](h,t)}));break;case"prepare":case"check":case"dispose":case"apply":(r=r||[]).push(h)}},check:d,apply:f,status:function(e){if(!e)return c;s.push(e)},addStatusHandler:function(e){s.push(e)},removeStatusHandler:function(e){var n=s.indexOf(e);n>=0&&s.splice(n,1)},data:a[h]},e=void 0,g),_.parents=o,_.children=[],o=[],p.require=v})),__webpack_require__.hmrC={},__webpack_require__.hmrI={}})(),(()=>{var e;__webpack_require__.g.importScripts&&(e=__webpack_require__.g.location+"");var n=__webpack_require__.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var t=n.getElementsByTagName("script");t.length&&(e=t[t.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),__webpack_require__.p=e})(),(()=>{var e,n,t,r,a={main:0},i={};function o(e){return new Promise(((n,t)=>{i[e]=n;var r=__webpack_require__.p+__webpack_require__.hu(e),a=new Error;__webpack_require__.l(r,(n=>{if(i[e]){i[e]=void 0;var r=n&&("load"===n.type?"missing":n.type),o=n&&n.target&&n.target.src;a.message="Loading hot update chunk "+e+" failed.\n("+r+": "+o+")",a.name="ChunkLoadError",a.type=r,a.request=o,t(a)}}))}))}function s(i){function o(e){for(var n=[e],t={},r=n.map((function(e){return{chain:[e],id:e}}));r.length>0;){var a=r.pop(),i=a.id,o=a.chain,c=__webpack_require__.c[i];if(c&&(!c.hot._selfAccepted||c.hot._selfInvalidated)){if(c.hot._selfDeclined)return{type:"self-declined",chain:o,moduleId:i};if(c.hot._main)return{type:"unaccepted",chain:o,moduleId:i};for(var l=0;l<c.parents.length;l++){var u=c.parents[l],d=__webpack_require__.c[u];if(d){if(d.hot._declinedDependencies[i])return{type:"declined",chain:o.concat([u]),moduleId:i,parentId:u};-1===n.indexOf(u)&&(d.hot._acceptedDependencies[i]?(t[u]||(t[u]=[]),s(t[u],[i])):(delete t[u],n.push(u),r.push({chain:o.concat([u]),id:u})))}}}}return{type:"accepted",moduleId:e,outdatedModules:n,outdatedDependencies:t}}function s(e,n){for(var t=0;t<n.length;t++){var r=n[t];-1===e.indexOf(r)&&e.push(r)}}__webpack_require__.f&&delete __webpack_require__.f.jsonpHmr,e=void 0;var c={},l=[],u={},d=function(e){console.warn("[HMR] unexpected require("+e.id+") to disposed module")};for(var f in n)if(__webpack_require__.o(n,f)){var p,h=n[f],m=!1,b=!1,g=!1,_="";switch((p=h?o(f):{type:"disposed",moduleId:f}).chain&&(_="\nUpdate propagation: "+p.chain.join(" -> ")),p.type){case"self-declined":i.onDeclined&&i.onDeclined(p),i.ignoreDeclined||(m=new Error("Aborted because of self decline: "+p.moduleId+_));break;case"declined":i.onDeclined&&i.onDeclined(p),i.ignoreDeclined||(m=new Error("Aborted because of declined dependency: "+p.moduleId+" in "+p.parentId+_));break;case"unaccepted":i.onUnaccepted&&i.onUnaccepted(p),i.ignoreUnaccepted||(m=new Error("Aborted because "+f+" is not accepted"+_));break;case"accepted":i.onAccepted&&i.onAccepted(p),b=!0;break;case"disposed":i.onDisposed&&i.onDisposed(p),g=!0;break;default:throw new Error("Unexception type "+p.type)}if(m)return{error:m};if(b)for(f in u[f]=h,s(l,p.outdatedModules),p.outdatedDependencies)__webpack_require__.o(p.outdatedDependencies,f)&&(c[f]||(c[f]=[]),s(c[f],p.outdatedDependencies[f]));g&&(s(l,[p.moduleId]),u[f]=d)}n=void 0;for(var v,y=[],w=0;w<l.length;w++){var k=l[w],x=__webpack_require__.c[k];x&&(x.hot._selfAccepted||x.hot._main)&&u[k]!==d&&!x.hot._selfInvalidated&&y.push({module:k,require:x.hot._requireSelf,errorHandler:x.hot._selfAccepted})}return{dispose:function(){var e;t.forEach((function(e){delete a[e]})),t=void 0;for(var n,r=l.slice();r.length>0;){var i=r.pop(),o=__webpack_require__.c[i];if(o){var s={},u=o.hot._disposeHandlers;for(w=0;w<u.length;w++)u[w].call(null,s);for(__webpack_require__.hmrD[i]=s,o.hot.active=!1,delete __webpack_require__.c[i],delete c[i],w=0;w<o.children.length;w++){var d=__webpack_require__.c[o.children[w]];d&&((e=d.parents.indexOf(i))>=0&&d.parents.splice(e,1))}}}for(var f in c)if(__webpack_require__.o(c,f)&&(o=__webpack_require__.c[f]))for(v=c[f],w=0;w<v.length;w++)n=v[w],(e=o.children.indexOf(n))>=0&&o.children.splice(e,1)},apply:function(e){for(var n in u)__webpack_require__.o(u,n)&&(__webpack_require__.m[n]=u[n]);for(var t=0;t<r.length;t++)r[t](__webpack_require__);for(var a in c)if(__webpack_require__.o(c,a)){var o=__webpack_require__.c[a];if(o){v=c[a];for(var s=[],d=[],f=[],p=0;p<v.length;p++){var h=v[p],m=o.hot._acceptedDependencies[h],b=o.hot._acceptedErrorHandlers[h];if(m){if(-1!==s.indexOf(m))continue;s.push(m),d.push(b),f.push(h)}}for(var g=0;g<s.length;g++)try{s[g].call(null,v)}catch(n){if("function"==typeof d[g])try{d[g](n,{moduleId:a,dependencyId:f[g]})}catch(t){i.onErrored&&i.onErrored({type:"accept-error-handler-errored",moduleId:a,dependencyId:f[g],error:t,originalError:n}),i.ignoreErrored||(e(t),e(n))}else i.onErrored&&i.onErrored({type:"accept-errored",moduleId:a,dependencyId:f[g],error:n}),i.ignoreErrored||e(n)}}}for(var _=0;_<y.length;_++){var w=y[_],k=w.module;try{w.require(k)}catch(n){if("function"==typeof w.errorHandler)try{w.errorHandler(n,{moduleId:k,module:__webpack_require__.c[k]})}catch(t){i.onErrored&&i.onErrored({type:"self-accept-error-handler-errored",moduleId:k,error:t,originalError:n}),i.ignoreErrored||(e(t),e(n))}else i.onErrored&&i.onErrored({type:"self-accept-errored",moduleId:k,error:n}),i.ignoreErrored||e(n)}}return l}}}self.webpackHotUpdatezibox2_sdk=(e,t,a)=>{for(var o in t)__webpack_require__.o(t,o)&&(n[o]=t[o]);a&&r.push(a),i[e]&&(i[e](),i[e]=void 0)},__webpack_require__.hmrI.jsonp=function(e,a){n||(n={},r=[],t=[],a.push(s)),__webpack_require__.o(n,e)||(n[e]=__webpack_require__.m[e])},__webpack_require__.hmrC.jsonp=function(i,c,l,u,d,f){d.push(s),e={},t=c,n=l.reduce((function(e,n){return e[n]=!1,e}),{}),r=[],i.forEach((function(n){__webpack_require__.o(a,n)&&void 0!==a[n]&&(u.push(o(n)),e[n]=!0)})),__webpack_require__.f&&(__webpack_require__.f.jsonpHmr=function(n,t){e&&!__webpack_require__.o(e,n)&&__webpack_require__.o(a,n)&&void 0!==a[n]&&(t.push(o(n)),e[n]=!0)})},__webpack_require__.hmrM=()=>{if("undefined"==typeof fetch)throw new Error("No browser support: need fetch API");return fetch(__webpack_require__.p+__webpack_require__.hmrF()).then((e=>{if(404!==e.status){if(!e.ok)throw new Error("Failed to fetch update manifest "+e.statusText);return e.json()}}))}})();var __webpack_exports__=__webpack_require__("./src/index.js")})();